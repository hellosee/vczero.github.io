__DEV__ = 
false;


__BUNDLE_START_TIME__ = Date.now();
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={},






dependencyMap={},



predefinedRefCounts={},

_counter=0,

REQUIRE_WHEN_READY=1,
USED_AS_TRANSPORT=2,

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii,name,module,dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0;ii < module.dependencies.length;ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited,name)){
unresolved.push(name);}


var messages=[];
for(ii = 0;ii < unresolved.length;ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0;jj < module.dependencies.length;jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
var _inGuard=false;
























































function require(id){
var module=modulesMap[id],dep,i,msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}

if(global.ErrorUtils && !_inGuard){
_inGuard = true;
try{
var ret=require.apply(this,arguments);}
catch(e) {
global.ErrorUtils.reportFatalError(e);}

_inGuard = false;
return ret;}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[],
dependencies=module.dependencies,
length=dependencies.length,
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length,factory.length);}

try{
for(i = 0;args.length < length;i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null,dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global,args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null,'ex');
var erx=require.call(null,'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null,messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};

























































function define(id,dependencies,factory,
_special,_context,_refCount,_inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this,id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0;ii < module.dependencies.length;ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}













































function requireLazy(dependencies,factory,context){
return define(
dependencies,
factory,
undefined,
REQUIRE_WHEN_READY,
context,
1);}



function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module,dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep,i,subdep;


for(i = 0;i < module.dependencies.length;i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module,dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module,subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule,subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0;i < modulesToRequire.length;i++) {
require.call(null,modulesToRequire[i]);}}



function _register(id,exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module',0);
_register('exports',0);

_register('global',global);
_register('require',require);
_register('requireDynamic',require);
_register('requireLazy',requireLazy);

global.require = require;
global.requireDynamic = require;
global.requireLazy = requireLazy;

require.__debug = {
modules:modulesMap,
deps:dependencyMap,
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id,deps,factory,_special,_inlineRequires){
var defaultDeps=['global','require','requireDynamic','requireLazy',
'module','exports'];
define(id,defaultDeps.concat(deps),factory,_special || USED_AS_TRANSPORT,
null,null,_inlineRequires);};})(


this);
Object.

















assign = function(target,sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=(function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg === 'boolean';}


function isNull(arg){
return arg === null;}


function isNullOrUndefined(arg){
return arg == null;}


function isNumber(arg){
return typeof arg === 'number';}


function isString(arg){
return typeof arg === 'string';}


function isSymbol(arg){
return typeof arg === 'symbol';}


function isUndefined(arg){
return arg === void 0;}


function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}


function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}


function isFunction(arg){
return typeof arg === 'function';}


function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;})();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
log:1,
info:2,
warn:3,
error:4};


function setupConsole(global){
if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');
global.nativeLoggingHook(str,level);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('',LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i] = k.length;
for(var j=0;j < rows.length;j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i < rows.length;i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'),LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.log),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;},

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context || this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString,start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search),pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0;i < length;i++) {
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index === -1?undefined:this[index];}});}})();
__d('catapp/index.ios.js',["AdSupportIOS","react-native/Libraries/react-native/react-native.js","catapp/views/home.js","catapp/views/about.js","catapp/views/manager.js","catapp/views/message.js","catapp/views/util.js","catapp/views/service.js","catapp/Nearby/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
var React=require('react-native/Libraries/react-native/react-native.js');
var AdSupportIOS=require('AdSupportIOS');
var Home=require('catapp/views/home.js');
var About=require('catapp/views/about.js');
var Manager=require('catapp/views/manager.js');
var Message=require('catapp/views/message.js');
var Util=require('catapp/views/util.js');
var Service=require('catapp/views/service.js');var 


StyleSheet=














React.StyleSheet;var View=React.View;var TabBarIOS=React.TabBarIOS;var Text=React.Text;var NavigatorIOS=React.NavigatorIOS;var AppRegistry=React.AppRegistry;var Image=React.Image;var TextInput=React.TextInput;var StatusBarIOS=React.StatusBarIOS;var ScrollView=React.ScrollView;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var AlertIOS=React.AlertIOS;var AsyncStorage=React.AsyncStorage;var LinkingIOS=React.LinkingIOS;

alert('Hello');


var Address=React.createClass({

render:function(){
return (
React.createElement(View,{style:{flex:1}},
React.createElement(Text,{onPress:function(){LinkingIOS.openURL('tel://' + 13127644567);}},'电话'),
React.createElement(Text,{onPress:function(){LinkingIOS.openURL('sms://' + 13127644567);}},'短信'),
React.createElement(Text,{onPress:function(){LinkingIOS.openURL('mailto://' + 'wlhmyit@126.com');}},'邮件')));}});






var styles=StyleSheet.create({
container:{
marginTop:50,
alignItems:'center'},

logo:{
width:100,
height:100,
resizeMode:Image.resizeMode.contain},

inputRow:{
flexDirection:'row',
alignItems:'center',
justifyContent:'center',
marginBottom:10},

input:{
marginLeft:10,
width:220,
borderWidth:Util.pixel,
height:35,
paddingLeft:8,
borderRadius:5,
borderColor:'#ccc'},

btn:{
marginTop:10,
width:80,
height:35,
backgroundColor:'#3BC1FF',
justifyContent:'center',
alignItems:'center',
borderRadius:4}});



var NearBy=require('catapp/Nearby/index.js');

AppRegistry.registerComponent('catapp',function(){return NearBy;});
});
__d('react-native/Libraries/react-native/react-native.js',["React","ActivityIndicatorIOS","DatePickerIOS","Image","ListView","MapView","Modal","Navigator","NavigatorIOS","PickerIOS","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchIOS","TabBarIOS","Text","TextInput","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","View","WebView","ActionSheetIOS","AdSupportIOS","AlertIOS","Animated","AppRegistry","AppStateIOS","AsyncStorage","CameraRoll","Dimensions","Easing","ImagePickerIOS","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","Settings","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","Platform","requireNativeComponent","EdgeInsetsPropType","PointPropType","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')),{

ActivityIndicatorIOS:require('ActivityIndicatorIOS'),
DatePickerIOS:require('DatePickerIOS'),
Image:require('Image'),
ListView:require('ListView'),
MapView:require('MapView'),
Modal:require('Modal'),
Navigator:require('Navigator'),
NavigatorIOS:require('NavigatorIOS'),
PickerIOS:require('PickerIOS'),
ProgressViewIOS:require('ProgressViewIOS'),
ScrollView:require('ScrollView'),
SegmentedControlIOS:require('SegmentedControlIOS'),
SliderIOS:require('SliderIOS'),
SwitchIOS:require('SwitchIOS'),
TabBarIOS:require('TabBarIOS'),
Text:require('Text'),
TextInput:require('TextInput'),
TouchableHighlight:require('TouchableHighlight'),
TouchableOpacity:require('TouchableOpacity'),
TouchableWithoutFeedback:require('TouchableWithoutFeedback'),
View:require('View'),
WebView:require('WebView'),


ActionSheetIOS:require('ActionSheetIOS'),
AdSupportIOS:require('AdSupportIOS'),
AlertIOS:require('AlertIOS'),
Animated:require('Animated'),
AppRegistry:require('AppRegistry'),
AppStateIOS:require('AppStateIOS'),
AsyncStorage:require('AsyncStorage'),
CameraRoll:require('CameraRoll'),
Dimensions:require('Dimensions'),
Easing:require('Easing'),
ImagePickerIOS:require('ImagePickerIOS'),
InteractionManager:require('InteractionManager'),
LayoutAnimation:require('LayoutAnimation'),
LinkingIOS:require('LinkingIOS'),
NetInfo:require('NetInfo'),
PanResponder:require('PanResponder'),
PixelRatio:require('PixelRatio'),
PushNotificationIOS:require('PushNotificationIOS'),
Settings:require('Settings'),
StatusBarIOS:require('StatusBarIOS'),
StyleSheet:require('StyleSheet'),
VibrationIOS:require('VibrationIOS'),


DeviceEventEmitter:require('RCTDeviceEventEmitter'),
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'),
NativeModules:require('NativeModules'),
Platform:require('Platform'),
requireNativeComponent:require('requireNativeComponent'),


EdgeInsetsPropType:require('EdgeInsetsPropType'),
PointPropType:require('PointPropType'),

addons:{
LinkedStateMixin:require('LinkedStateMixin'),
Perf:undefined,
PureRenderMixin:require('ReactComponentWithPureRenderMixin'),
TestModule:require('NativeModules').TestModule,
TestUtils:undefined,
batchedUpdates:require('ReactUpdates').batchedUpdates,
cloneWithProps:require('cloneWithProps'),
createFragment:require('ReactFragment').create,
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;
});
__d('React',["EventPluginUtils","ReactChildren","ReactComponent","ReactClass","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactDOM","ReactDOMTextComponent","ReactDefaultInjection","ReactInstanceHandles","ReactMount","ReactPerf","ReactPropTypes","ReactReconciler","ReactServerRendering","Object.assign","findDOMNode","onlyChild","ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var EventPluginUtils=require('EventPluginUtils');
var ReactChildren=require('ReactChildren');
var ReactComponent=require('ReactComponent');
var ReactClass=require('ReactClass');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactDOM=require('ReactDOM');
var ReactDOMTextComponent=require('ReactDOMTextComponent');
var ReactDefaultInjection=require('ReactDefaultInjection');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');
var ReactPropTypes=require('ReactPropTypes');
var ReactReconciler=require('ReactReconciler');
var ReactServerRendering=require('ReactServerRendering');

var assign=require('Object.assign');
var findDOMNode=require('findDOMNode');
var onlyChild=require('onlyChild');

ReactDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var render=ReactPerf.measure('React','render',ReactMount.render);

var React={
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
DOM:ReactDOM,
PropTypes:ReactPropTypes,
initializeTouchEvents:function(shouldUseTouch){
EventPluginUtils.useTouchEvents = shouldUseTouch;},

createClass:ReactClass.createClass,
createElement:createElement,
cloneElement:cloneElement,
createFactory:createFactory,
createMixin:function(mixin){

return mixin;},

constructAndRenderComponent:ReactMount.constructAndRenderComponent,
constructAndRenderComponentByID:ReactMount.constructAndRenderComponentByID,
findDOMNode:findDOMNode,
render:render,
renderToString:ReactServerRendering.renderToString,
renderToStaticMarkup:ReactServerRendering.renderToStaticMarkup,
unmountComponentAtNode:ReactMount.unmountComponentAtNode,
isValidElement:ReactElement.isValidElement,
withContext:ReactContext.withContext,


__spread:assign};




if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactMount,
Reconciler:ReactReconciler,
TextComponent:ReactDOMTextComponent});}



if(__DEV__){
var ExecutionEnvironment=require('ExecutionEnvironment');
if(ExecutionEnvironment.canUseDOM && window.top === window.self){



if(navigator.userAgent.indexOf('Chrome') > -1){
if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined'){
console.debug(
'Download the React DevTools for a better development experience: ' + 
'http://fb.me/react-devtools');}}




var expectedFeatures=[

Array.isArray,
Array.prototype.every,
Array.prototype.forEach,
Array.prototype.indexOf,
Array.prototype.map,
Date.now,
Function.prototype.bind,
Object.keys,
String.prototype.split,
String.prototype.trim,


Object.create,
Object.freeze];


for(var i=0;i < expectedFeatures.length;i++) {
if(!expectedFeatures[i]){
console.error(
'One or more ES5 shim/shams expected by React are not available: ' + 
'http://fb.me/react-warning-polyfills');

break;}}}}





React.version = '0.13.2';

module.exports = React;
});
__d('EventPluginUtils',["EventConstants","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
invariant(
InjectedMount && InjectedMount.getNode,
'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 
'is missing getNode.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

invariant(
idsIsArr === listenersIsArr && IDsLen === listenersLen,
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event,cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


cb(event,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event,dispatchListeners,dispatchIDs);}}









function executeDispatch(event,listener,domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event,domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event,cb){
forEachEventDispatch(event,cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatch:executeDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,
injection:injection,
useTouchEvents:false};


module.exports = EventPluginUtils;
});
__d('EventConstants',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topBlur:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topReset:null,
topScroll:null,
topSelectionChange:null,
topSubmit:null,
topTextInput:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports = EventConstants;
});
__d('keyMirror',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;
});
__d('invariant',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction,forEachContext){
this.forEachFunction = forEachFunction;
this.forEachContext = forEachContext;}

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(traverseContext,child,name,i){
var forEachBookKeeping=traverseContext;
forEachBookKeeping.forEachFunction.call(
forEachBookKeeping.forEachContext,child,i);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult,mapFunction,mapContext){
this.mapResult = mapResult;
this.mapFunction = mapFunction;
this.mapContext = mapContext;}

PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext,child,name,i){
var mapBookKeeping=traverseContext;
var mapResult=mapBookKeeping.mapResult;

var keyUnique=!mapResult.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique,
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}



if(keyUnique){
var mappedChild=
mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext,child,i);
mapResult[name] = mappedChild;}}

















function mapChildren(children,func,context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult,func,context);
traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext,child,name,i){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}


var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
count:countChildren};


module.exports = ReactChildren;
});
__d('PooledClass',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;
});
__d('ReactFragment',["ReactElement","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









if(__DEV__){
var fragmentKey='_reactFragment';
var didWarnKey='_reactDidWarn';
var canWarnForReactFragment=false;

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{},
fragmentKey,
{enumerable:false,value:true});


Object.defineProperty(
{},
'key',
{enumerable:true,get:dummy});


canWarnForReactFragment = true;}
catch(x) {}

var proxyPropertyAccessWithWarning=function(obj,key){
Object.defineProperty(obj,key,{
enumerable:true,
get:function(){
warning(
this[didWarnKey],
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];},

set:function(value){
warning(
this[didWarnKey],
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object.',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy,fragmentKey,{
enumerable:false,
value:object});

Object.defineProperty(proxy,didWarnKey,{
writable:true,
enumerable:false,
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy,key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;},



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment),
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;},




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;
});
__d('ReactElement',["ReactContext","ReactCurrentOwner","Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');
var warning=require('warning');

var RESERVED_PROPS={
key:true,
ref:true};









function defineWarningProperty(object,key){
Object.defineProperty(object,key,{

configurable:false,
enumerable:true,

get:function(){
if(!this._store){
return null;}

return this._store[key];},


set:function(value){
warning(
false,
'Don\'t set the %s property of the React element. Instead, ' + 
'specify the correct value when initially creating the element.',
key);

this._store[key] = value;}});}








var useMutationMembrane=false;







function defineMutationMembrane(prototype){
try{
var pseudoFrozenProperties={
props:true};

for(var key in pseudoFrozenProperties) {
defineWarningProperty(prototype,key);}

useMutationMembrane = true;}
catch(x) {}}














var ReactElement=function(type,key,ref,owner,context,props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;



this._context = context;

if(__DEV__){




this._store = {props:props,originalProps:assign({},props)};





try{
Object.defineProperty(this._store,'validated',{
configurable:false,
enumerable:false,
writable:true});}

catch(x) {}

this._store.validated = false;




if(useMutationMembrane){
Object.freeze(this);
return;}}



this.props = props;};




ReactElement.prototype = {
_isReactElement:true};


if(__DEV__){
defineMutationMembrane(ReactElement.prototype);}


ReactElement.createElement = function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type,
key,
ref,
ReactCurrentOwner.current,
ReactContext.current,
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement,newProps){
var newElement=new ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._owner,
oldElement._context,
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}

return newElement;};


ReactElement.cloneElement = function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type,
key,
ref,
owner,
element._context,
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;
});
__d('ReactContext',["Object.assign","emptyObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var warning=require('warning');

var didWarn=false;







var ReactContext={





current:emptyObject,

















withContext:function(newContext,scopedCallback){
if(__DEV__){
warning(
didWarn,
'withContext is deprecated and will be removed in a future version. ' + 
'Use a wrapper component with getChildContext instead.');


didWarn = true;}


var result;
var previousContext=ReactContext.current;
ReactContext.current = assign({},previousContext,newContext);
try{
result = scopedCallback();}finally 
{
ReactContext.current = previousContext;}

return result;}};




module.exports = ReactContext;
});
__d('Object.assign',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('emptyObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;
});
__d('warning',["emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition,format){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.length < 10 || /^[s\W]*$/.test(format)){
throw new Error(
'The warning format should be able to uniquely identify this ' + 
'warning. Please, use a more descriptive format than: ' + format);}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g,function(){return args[argIndex++];});
console.warn(message);
try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('emptyFunction',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;
});
__d('ReactCurrentOwner',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;
});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}











function traverseAllChildrenImpl(
children,
nameSoFar,
indexSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar === ''?SEPARATOR + getComponentKey(children,0):nameSoFar,
indexSoFar);

return 1;}


var child,nextName,nextIndex;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0;i < children.length;i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,i);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,ii++);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child,0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1,
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child,0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children,'',0,callback,traverseContext);}


module.exports = traverseAllChildren;
});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=100;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id,index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
var i;
for(i = start;i < destinationID.length;i++) {
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i <= minLength;i++) {
if(isBoundary(oneID,i) && isBoundary(twoID,i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}














function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp || isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id = traverse(id,stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id,traverseUp,arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID + name;},










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR,1);
return index > -1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},






_getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;
});
__d('ReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;
});
__d('getIteratorFn',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;
});
__d('ReactComponent',["ReactUpdateQueue","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdateQueue=require('ReactUpdateQueue');

var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context){
this.props = props;
this.context = context;}



























ReactComponent.prototype.setState = function(partialState,callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null,
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null,
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


ReactUpdateQueue.enqueueSetState(this,partialState);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
ReactUpdateQueue.enqueueForceUpdate(this);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:'getDOMNode',
isMounted:'isMounted',
replaceProps:'replaceProps',
replaceState:'replaceState',
setProps:'setProps'};

var defineDeprecationWarning=function(methodName,displayName){
try{
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes.',
displayName);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;
});
__d('ReactUpdateQueue',["ReactLifeCycle","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactLifeCycle=require('ReactLifeCycle');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
if(internalInstance !== ReactLifeCycle.currentlyMountingInstance){




ReactUpdates.enqueueUpdate(internalInstance);}}



function getInternalInstanceReadyForUpdate(publicInstance,callerName){
invariant(
ReactCurrentOwner.current == null,
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.',
callerName);


var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted ' + 
'component. This is a no-op.',
callerName,
callerName);}


return null;}


if(internalInstance === ReactLifeCycle.currentlyUnmountingInstance){
return null;}


return internalInstance;}






var ReactUpdateQueue={









enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance || 
internalInstance === ReactLifeCycle.currentlyMountingInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel,
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
var props=assign({},element.props,partialProps);
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element,
props);


enqueueUpdate(internalInstance);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel,
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element,
props);


enqueueUpdate(internalInstance);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;
});
__d('ReactLifeCycle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactLifeCycle={
currentlyMountingInstance:null,
currentlyUnmountingInstance:null};


module.exports = ReactLifeCycle;
});
__d('ReactInstanceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance !== undefined;},


set:function(key,value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;
});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactCurrentOwner","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d);}









function mountOrderComparator(c1,c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i < len;i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j < callbacks.length;j++) {
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();






warning(
ReactCurrentOwner.current == null,
'enqueueUpdate(): Render methods should be a pure function of props ' + 
'and state; triggering nested component updates from render is not ' + 
'allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports = ReactUpdates;
});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0,l=callbacks.length;i < l;i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}},








reset:function(){
this._callbacks = null;
this._contexts = null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
});
__d('ReactPerf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports = ReactPerf;
});
__d('ReactReconciler',["ReactRef","ReactElementValidator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactRef=require('ReactRef');
var ReactElementValidator=require('ReactElementValidator');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
internalInstance._currentElement);}


transaction.getReactMountReady().enqueue(attachRefs,internalInstance);
return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;

if(nextElement === prevElement && nextElement._owner != null){







return;}


if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;
});
__d('ReactRef',["ReactOwner"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement,nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
detachRef(ref,instance,element._owner);}};



module.exports = ReactRef;
});
__d('ReactOwner',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;
});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","ReactNativeComponent","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactNativeComponent=require('ReactNativeComponent');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element,parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

warnAndMonitorForKeyUse(
'Each child in an array or iterator should have a unique "key" prop.',
element,
parentType);}












function validatePropertyKey(name,element,parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

warnAndMonitorForKeyUse(
'Child objects should have non-numeric keys so ordering is preserved.',
element,
parentType);}











function warnAndMonitorForKeyUse(message,element,parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[message] || (
ownerHasKeyUseWarning[message] = {});

if(memoizer.hasOwnProperty(useName)){
return;}

memoizer[useName] = true;

var parentOrOwnerAddendum=
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
'';




var childOwnerAddendum='';
if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

var childOwnerName=getName(element._owner);

childOwnerAddendum = ' It was passed a child from ' + childOwnerName + '.';}


warning(
false,
message + '%s%s See http://fb.me/react-warning-keys for more information.',
parentOrOwnerAddendum,
childOwnerAddendum);}












function validateChildKeys(node,parentType){
if(Array.isArray(node)){
for(var i=0;i < node.length;i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key,fragment[key],parentType);}}}}}















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum(this);
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}





var warnedPropsMutations={};







function warnForPropsMutation(propName,element){
var type=element.type;
var elementName=typeof type === 'string'?type:type.displayName;
var ownerName=element._owner?
element._owner.getPublicInstance().constructor.displayName:null;

var warningKey=propName + '|' + elementName + '|' + ownerName;
if(warnedPropsMutations.hasOwnProperty(warningKey)){
return;}

warnedPropsMutations[warningKey] = true;

var elementInfo='';
if(elementName){
elementInfo = ' <' + elementName + ' />';}

var ownerInfo='';
if(ownerName){
ownerInfo = ' The element was created by ' + ownerName + '.';}


warning(
false,
'Don\'t set .props.%s of the React component%s. Instead, specify the ' + 
'correct value when initially creating the element or use ' + 
'React.cloneElement to make a new element with updated props.%s',
propName,
elementInfo,
ownerInfo);}




function is(a,b){
if(a !== a){

return b !== b;}

if(a === 0 && b === 0){

return 1 / a === 1 / b;}

return a === b;}










function checkAndWarnForMutatedProps(element){
if(!element._store){


return;}


var originalProps=element._store.originalProps;
var props=element.props;

for(var propName in props) {
if(props.hasOwnProperty(propName)){
if(!originalProps.hasOwnProperty(propName) || 
!is(originalProps[propName],props[propName])){
warnForPropsMutation(propName,element);


originalProps[propName] = props[propName];}}}}











function validatePropTypes(element){
if(element.type == null){

return;}





var componentClass=ReactNativeComponent.getComponentClassForElement(
element);

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

checkAndWarnForMutatedProps:checkAndWarnForMutatedProps,

createElement:function(type,props,children){


warning(
type != null,
'React.createElement: type should not be null or undefined. It should ' + 
'be a string (for DOM elements) or a ReactClass (for composite ' + 
'components).');


var element=ReactElement.createElement.apply(this,arguments);



if(element == null){
return element;}


for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],type);}


validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;
});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports = ReactPropTypeLocations;
});
__d('ReactPropTypeLocationNames',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;
});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);},



injectAutoWrapper:function(wrapperFactory){
autoGenerateWrapperClass = wrapperFactory;}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;
});
__d('Transaction',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},













perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope,a,b,c,d,e,f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this,initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports = Transaction;
});
__d('ReactClass',["ReactComponent","ReactCurrentOwner","ReactElement","ReactErrorUtils","ReactInstanceMap","ReactLifeCycle","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactUpdateQueue","Object.assign","invariant","keyMirror","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName = displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i < mixins.length;i++) {
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);}};



function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
Constructor.displayName || 'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function',
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var markedDontBind=property && property.__reactDontBind;
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined && 
!markedDontBind;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name],property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name],property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.',
name);


var isInherited=(name in Constructor);
invariant(
!isInherited,
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.',
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined,
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.',
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length,args=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false,
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component,
ReactErrorUtils.guard(
method,
component.constructor.displayName + '.' + autoBindKey));}}}






var typeDeprecationDescriptor={
enumerable:false,
get:function(){
var displayName=this.displayName || this.name || 'Component';
warning(
false,
'%s.type is deprecated. Use %s directly to access the class.',
displayName,
displayName);

Object.defineProperty(this,'type',{
value:this});

return this;}};







var ReactClassMixin={





replaceState:function(newState,callback){
ReactUpdateQueue.enqueueReplaceState(this,newState);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}},









isMounted:function(){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(this);
return (
internalInstance && 
internalInstance !== ReactLifeCycle.currentlyMountingInstance);},












setProps:function(partialProps,callback){
ReactUpdateQueue.enqueueSetProps(this,partialProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
ReactUpdateQueue.enqueueReplaceProps(this,newProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: http://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}




Constructor.type = Constructor;
if(__DEV__){
try{
Object.defineProperty(Constructor,'type',typeDeprecationDescriptor);}
catch(x) {}}




return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;
});
__d('ReactErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ReactErrorUtils={









guard:function(func,name){
return func;}};



module.exports = ReactErrorUtils;
});
__d('keyOf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;
});
__d('ReactDOM',["ReactElement","ReactElementValidator","mapObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');

var mapObject=require('mapObject');







function createDOMFactory(tag){
if(__DEV__){
return ReactElementValidator.createFactory(tag);}

return ReactElement.createFactory(tag);}








var ReactDOM=mapObject({
a:'a',
abbr:'abbr',
address:'address',
area:'area',
article:'article',
aside:'aside',
audio:'audio',
b:'b',
base:'base',
bdi:'bdi',
bdo:'bdo',
big:'big',
blockquote:'blockquote',
body:'body',
br:'br',
button:'button',
canvas:'canvas',
caption:'caption',
cite:'cite',
code:'code',
col:'col',
colgroup:'colgroup',
data:'data',
datalist:'datalist',
dd:'dd',
del:'del',
details:'details',
dfn:'dfn',
dialog:'dialog',
div:'div',
dl:'dl',
dt:'dt',
em:'em',
embed:'embed',
fieldset:'fieldset',
figcaption:'figcaption',
figure:'figure',
footer:'footer',
form:'form',
h1:'h1',
h2:'h2',
h3:'h3',
h4:'h4',
h5:'h5',
h6:'h6',
head:'head',
header:'header',
hr:'hr',
html:'html',
i:'i',
iframe:'iframe',
img:'img',
input:'input',
ins:'ins',
kbd:'kbd',
keygen:'keygen',
label:'label',
legend:'legend',
li:'li',
link:'link',
main:'main',
map:'map',
mark:'mark',
menu:'menu',
menuitem:'menuitem',
meta:'meta',
meter:'meter',
nav:'nav',
noscript:'noscript',
object:'object',
ol:'ol',
optgroup:'optgroup',
option:'option',
output:'output',
p:'p',
param:'param',
picture:'picture',
pre:'pre',
progress:'progress',
q:'q',
rp:'rp',
rt:'rt',
ruby:'ruby',
s:'s',
samp:'samp',
script:'script',
section:'section',
select:'select',
small:'small',
source:'source',
span:'span',
strong:'strong',
style:'style',
sub:'sub',
summary:'summary',
sup:'sup',
table:'table',
tbody:'tbody',
td:'td',
textarea:'textarea',
tfoot:'tfoot',
th:'th',
thead:'thead',
time:'time',
title:'title',
tr:'tr',
track:'track',
u:'u',
ul:'ul',
'var':'var',
video:'video',
wbr:'wbr',


circle:'circle',
defs:'defs',
ellipse:'ellipse',
g:'g',
line:'line',
linearGradient:'linearGradient',
mask:'mask',
path:'path',
pattern:'pattern',
polygon:'polygon',
polyline:'polyline',
radialGradient:'radialGradient',
rect:'rect',
stop:'stop',
svg:'svg',
text:'text',
tspan:'tspan'},

createDOMFactory);

module.exports = ReactDOM;
});
__d('mapObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var hasOwnProperty=Object.prototype.hasOwnProperty;























function mapObject(object,callback,context){
if(!object){
return null;}

var result={};
for(var name in object) {
if(hasOwnProperty.call(object,name)){
result[name] = callback.call(context,object[name],name,object);}}


return result;}


module.exports = mapObject;
});
__d('ReactDOMTextComponent',["DOMPropertyOperations","ReactComponentBrowserEnvironment","ReactDOMComponent","Object.assign","escapeTextContentForBrowser"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMPropertyOperations=require('DOMPropertyOperations');
var ReactComponentBrowserEnvironment=
require('ReactComponentBrowserEnvironment');
var ReactDOMComponent=require('ReactDOMComponent');

var assign=require('Object.assign');
var escapeTextContentForBrowser=require('escapeTextContentForBrowser');
















var ReactDOMTextComponent=function(props){};



assign(ReactDOMTextComponent.prototype,{





construct:function(text){

this._currentElement = text;
this._stringText = '' + text;


this._rootNodeID = null;
this._mountIndex = 0;},











mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
var escapedText=escapeTextContentForBrowser(this._stringText);

if(transaction.renderToStaticMarkup){



return escapedText;}


return (
'<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + 
escapedText + 
'</span>');},










receiveComponent:function(nextText,transaction){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){



this._stringText = nextStringText;
ReactDOMComponent.BackendIDOperations.updateTextContentByID(
this._rootNodeID,
nextStringText);}}},





unmountComponent:function(){
ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);}});




module.exports = ReactDOMTextComponent;
});
__d('DOMPropertyOperations',["DOMProperty","quoteAttributeValueForBrowser","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');

var quoteAttributeValueForBrowser=require('quoteAttributeValueForBrowser');
var warning=require('warning');

function shouldIgnoreValue(name,value){
return value == null || 
DOMProperty.hasBooleanValue[name] && !value || 
DOMProperty.hasNumericValue[name] && isNaN(value) || 
DOMProperty.hasPositiveNumericValue[name] && value < 1 || 
DOMProperty.hasOverloadedBooleanValue[name] && value === false;}


if(__DEV__){
var reactProps={
children:true,
dangerouslySetInnerHTML:true,
key:true,
ref:true};

var warnedProperties={};

var warnUnknownProperty=function(name){
if(reactProps.hasOwnProperty(name) && reactProps[name] || 
warnedProperties.hasOwnProperty(name) && warnedProperties[name]){
return;}


warnedProperties[name] = true;
var lowerCasedName=name.toLowerCase();


var standardName=
DOMProperty.isCustomAttribute(lowerCasedName)?
lowerCasedName:
DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName)?
DOMProperty.getPossibleStandardName[lowerCasedName]:
null;




warning(
standardName == null,
'Unknown DOM property %s. Did you mean %s?',
name,
standardName);};}








var DOMPropertyOperations={







createMarkupForID:function(id){
return DOMProperty.ID_ATTRIBUTE_NAME + '=' + 
quoteAttributeValueForBrowser(id);},









createMarkupForProperty:function(name,value){
if(DOMProperty.isStandardName.hasOwnProperty(name) && 
DOMProperty.isStandardName[name]){
if(shouldIgnoreValue(name,value)){
return '';}

var attributeName=DOMProperty.getAttributeName[name];
if(DOMProperty.hasBooleanValue[name] || 
DOMProperty.hasOverloadedBooleanValue[name] && value === true){
return attributeName;}

return attributeName + '=' + quoteAttributeValueForBrowser(value);}else 
if(DOMProperty.isCustomAttribute(name)){
if(value == null){
return '';}

return name + '=' + quoteAttributeValueForBrowser(value);}else 
if(__DEV__){
warnUnknownProperty(name);}

return null;},









setValueForProperty:function(node,name,value){
if(DOMProperty.isStandardName.hasOwnProperty(name) && 
DOMProperty.isStandardName[name]){
var mutationMethod=DOMProperty.getMutationMethod[name];
if(mutationMethod){
mutationMethod(node,value);}else 
if(shouldIgnoreValue(name,value)){
this.deleteValueForProperty(node,name);}else 
if(DOMProperty.mustUseAttribute[name]){


node.setAttribute(DOMProperty.getAttributeName[name],'' + value);}else 
{
var propName=DOMProperty.getPropertyName[name];


if(!DOMProperty.hasSideEffects[name] || 
'' + node[propName] !== '' + value){


node[propName] = value;}}}else 


if(DOMProperty.isCustomAttribute(name)){
if(value == null){
node.removeAttribute(name);}else 
{
node.setAttribute(name,'' + value);}}else 

if(__DEV__){
warnUnknownProperty(name);}},









deleteValueForProperty:function(node,name){
if(DOMProperty.isStandardName.hasOwnProperty(name) && 
DOMProperty.isStandardName[name]){
var mutationMethod=DOMProperty.getMutationMethod[name];
if(mutationMethod){
mutationMethod(node,undefined);}else 
if(DOMProperty.mustUseAttribute[name]){
node.removeAttribute(DOMProperty.getAttributeName[name]);}else 
{
var propName=DOMProperty.getPropertyName[name];
var defaultValue=DOMProperty.getDefaultValueForProperty(
node.nodeName,
propName);

if(!DOMProperty.hasSideEffects[name] || 
'' + node[propName] !== defaultValue){
node[propName] = defaultValue;}}}else 


if(DOMProperty.isCustomAttribute(name)){
node.removeAttribute(name);}else 
if(__DEV__){
warnUnknownProperty(name);}}};





module.exports = DOMPropertyOperations;
});
__d('DOMProperty',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var invariant=require('invariant');

function checkMask(value,bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,


























injectDOMPropertyConfig:function(domPropertyConfig){
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.isStandardName.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.',
propName);


DOMProperty.isStandardName[propName] = true;

var lowerCased=propName.toLowerCase();
DOMProperty.getPossibleStandardName[lowerCased] = propName;

if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
DOMProperty.getPossibleStandardName[attributeName] = propName;
DOMProperty.getAttributeName[propName] = attributeName;}else 
{
DOMProperty.getAttributeName[propName] = lowerCased;}


DOMProperty.getPropertyName[propName] = 
DOMPropertyNames.hasOwnProperty(propName)?
DOMPropertyNames[propName]:
propName;

if(DOMMutationMethods.hasOwnProperty(propName)){
DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];}else 
{
DOMProperty.getMutationMethod[propName] = null;}


var propConfig=Properties[propName];
DOMProperty.mustUseAttribute[propName] = 
checkMask(propConfig,DOMPropertyInjection.MUST_USE_ATTRIBUTE);
DOMProperty.mustUseProperty[propName] = 
checkMask(propConfig,DOMPropertyInjection.MUST_USE_PROPERTY);
DOMProperty.hasSideEffects[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_SIDE_EFFECTS);
DOMProperty.hasBooleanValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_BOOLEAN_VALUE);
DOMProperty.hasNumericValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_NUMERIC_VALUE);
DOMProperty.hasPositiveNumericValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
DOMProperty.hasOverloadedBooleanValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

invariant(
!DOMProperty.mustUseAttribute[propName] || 
!DOMProperty.mustUseProperty[propName],
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
DOMProperty.mustUseProperty[propName] || 
!DOMProperty.hasSideEffects[propName],
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
!!DOMProperty.hasBooleanValue[propName] + 
!!DOMProperty.hasNumericValue[propName] + 
!!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s',
propName);}}};




var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





isStandardName:{},






getPossibleStandardName:{},






getAttributeName:{},






getPropertyName:{},






getMutationMethod:{},





mustUseAttribute:{},






mustUseProperty:{},







hasSideEffects:{},





hasBooleanValue:{},






hasNumericValue:{},






hasPositiveNumericValue:{},







hasOverloadedBooleanValue:{},




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports = DOMProperty;
});
__d('quoteAttributeValueForBrowser',["escapeTextContentForBrowser"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var escapeTextContentForBrowser=require('escapeTextContentForBrowser');







function quoteAttributeValueForBrowser(value){
return '"' + escapeTextContentForBrowser(value) + '"';}


module.exports = quoteAttributeValueForBrowser;
});
__d('escapeTextContentForBrowser',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ESCAPE_LOOKUP={
'&':'&amp;',
'>':'&gt;',
'<':'&lt;',
'"':'&quot;',
'\'':'&#x27;'};


var ESCAPE_REGEX=/[&><"']/g;

function escaper(match){
return ESCAPE_LOOKUP[match];}








function escapeTextContentForBrowser(text){
return ('' + text).replace(ESCAPE_REGEX,escaper);}


module.exports = escapeTextContentForBrowser;
});
__d('ReactComponentBrowserEnvironment',["ReactDOMIDOperations","ReactMount"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ReactDOMIDOperations=require('ReactDOMIDOperations');
var ReactMount=require('ReactMount');






var ReactComponentBrowserEnvironment={

processChildrenUpdates:
ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:
ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,








unmountIDFromEnvironment:function(rootNodeID){
ReactMount.purgeID(rootNodeID);}};




module.exports = ReactComponentBrowserEnvironment;
});
__d('ReactDOMIDOperations',["CSSPropertyOperations","DOMChildrenOperations","DOMPropertyOperations","ReactMount","ReactPerf","invariant","setInnerHTML"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var CSSPropertyOperations=require('CSSPropertyOperations');
var DOMChildrenOperations=require('DOMChildrenOperations');
var DOMPropertyOperations=require('DOMPropertyOperations');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');







var INVALID_PROPERTY_ERRORS={
dangerouslySetInnerHTML:
'`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
style:'`style` must be set using `updateStylesByID()`.'};






var ReactDOMIDOperations={










updatePropertyByID:function(id,name,value){
var node=ReactMount.getNode(id);
invariant(
!INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
'updatePropertyByID(...): %s',
INVALID_PROPERTY_ERRORS[name]);





if(value != null){
DOMPropertyOperations.setValueForProperty(node,name,value);}else 
{
DOMPropertyOperations.deleteValueForProperty(node,name);}},











deletePropertyByID:function(id,name,value){
var node=ReactMount.getNode(id);
invariant(
!INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
'updatePropertyByID(...): %s',
INVALID_PROPERTY_ERRORS[name]);

DOMPropertyOperations.deleteValueForProperty(node,name,value);},










updateStylesByID:function(id,styles){
var node=ReactMount.getNode(id);
CSSPropertyOperations.setValueForStyles(node,styles);},









updateInnerHTMLByID:function(id,html){
var node=ReactMount.getNode(id);
setInnerHTML(node,html);},









updateTextContentByID:function(id,content){
var node=ReactMount.getNode(id);
DOMChildrenOperations.updateTextContent(node,content);},










dangerouslyReplaceNodeWithMarkupByID:function(id,markup){
var node=ReactMount.getNode(id);
DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node,markup);},









dangerouslyProcessChildrenUpdates:function(updates,markup){
for(var i=0;i < updates.length;i++) {
updates[i].parentNode = ReactMount.getNode(updates[i].parentID);}

DOMChildrenOperations.processUpdates(updates,markup);}};



ReactPerf.measureMethods(ReactDOMIDOperations,'ReactDOMIDOperations',{
updatePropertyByID:'updatePropertyByID',
deletePropertyByID:'deletePropertyByID',
updateStylesByID:'updateStylesByID',
updateInnerHTMLByID:'updateInnerHTMLByID',
updateTextContentByID:'updateTextContentByID',
dangerouslyReplaceNodeWithMarkupByID:'dangerouslyReplaceNodeWithMarkupByID',
dangerouslyProcessChildrenUpdates:'dangerouslyProcessChildrenUpdates'});


module.exports = ReactDOMIDOperations;
});
__d('CSSPropertyOperations',["CSSProperty","ExecutionEnvironment","camelizeStyleName","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var CSSProperty=require('CSSProperty');
var ExecutionEnvironment=require('ExecutionEnvironment');

var camelizeStyleName=require('camelizeStyleName');
var dangerousStyleValue=require('dangerousStyleValue');
var hyphenateStyleName=require('hyphenateStyleName');
var memoizeStringOnly=require('memoizeStringOnly');
var warning=require('warning');

var processStyleName=memoizeStringOnly(function(styleName){
return hyphenateStyleName(styleName);});


var styleFloatAccessor='cssFloat';
if(ExecutionEnvironment.canUseDOM){

if(document.documentElement.style.cssFloat === undefined){
styleFloatAccessor = 'styleFloat';}}



if(__DEV__){

var badVendoredStyleNamePattern=/^(?:webkit|moz|o)[A-Z]/;


var badStyleValueWithSemicolonPattern=/;\s*$/;

var warnedStyleNames={};
var warnedStyleValues={};

var warnHyphenatedStyleName=function(name){
if(warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]){
return;}


warnedStyleNames[name] = true;
warning(
false,
'Unsupported style property %s. Did you mean %s?',
name,
camelizeStyleName(name));};



var warnBadVendoredStyleName=function(name){
if(warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]){
return;}


warnedStyleNames[name] = true;
warning(
false,
'Unsupported vendor-prefixed style property %s. Did you mean %s?',
name,
name.charAt(0).toUpperCase() + name.slice(1));};



var warnStyleValueWithSemicolon=function(name,value){
if(warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]){
return;}


warnedStyleValues[value] = true;
warning(
false,
'Style property values shouldn\'t contain a semicolon. ' + 
'Try "%s: %s" instead.',
name,
value.replace(badStyleValueWithSemicolonPattern,''));};







var warnValidStyle=function(name,value){
if(name.indexOf('-') > -1){
warnHyphenatedStyleName(name);}else 
if(badVendoredStyleNamePattern.test(name)){
warnBadVendoredStyleName(name);}else 
if(badStyleValueWithSemicolonPattern.test(value)){
warnStyleValueWithSemicolon(name,value);}};}







var CSSPropertyOperations={













createMarkupForStyles:function(styles){
var serialized='';
for(var styleName in styles) {
if(!styles.hasOwnProperty(styleName)){
continue;}

var styleValue=styles[styleName];
if(__DEV__){
warnValidStyle(styleName,styleValue);}

if(styleValue != null){
serialized += processStyleName(styleName) + ':';
serialized += dangerousStyleValue(styleName,styleValue) + ';';}}


return serialized || null;},









setValueForStyles:function(node,styles){
var style=node.style;
for(var styleName in styles) {
if(!styles.hasOwnProperty(styleName)){
continue;}

if(__DEV__){
warnValidStyle(styleName,styles[styleName]);}

var styleValue=dangerousStyleValue(styleName,styles[styleName]);
if(styleName === 'float'){
styleName = styleFloatAccessor;}

if(styleValue){
style[styleName] = styleValue;}else 
{
var expansion=CSSProperty.shorthandPropertyExpansions[styleName];
if(expansion){


for(var individualStyleName in expansion) {
style[individualStyleName] = '';}}else 

{
style[styleName] = '';}}}}};







module.exports = CSSPropertyOperations;
});
__d('CSSProperty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var isUnitlessNumber={
boxFlex:true,
boxFlexGroup:true,
columnCount:true,
flex:true,
flexGrow:true,
flexPositive:true,
flexShrink:true,
flexNegative:true,
fontWeight:true,
lineClamp:true,
lineHeight:true,
opacity:true,
order:true,
orphans:true,
widows:true,
zIndex:true,
zoom:true,


fillOpacity:true,
strokeDashoffset:true,
strokeOpacity:true,
strokeWidth:true};








function prefixKey(prefix,key){
return prefix + key.charAt(0).toUpperCase() + key.substring(1);}






var prefixes=['Webkit','ms','Moz','O'];



Object.keys(isUnitlessNumber).forEach(function(prop){
prefixes.forEach(function(prefix){
isUnitlessNumber[prefixKey(prefix,prop)] = isUnitlessNumber[prop];});});












var shorthandPropertyExpansions={
background:{
backgroundImage:true,
backgroundPosition:true,
backgroundRepeat:true,
backgroundColor:true},

border:{
borderWidth:true,
borderStyle:true,
borderColor:true},

borderBottom:{
borderBottomWidth:true,
borderBottomStyle:true,
borderBottomColor:true},

borderLeft:{
borderLeftWidth:true,
borderLeftStyle:true,
borderLeftColor:true},

borderRight:{
borderRightWidth:true,
borderRightStyle:true,
borderRightColor:true},

borderTop:{
borderTopWidth:true,
borderTopStyle:true,
borderTopColor:true},

font:{
fontStyle:true,
fontVariant:true,
fontWeight:true,
fontSize:true,
lineHeight:true,
fontFamily:true}};



var CSSProperty={
isUnitlessNumber:isUnitlessNumber,
shorthandPropertyExpansions:shorthandPropertyExpansions};


module.exports = CSSProperty;
});
__d('ExecutionEnvironment',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker !== 'undefined',

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent),

canUseViewport:canUseDOM && !!window.screen,

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;
});
__d('camelizeStyleName',["camelize"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var camelize=require('camelize');

var msPattern=/^-ms-/;


















function camelizeStyleName(string){
return camelize(string.replace(msPattern,'ms-'));}


module.exports = camelizeStyleName;
});
__d('camelize',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











_hyphenPattern=/-(.)/g;










function camelize(string){
return string.replace(_hyphenPattern,function(_,character){
return character.toUpperCase();});}



module.exports = camelize;
});
__d('dangerousStyleValue',["CSSProperty"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var CSSProperty=require('CSSProperty');

var isUnitlessNumber=CSSProperty.isUnitlessNumber;










function dangerousStyleValue(name,value){










var isEmpty=value == null || typeof value === 'boolean' || value === '';
if(isEmpty){
return '';}


var isNonNumeric=isNaN(value);
if(isNonNumeric || value === 0 || 
isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]){
return '' + value;}


if(typeof value === 'string'){
value = value.trim();}

return value + 'px';}


module.exports = dangerousStyleValue;
});
__d('hyphenateStyleName',["hyphenate"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var hyphenate=require('hyphenate');

var msPattern=/^ms-/;

















function hyphenateStyleName(string){
return hyphenate(string).replace(msPattern,'-ms-');}


module.exports = hyphenateStyleName;
});
__d('hyphenate',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











_uppercasePattern=/([A-Z])/g;













function hyphenate(string){
return string.replace(_uppercasePattern,'-$1').toLowerCase();}


module.exports = hyphenate;
});
__d('memoizeStringOnly',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















function memoizeStringOnly(callback){
var cache={};
return function(string){
if(!cache.hasOwnProperty(string)){
cache[string] = callback.call(this,string);}

return cache[string];};}



module.exports = memoizeStringOnly;
});
__d('DOMChildrenOperations',["Danger","ReactMultiChildUpdateTypes","setTextContent","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Danger=require('Danger');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var setTextContent=require('setTextContent');
var invariant=require('invariant');









function insertChildAt(parentNode,childNode,index){




parentNode.insertBefore(
childNode,
parentNode.childNodes[index] || null);}






var DOMChildrenOperations={

dangerouslyReplaceNodeWithMarkup:Danger.dangerouslyReplaceNodeWithMarkup,

updateTextContent:setTextContent,









processUpdates:function(updates,markupList){
var update;

var initialChildren=null;

var updatedChildren=null;

for(var i=0;i < updates.length;i++) {
update = updates[i];
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || 
update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
var updatedIndex=update.fromIndex;
var updatedChild=update.parentNode.childNodes[updatedIndex];
var parentID=update.parentID;

invariant(
updatedChild,
'processUpdates(): Unable to find child %s of element. This ' + 
'probably means the DOM was unexpectedly mutated (e.g., by the ' + 
'browser), usually due to forgetting a <tbody> when using tables, ' + 
'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 
'in an <svg> parent. Try inspecting the child nodes of the element ' + 
'with React ID `%s`.',
updatedIndex,
parentID);


initialChildren = initialChildren || {};
initialChildren[parentID] = initialChildren[parentID] || [];
initialChildren[parentID][updatedIndex] = updatedChild;

updatedChildren = updatedChildren || [];
updatedChildren.push(updatedChild);}}



var renderedMarkup=Danger.dangerouslyRenderMarkup(markupList);


if(updatedChildren){
for(var j=0;j < updatedChildren.length;j++) {
updatedChildren[j].parentNode.removeChild(updatedChildren[j]);}}



for(var k=0;k < updates.length;k++) {
update = updates[k];
switch(update.type){
case ReactMultiChildUpdateTypes.INSERT_MARKUP:
insertChildAt(
update.parentNode,
renderedMarkup[update.markupIndex],
update.toIndex);

break;
case ReactMultiChildUpdateTypes.MOVE_EXISTING:
insertChildAt(
update.parentNode,
initialChildren[update.parentID][update.fromIndex],
update.toIndex);

break;
case ReactMultiChildUpdateTypes.TEXT_CONTENT:
setTextContent(
update.parentNode,
update.textContent);

break;
case ReactMultiChildUpdateTypes.REMOVE_NODE:

break;}}}};






module.exports = DOMChildrenOperations;
});
__d('Danger',["ExecutionEnvironment","createNodesFromMarkup","emptyFunction","getMarkupWrap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var ExecutionEnvironment=require('ExecutionEnvironment');

var createNodesFromMarkup=require('createNodesFromMarkup');
var emptyFunction=require('emptyFunction');
var getMarkupWrap=require('getMarkupWrap');
var invariant=require('invariant');

var OPEN_TAG_NAME_EXP=/^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR='data-danger-index';












function getNodeName(markup){
return markup.substring(1,markup.indexOf(' '));}


var Danger={










dangerouslyRenderMarkup:function(markupList){
invariant(
ExecutionEnvironment.canUseDOM,
'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 
'thread. Make sure `window` and `document` are available globally ' + 
'before requiring React when unit testing or use ' + 
'React.renderToString for server rendering.');

var nodeName;
var markupByNodeName={};

for(var i=0;i < markupList.length;i++) {
invariant(
markupList[i],
'dangerouslyRenderMarkup(...): Missing markup.');

nodeName = getNodeName(markupList[i]);
nodeName = getMarkupWrap(nodeName)?nodeName:'*';
markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
markupByNodeName[nodeName][i] = markupList[i];}

var resultList=[];
var resultListAssignmentCount=0;
for(nodeName in markupByNodeName) {
if(!markupByNodeName.hasOwnProperty(nodeName)){
continue;}

var markupListByNodeName=markupByNodeName[nodeName];




var resultIndex;
for(resultIndex in markupListByNodeName) {
if(markupListByNodeName.hasOwnProperty(resultIndex)){
var markup=markupListByNodeName[resultIndex];




markupListByNodeName[resultIndex] = markup.replace(
OPEN_TAG_NAME_EXP,

'$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');}}





var renderNodes=createNodesFromMarkup(
markupListByNodeName.join(''),
emptyFunction);


for(var j=0;j < renderNodes.length;++j) {
var renderNode=renderNodes[j];
if(renderNode.hasAttribute && 
renderNode.hasAttribute(RESULT_INDEX_ATTR)){

resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
renderNode.removeAttribute(RESULT_INDEX_ATTR);

invariant(
!resultList.hasOwnProperty(resultIndex),
'Danger: Assigning to an already-occupied result index.');


resultList[resultIndex] = renderNode;



resultListAssignmentCount += 1;}else 

if(__DEV__){
console.error(
'Danger: Discarding unexpected node:',
renderNode);}}}







invariant(
resultListAssignmentCount === resultList.length,
'Danger: Did not assign to every index of resultList.');


invariant(
resultList.length === markupList.length,
'Danger: Expected markup to render %s nodes, but rendered %s.',
markupList.length,
resultList.length);


return resultList;},










dangerouslyReplaceNodeWithMarkup:function(oldChild,markup){
invariant(
ExecutionEnvironment.canUseDOM,
'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 
'worker thread. Make sure `window` and `document` are available ' + 
'globally before requiring React when unit testing or use ' + 
'React.renderToString for server rendering.');

invariant(markup,'dangerouslyReplaceNodeWithMarkup(...): Missing markup.');
invariant(
oldChild.tagName.toLowerCase() !== 'html',
'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + 
'<html> node. This is because browser quirks make this unreliable ' + 
'and/or slow. If you want to render to the root you must use ' + 
'server rendering. See React.renderToString().');


var newChild=createNodesFromMarkup(markup,emptyFunction)[0];
oldChild.parentNode.replaceChild(newChild,oldChild);}};




module.exports = Danger;
});
__d('createNodesFromMarkup',["ExecutionEnvironment","createArrayFromMixed","getMarkupWrap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 













ExecutionEnvironment=require('ExecutionEnvironment');

var createArrayFromMixed=require('createArrayFromMixed');
var getMarkupWrap=require('getMarkupWrap');
var invariant=require('invariant');




var dummyNode=
ExecutionEnvironment.canUseDOM?document.createElement('div'):null;




var nodeNamePattern=/^\s*<(\w+)/;







function getNodeName(markup){
var nodeNameMatch=markup.match(nodeNamePattern);
return nodeNameMatch && nodeNameMatch[1].toLowerCase();}












function createNodesFromMarkup(markup,handleScript){
var node=dummyNode;
invariant(!!dummyNode,'createNodesFromMarkup dummy not initialized');
var nodeName=getNodeName(markup);

var wrap=nodeName && getMarkupWrap(nodeName);
if(wrap){
node.innerHTML = wrap[1] + markup + wrap[2];

var wrapDepth=wrap[0];
while(wrapDepth--) {
node = node.lastChild;}}else 

{
node.innerHTML = markup;}


var scripts=node.getElementsByTagName('script');
if(scripts.length){
invariant(
handleScript,
'createNodesFromMarkup(...): Unexpected <script> element rendered.');

createArrayFromMixed(scripts).forEach(handleScript);}


var nodes=createArrayFromMixed(node.childNodes);
while(node.lastChild) {
node.removeChild(node.lastChild);}

return nodes;}


module.exports = createNodesFromMarkup;
});
__d('createArrayFromMixed',["toArray"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











toArray=require('toArray');
















function hasArrayNature(obj){
return (

!!obj && (

typeof obj == 'object' || typeof obj == 'function') && 

'length' in obj && 

!('setInterval' in obj) && 


typeof obj.nodeType != 'number' && (


Array.isArray(obj) || 

'callee' in obj || 

'item' in obj));}

























function createArrayFromMixed(obj){
if(!hasArrayNature(obj)){
return [obj];}else 
if(Array.isArray(obj)){
return obj.slice();}else 
{
return toArray(obj);}}



module.exports = createArrayFromMixed;
});
__d('toArray',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











invariant=require('invariant');










function toArray(obj){
var length=obj.length;



invariant(
!Array.isArray(obj) && (
typeof obj === 'object' || typeof obj === 'function'),
'toArray: Array-like object expected');


invariant(
typeof length === 'number',
'toArray: Object needs a length property');


invariant(
length === 0 || 
length - 1 in obj,
'toArray: Object should have keys for indices');





if(obj.hasOwnProperty){
try{
return Array.prototype.slice.call(obj);}
catch(e) {}}






var ret=Array(length);
for(var ii=0;ii < length;ii++) {
ret[ii] = obj[ii];}

return ret;}


module.exports = toArray;
});
__d('getMarkupWrap',["ExecutionEnvironment","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










ExecutionEnvironment=require('ExecutionEnvironment');

var invariant=require('invariant');




var dummyNode=
ExecutionEnvironment.canUseDOM?document.createElement('div'):null;







var shouldWrap={


'circle':true,
'defs':true,
'ellipse':true,
'g':true,
'line':true,
'linearGradient':true,
'path':true,
'polygon':true,
'polyline':true,
'radialGradient':true,
'rect':true,
'stop':true,
'text':true};


var selectWrap=[1,'<select multiple="true">','</select>'];
var tableWrap=[1,'<table>','</table>'];
var trWrap=[3,'<table><tbody><tr>','</tr></tbody></table>'];

var svgWrap=[1,'<svg>','</svg>'];

var markupWrap={
'*':[1,'?<div>','</div>'],

'area':[1,'<map>','</map>'],
'col':[2,'<table><tbody></tbody><colgroup>','</colgroup></table>'],
'legend':[1,'<fieldset>','</fieldset>'],
'param':[1,'<object>','</object>'],
'tr':[2,'<table><tbody>','</tbody></table>'],

'optgroup':selectWrap,
'option':selectWrap,

'caption':tableWrap,
'colgroup':tableWrap,
'tbody':tableWrap,
'tfoot':tableWrap,
'thead':tableWrap,

'td':trWrap,
'th':trWrap,

'circle':svgWrap,
'defs':svgWrap,
'ellipse':svgWrap,
'g':svgWrap,
'line':svgWrap,
'linearGradient':svgWrap,
'path':svgWrap,
'polygon':svgWrap,
'polyline':svgWrap,
'radialGradient':svgWrap,
'rect':svgWrap,
'stop':svgWrap,
'text':svgWrap};










function getMarkupWrap(nodeName){
invariant(!!dummyNode,'Markup wrapping node not initialized');
if(!markupWrap.hasOwnProperty(nodeName)){
nodeName = '*';}

if(!shouldWrap.hasOwnProperty(nodeName)){
if(nodeName === '*'){
dummyNode.innerHTML = '<link />';}else 
{
dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';}

shouldWrap[nodeName] = !dummyNode.firstChild;}

return shouldWrap[nodeName]?markupWrap[nodeName]:null;}



module.exports = getMarkupWrap;
});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;
});
__d('setTextContent',["ExecutionEnvironment","escapeTextContentForBrowser","setInnerHTML"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');
var escapeTextContentForBrowser=require('escapeTextContentForBrowser');
var setInnerHTML=require('setInnerHTML');











var setTextContent=function(node,text){
node.textContent = text;};


if(ExecutionEnvironment.canUseDOM){
if(!('textContent' in document.documentElement)){
setTextContent = function(node,text){
setInnerHTML(node,escapeTextContentForBrowser(text));};}}




module.exports = setTextContent;
});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){


node.innerHTML = '\uFEFF' + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;
});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","getReactRootElementInContainer","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var getReactRootElementInContainer=require('getReactRootElementInContainer');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i < minLen;i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}






function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node) === id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor,ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._isTopLevel = true;
ReactMount._mountImageIntoNode(markup,container,shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup);

ReactUpdates.ReactReconcileTransaction.release(transaction);}




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup)
{



warning(
ReactCurrentOwner.current == null,
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;},














render:function(nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'React.render(): Invalid component element.%s',

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement,nextElement)){
return ReactMount._updateRootComponent(
prevComponent,
nextElement,
container,
callback).
getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;

var component=ReactMount._renderNewRootComponent(
nextElement,
container,
shouldReuseMarkup).
getPublicInstance();
if(callback){
callback.call(component);}

return component;},











constructAndRenderComponent:function(constructor,props,container){
var element=ReactElement.createElement(constructor,props);
return ReactMount.render(element,container);},











constructAndRenderComponentByID:function(constructor,props,id){
var domNode=document.getElementById(id);
invariant(
domNode,
'Tried to get element with id of "%s" but it is not present on the page.',
id);

return ReactMount.constructAndRenderComponent(constructor,props,domNode);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null,
'unmountComponentAtNode(): Render methods should be a pure function of ' + 
'props and state; triggering nested component updates from render is ' + 
'not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactMount.unmountComponentFromNode(component,container);
delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},











unmountComponentFromNode:function(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}},










findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
invariant(


internalGetID(rootElement) === reactRootID,
'ReactMount: Root element ID differed from reactRootID.');


var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original ' + 
'container. New container:',rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;},










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(markup,container,shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var diffIndex=firstDifferenceIndex(markup,rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20,diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20,diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s',
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container,markup);},






getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;
});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topScroll:'scroll',
topSelectionChange:'selectionchange',
topTextInput:'textInput',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=EventPluginRegistry.
registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0,l=dependencies.length;i < l;i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency] = true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;
});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event,executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
invariant(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
!listener || typeof listener === 'function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;},







getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0,l=plugins.length;i < l;i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent);

if(extractedEvents){
events = accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue,events);}},








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue,executeDispatchesAndRelease);
invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');},






__purge:function(){
listenerBank = {};},


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;
});
__d('EventPluginRegistry',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;
});
__d('accumulateInto',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next != null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports = accumulateInto;
});
__d('forEachAccumulated',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports = forEachAccumulated;
});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent);


runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;
});
__d('ViewportMetrics',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;
});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('','') !== true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports = isEventSupported;
});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component,
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement,
injection:ReactEmptyComponentInjection,
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;
});
__d('ReactMarkupChecksum',["adler32"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>',
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;
});
__d('adler32',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0;i < data.length;i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;
});
__d('containsNode',["isTextNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;
});
__d('isTextNode',["isNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;
});
__d('isNode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;
});
__d('getReactRootElementInContainer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOC_NODE_TYPE=9;






function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}



module.exports = getReactRootElementInContainer;
});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});










function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}











function instantiateReactComponent(node,parentCompositeType){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
if(__DEV__){
warning(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'),
'Only functions or strings can be mounted as React components.');}




if(parentCompositeType === element.type && 
typeof element.type === 'string'){

instance = ReactNativeComponent.createInternalComponent(element);}else 


if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;
});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceMap","ReactLifeCycle","ReactNativeComponent","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdates","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._isTopLevel = false;


this._pendingCallbacks = null;},











mountComponent:function(rootID,transaction,context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(this._currentElement._context);

var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);



var inst=new Component(publicProps,publicContext);

if(__DEV__){


warning(
inst.render != null,
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.',
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;

this._instance = inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){
this._warnIfContextsDiffer(this._currentElement._context,context);}


if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?',
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.',
this.getName() || 'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.',
this.getName() || 'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.',
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function',
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

var renderedElement;

var previouslyMounting=ReactLifeCycle.currentlyMountingInstance;
ReactLifeCycle.currentlyMountingInstance = this;
try{
if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props,inst.context);}}



renderedElement = this._renderValidatedComponent();}finally 
{
ReactLifeCycle.currentlyMountingInstance = previouslyMounting;}


this._renderedComponent = this._instantiateReactComponent(
renderedElement,
this._currentElement.type);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
var previouslyUnmounting=ReactLifeCycle.currentlyUnmountingInstance;
ReactLifeCycle.currentlyUnmountingInstance = this;
try{
inst.componentWillUnmount();}finally 
{
ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;}}



ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;




ReactInstanceMap.remove(inst);},
















_setPropsInternal:function(partialProps,callback){


var element=this._pendingElement || this._currentElement;
this._pendingElement = ReactElement.cloneAndReplaceProps(
element,
assign({},element.props,partialProps));

ReactUpdates.enqueueUpdate(this,callback);},










_maskContext:function(context){
var maskedContext=null;


if(typeof this._currentElement.type === 'string'){
return emptyObject;}

var contextTypes=this._currentElement.type.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof inst.constructor.childContextTypes === 'object',
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().',
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
inst.constructor.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in inst.constructor.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName() || 'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this,
this._pendingElement || this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
this._currentElement);}



this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},








_warnIfContextsDiffer:function(ownerBasedContext,parentBasedContext){
ownerBasedContext = this._maskContext(ownerBasedContext);
parentBasedContext = this._maskContext(parentBasedContext);
var parentKeys=Object.keys(parentBasedContext).sort();
var displayName=this.getName() || 'ReactCompositeComponent';
for(var i=0;i < parentKeys.length;i++) {
var key=parentKeys[i];
warning(
ownerBasedContext[key] === parentBasedContext[key],
'owner-based and parent-based contexts differ ' + 
'(values: `%s` vs `%s`) for key (%s) while mounting %s ' + 
'(see: http://fb.me/react-context-by-parent)',
ownerBasedContext[key],
parentBasedContext[key],
key,
displayName);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=inst.context;
var nextProps=inst.props;


if(prevParentElement !== nextParentElement){
nextContext = this._processContext(nextParentElement._context);
nextProps = this._processProps(nextParentElement.props);

if(__DEV__){
if(nextUnmaskedContext != null){
this._warnIfContextsDiffer(
nextParentElement._context,
nextUnmaskedContext);}}








if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.',
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i < queue.length;i++) {
var partial=queue[i];
assign(
nextState,
typeof partial === 'function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var prevProps=inst.props;
var prevState=inst.state;
var prevContext=inst.context;

if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(inst.componentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement,
this._currentElement.type);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
var previousContext=ReactContext.current;
ReactContext.current = this._processChildContext(
this._currentElement._context);

ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactContext.current = previousContext;
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.',
this.getName() || 'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);},











getPublicInstance:function(){
return this._instance;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;
});
__d('ReactComponentEnvironment',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;
});
__d('shouldUpdateReactComponent',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var warning=require('warning');












function shouldUpdateReactComponent(prevElement,nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
if(nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key){
var ownersMatch=prevElement._owner === nextElement._owner;
var prevName=null;
var nextName=null;
var nextDisplayName=null;
if(__DEV__){
if(!ownersMatch){
if(prevElement._owner != null && 
prevElement._owner.getPublicInstance() != null && 
prevElement._owner.getPublicInstance().constructor != null){
prevName = 
prevElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement._owner != null && 
nextElement._owner.getPublicInstance() != null && 
nextElement._owner.getPublicInstance().constructor != null){
nextName = 
nextElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement.type != null && 
nextElement.type.displayName != null){
nextDisplayName = nextElement.type.displayName;}

if(nextElement.type != null && typeof nextElement.type === 'string'){
nextDisplayName = nextElement.type;}

if(typeof nextElement.type !== 'string' || 
nextElement.type === 'input' || 
nextElement.type === 'textarea'){
if(prevElement._owner != null && 
prevElement._owner._isOwnerNecessary === false || 
nextElement._owner != null && 
nextElement._owner._isOwnerNecessary === false){
if(prevElement._owner != null){
prevElement._owner._isOwnerNecessary = true;}

if(nextElement._owner != null){
nextElement._owner._isOwnerNecessary = true;}

warning(
false,
'<%s /> is being rendered by both %s and %s using the same ' + 
'key (%s) in the same place. Currently, this means that ' + 
'they don\'t preserve state. This behavior should be very ' + 
'rare so we\'re considering deprecating it. Please contact ' + 
'the React team and explain your use case so that we can ' + 
'take that into consideration.',
nextDisplayName || 'Unknown Component',
prevName || '[Unknown]',
nextName || '[Unknown]',
prevElement.key);}}}}





return ownersMatch;}}}



return false;}


module.exports = shouldUpdateReactComponent;
});
__d('ReactDOMComponent',["CSSPropertyOperations","DOMProperty","DOMPropertyOperations","ReactBrowserEventEmitter","ReactComponentBrowserEnvironment","ReactMount","ReactMultiChild","ReactPerf","Object.assign","escapeTextContentForBrowser","invariant","isEventSupported","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var CSSPropertyOperations=require('CSSPropertyOperations');
var DOMProperty=require('DOMProperty');
var DOMPropertyOperations=require('DOMPropertyOperations');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactComponentBrowserEnvironment=
require('ReactComponentBrowserEnvironment');
var ReactMount=require('ReactMount');
var ReactMultiChild=require('ReactMultiChild');
var ReactPerf=require('ReactPerf');

var assign=require('Object.assign');
var escapeTextContentForBrowser=require('escapeTextContentForBrowser');
var invariant=require('invariant');
var isEventSupported=require('isEventSupported');
var keyOf=require('keyOf');
var warning=require('warning');

var deleteListener=ReactBrowserEventEmitter.deleteListener;
var listenTo=ReactBrowserEventEmitter.listenTo;
var registrationNameModules=ReactBrowserEventEmitter.registrationNameModules;


var CONTENT_TYPES={'string':true,'number':true};

var STYLE=keyOf({style:null});

var ELEMENT_NODE_TYPE=1;




var BackendIDOperations=null;




function assertValidProps(props){
if(!props){
return;}


if(props.dangerouslySetInnerHTML != null){
invariant(
props.children == null,
'Can only set one of `children` or `props.dangerouslySetInnerHTML`.');

invariant(
props.dangerouslySetInnerHTML.__html != null,
'`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 
'Please visit http://fb.me/react-invariant-dangerously-set-inner-html ' + 
'for more information.');}


if(__DEV__){
warning(
props.innerHTML == null,
'Directly setting property `innerHTML` is not permitted. ' + 
'For more information, lookup documentation on `dangerouslySetInnerHTML`.');

warning(
!props.contentEditable || props.children == null,
'A component is `contentEditable` and contains `children` managed by ' + 
'React. It is now your responsibility to guarantee that none of ' + 
'those nodes are unexpectedly modified or duplicated. This is ' + 
'probably not intentional.');}


invariant(
props.style == null || typeof props.style === 'object',
'The `style` prop expects a mapping from style properties to values, ' + 
'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 
'using JSX.');}



function putListener(id,registrationName,listener,transaction){
if(__DEV__){


warning(
registrationName !== 'onScroll' || isEventSupported('scroll',true),
'This browser doesn\'t support the `onScroll` event');}


var container=ReactMount.findReactContainerForID(id);
if(container){
var doc=container.nodeType === ELEMENT_NODE_TYPE?
container.ownerDocument:
container;
listenTo(registrationName,doc);}

transaction.getPutListenerQueue().enqueuePutListener(
id,
registrationName,
listener);}






var omittedCloseTags={
'area':true,
'base':true,
'br':true,
'col':true,
'embed':true,
'hr':true,
'img':true,
'input':true,
'keygen':true,
'link':true,
'meta':true,
'param':true,
'source':true,
'track':true,
'wbr':true};







var VALID_TAG_REGEX=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
var validatedTagCache={};
var hasOwnProperty=({}).hasOwnProperty;

function validateDangerousTag(tag){
if(!hasOwnProperty.call(validatedTagCache,tag)){
invariant(VALID_TAG_REGEX.test(tag),'Invalid tag: %s',tag);
validatedTagCache[tag] = true;}}

















function ReactDOMComponent(tag){
validateDangerousTag(tag);
this._tag = tag;
this._renderedChildren = null;
this._previousStyleCopy = null;
this._rootNodeID = null;}


ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

construct:function(element){
this._currentElement = element;},











mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
assertValidProps(this._currentElement.props);
var closeTag=omittedCloseTags[this._tag]?'':'</' + this._tag + '>';
return (
this._createOpenTagMarkupAndPutListeners(transaction) + 
this._createContentMarkup(transaction,context) + 
closeTag);},















_createOpenTagMarkupAndPutListeners:function(transaction){
var props=this._currentElement.props;
var ret='<' + this._tag;

for(var propKey in props) {
if(!props.hasOwnProperty(propKey)){
continue;}

var propValue=props[propKey];
if(propValue == null){
continue;}

if(registrationNameModules.hasOwnProperty(propKey)){
putListener(this._rootNodeID,propKey,propValue,transaction);}else 
{
if(propKey === STYLE){
if(propValue){
propValue = this._previousStyleCopy = assign({},props.style);}

propValue = CSSPropertyOperations.createMarkupForStyles(propValue);}

var markup=
DOMPropertyOperations.createMarkupForProperty(propKey,propValue);
if(markup){
ret += ' ' + markup;}}}






if(transaction.renderToStaticMarkup){
return ret + '>';}


var markupForID=DOMPropertyOperations.createMarkupForID(this._rootNodeID);
return ret + ' ' + markupForID + '>';},










_createContentMarkup:function(transaction,context){
var prefix='';
if(this._tag === 'listing' || 
this._tag === 'pre' || 
this._tag === 'textarea'){



prefix = '\n';}


var props=this._currentElement.props;


var innerHTML=props.dangerouslySetInnerHTML;
if(innerHTML != null){
if(innerHTML.__html != null){
return prefix + innerHTML.__html;}}else 

{
var contentToUse=
CONTENT_TYPES[typeof props.children]?props.children:null;
var childrenToUse=contentToUse != null?null:props.children;
if(contentToUse != null){
return prefix + escapeTextContentForBrowser(contentToUse);}else 
if(childrenToUse != null){
var mountImages=this.mountChildren(
childrenToUse,
transaction,
context);

return prefix + mountImages.join('');}}


return prefix;},


receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;
this.updateComponent(transaction,prevElement,nextElement,context);},












updateComponent:function(transaction,prevElement,nextElement,context){
assertValidProps(this._currentElement.props);
this._updateDOMProperties(prevElement.props,transaction);
this._updateDOMChildren(prevElement.props,transaction,context);},

















_updateDOMProperties:function(lastProps,transaction){
var nextProps=this._currentElement.props;
var propKey;
var styleName;
var styleUpdates;
for(propKey in lastProps) {
if(nextProps.hasOwnProperty(propKey) || 
!lastProps.hasOwnProperty(propKey)){
continue;}

if(propKey === STYLE){
var lastStyle=this._previousStyleCopy;
for(styleName in lastStyle) {
if(lastStyle.hasOwnProperty(styleName)){
styleUpdates = styleUpdates || {};
styleUpdates[styleName] = '';}}


this._previousStyleCopy = null;}else 
if(registrationNameModules.hasOwnProperty(propKey)){
deleteListener(this._rootNodeID,propKey);}else 
if(
DOMProperty.isStandardName[propKey] || 
DOMProperty.isCustomAttribute(propKey)){
BackendIDOperations.deletePropertyByID(
this._rootNodeID,
propKey);}}



for(propKey in nextProps) {
var nextProp=nextProps[propKey];
var lastProp=propKey === STYLE?
this._previousStyleCopy:
lastProps[propKey];
if(!nextProps.hasOwnProperty(propKey) || nextProp === lastProp){
continue;}

if(propKey === STYLE){
if(nextProp){
nextProp = this._previousStyleCopy = assign({},nextProp);}else 
{
this._previousStyleCopy = null;}

if(lastProp){

for(styleName in lastProp) {
if(lastProp.hasOwnProperty(styleName) && (
!nextProp || !nextProp.hasOwnProperty(styleName))){
styleUpdates = styleUpdates || {};
styleUpdates[styleName] = '';}}



for(styleName in nextProp) {
if(nextProp.hasOwnProperty(styleName) && 
lastProp[styleName] !== nextProp[styleName]){
styleUpdates = styleUpdates || {};
styleUpdates[styleName] = nextProp[styleName];}}}else 


{

styleUpdates = nextProp;}}else 

if(registrationNameModules.hasOwnProperty(propKey)){
putListener(this._rootNodeID,propKey,nextProp,transaction);}else 
if(
DOMProperty.isStandardName[propKey] || 
DOMProperty.isCustomAttribute(propKey)){
BackendIDOperations.updatePropertyByID(
this._rootNodeID,
propKey,
nextProp);}}



if(styleUpdates){
BackendIDOperations.updateStylesByID(
this._rootNodeID,
styleUpdates);}},











_updateDOMChildren:function(lastProps,transaction,context){
var nextProps=this._currentElement.props;

var lastContent=
CONTENT_TYPES[typeof lastProps.children]?lastProps.children:null;
var nextContent=
CONTENT_TYPES[typeof nextProps.children]?nextProps.children:null;

var lastHtml=
lastProps.dangerouslySetInnerHTML && 
lastProps.dangerouslySetInnerHTML.__html;
var nextHtml=
nextProps.dangerouslySetInnerHTML && 
nextProps.dangerouslySetInnerHTML.__html;


var lastChildren=lastContent != null?null:lastProps.children;
var nextChildren=nextContent != null?null:nextProps.children;



var lastHasContentOrHtml=lastContent != null || lastHtml != null;
var nextHasContentOrHtml=nextContent != null || nextHtml != null;
if(lastChildren != null && nextChildren == null){
this.updateChildren(null,transaction,context);}else 
if(lastHasContentOrHtml && !nextHasContentOrHtml){
this.updateTextContent('');}


if(nextContent != null){
if(lastContent !== nextContent){
this.updateTextContent('' + nextContent);}}else 

if(nextHtml != null){
if(lastHtml !== nextHtml){
BackendIDOperations.updateInnerHTMLByID(
this._rootNodeID,
nextHtml);}}else 


if(nextChildren != null){
this.updateChildren(nextChildren,transaction,context);}},









unmountComponent:function(){
this.unmountChildren();
ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
this._rootNodeID = null;}};




ReactPerf.measureMethods(ReactDOMComponent,'ReactDOMComponent',{
mountComponent:'mountComponent',
updateComponent:'updateComponent'});


assign(
ReactDOMComponent.prototype,
ReactDOMComponent.Mixin,
ReactMultiChild.Mixin);


ReactDOMComponent.injection = {
injectIDOperations:function(IDOperations){
ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;}};



module.exports = ReactDOMComponent;
});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup) - 1,
textContent:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
textContent:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren,transaction,context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildren,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren,transaction,context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},















_updateChildren:function(nextNestedChildren,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren,nextNestedChildren,transaction,context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex = Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex,lastIndex);
this._unmountChildByName(prevChild,name);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name],name);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
this.createChild(child,mountImage);},











_unmountChildByName:function(child,name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;
});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes,transaction,context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child,null);
children[name] = childInstance;}}


return children;},












updateChildren:function(
prevChildren,
nextNestedChildNodes,
transaction,
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}};





module.exports = ReactChildReconciler;
});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=!result.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports = flattenChildren;
});
__d('ReactDefaultInjection',["BeforeInputEventPlugin","ChangeEventPlugin","ClientReactRootIndex","DefaultEventPluginOrder","EnterLeaveEventPlugin","ExecutionEnvironment","HTMLDOMPropertyConfig","MobileSafariClickEventPlugin","ReactBrowserComponentMixin","ReactClass","ReactComponentBrowserEnvironment","ReactDefaultBatchingStrategy","ReactDOMComponent","ReactDOMButton","ReactDOMForm","ReactDOMImg","ReactDOMIDOperations","ReactDOMIframe","ReactDOMInput","ReactDOMOption","ReactDOMSelect","ReactDOMTextarea","ReactDOMTextComponent","ReactElement","ReactEventListener","ReactInjection","ReactInstanceHandles","ReactMount","ReactReconcileTransaction","SelectEventPlugin","ServerReactRootIndex","SimpleEventPlugin","SVGDOMPropertyConfig","createFullPageComponent","ReactDefaultPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var BeforeInputEventPlugin=require('BeforeInputEventPlugin');
var ChangeEventPlugin=require('ChangeEventPlugin');
var ClientReactRootIndex=require('ClientReactRootIndex');
var DefaultEventPluginOrder=require('DefaultEventPluginOrder');
var EnterLeaveEventPlugin=require('EnterLeaveEventPlugin');
var ExecutionEnvironment=require('ExecutionEnvironment');
var HTMLDOMPropertyConfig=require('HTMLDOMPropertyConfig');
var MobileSafariClickEventPlugin=require('MobileSafariClickEventPlugin');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactComponentBrowserEnvironment=
require('ReactComponentBrowserEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactDOMComponent=require('ReactDOMComponent');
var ReactDOMButton=require('ReactDOMButton');
var ReactDOMForm=require('ReactDOMForm');
var ReactDOMImg=require('ReactDOMImg');
var ReactDOMIDOperations=require('ReactDOMIDOperations');
var ReactDOMIframe=require('ReactDOMIframe');
var ReactDOMInput=require('ReactDOMInput');
var ReactDOMOption=require('ReactDOMOption');
var ReactDOMSelect=require('ReactDOMSelect');
var ReactDOMTextarea=require('ReactDOMTextarea');
var ReactDOMTextComponent=require('ReactDOMTextComponent');
var ReactElement=require('ReactElement');
var ReactEventListener=require('ReactEventListener');
var ReactInjection=require('ReactInjection');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactMount=require('ReactMount');
var ReactReconcileTransaction=require('ReactReconcileTransaction');
var SelectEventPlugin=require('SelectEventPlugin');
var ServerReactRootIndex=require('ServerReactRootIndex');
var SimpleEventPlugin=require('SimpleEventPlugin');
var SVGDOMPropertyConfig=require('SVGDOMPropertyConfig');

var createFullPageComponent=require('createFullPageComponent');

function autoGenerateWrapperClass(type){
return ReactClass.createClass({
tagName:type.toUpperCase(),
render:function(){
return new ReactElement(
type,
null,
null,
null,
null,
this.props);}});}





function inject(){
ReactInjection.EventEmitter.injectReactEventListener(
ReactEventListener);





ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
ReactInjection.EventPluginHub.injectMount(ReactMount);





ReactInjection.EventPluginHub.injectEventPluginsByName({
SimpleEventPlugin:SimpleEventPlugin,
EnterLeaveEventPlugin:EnterLeaveEventPlugin,
ChangeEventPlugin:ChangeEventPlugin,
MobileSafariClickEventPlugin:MobileSafariClickEventPlugin,
SelectEventPlugin:SelectEventPlugin,
BeforeInputEventPlugin:BeforeInputEventPlugin});


ReactInjection.NativeComponent.injectGenericComponentClass(
ReactDOMComponent);


ReactInjection.NativeComponent.injectTextComponentClass(
ReactDOMTextComponent);


ReactInjection.NativeComponent.injectAutoWrapper(
autoGenerateWrapperClass);




ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

ReactInjection.NativeComponent.injectComponentClasses({
'button':ReactDOMButton,
'form':ReactDOMForm,
'iframe':ReactDOMIframe,
'img':ReactDOMImg,
'input':ReactDOMInput,
'option':ReactDOMOption,
'select':ReactDOMSelect,
'textarea':ReactDOMTextarea,

'html':createFullPageComponent('html'),
'head':createFullPageComponent('head'),
'body':createFullPageComponent('body')});


ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

ReactInjection.Updates.injectReconcileTransaction(
ReactReconcileTransaction);

ReactInjection.Updates.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactInjection.RootIndex.injectCreateReactRootIndex(
ExecutionEnvironment.canUseDOM?
ClientReactRootIndex.createReactRootIndex:
ServerReactRootIndex.createReactRootIndex);


ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);

if(__DEV__){
var url=ExecutionEnvironment.canUseDOM && window.location.href || '';
if(/[?&]react_perf\b/.test(url)){
var ReactDefaultPerf=require('ReactDefaultPerf');
ReactDefaultPerf.start();}}}




module.exports = {
inject:inject};
});
__d('BeforeInputEventPlugin',["EventConstants","EventPropagators","ExecutionEnvironment","FallbackCompositionState","SyntheticCompositionEvent","SyntheticInputEvent","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPropagators=require('EventPropagators');
var ExecutionEnvironment=require('ExecutionEnvironment');
var FallbackCompositionState=require('FallbackCompositionState');
var SyntheticCompositionEvent=require('SyntheticCompositionEvent');
var SyntheticInputEvent=require('SyntheticInputEvent');

var keyOf=require('keyOf');

var END_KEYCODES=[9,13,27,32];
var START_KEYCODE=229;

var canUseCompositionEvent=
ExecutionEnvironment.canUseDOM && 
'CompositionEvent' in window;


var documentMode=null;
if(ExecutionEnvironment.canUseDOM && 'documentMode' in document){
documentMode = document.documentMode;}





var canUseTextInputEvent=
ExecutionEnvironment.canUseDOM && 
'TextEvent' in window && 
!documentMode && 
!isPresto();





var useFallbackCompositionData=
ExecutionEnvironment.canUseDOM && (

!canUseCompositionEvent || 
documentMode && documentMode > 8 && documentMode <= 11);







function isPresto(){
var opera=window.opera;
return (
typeof opera === 'object' && 
typeof opera.version === 'function' && 
parseInt(opera.version(),10) <= 12);}



var SPACEBAR_CODE=32;
var SPACEBAR_CHAR=String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes=EventConstants.topLevelTypes;


var eventTypes={
beforeInput:{
phasedRegistrationNames:{
bubbled:keyOf({onBeforeInput:null}),
captured:keyOf({onBeforeInputCapture:null})},

dependencies:[
topLevelTypes.topCompositionEnd,
topLevelTypes.topKeyPress,
topLevelTypes.topTextInput,
topLevelTypes.topPaste]},


compositionEnd:{
phasedRegistrationNames:{
bubbled:keyOf({onCompositionEnd:null}),
captured:keyOf({onCompositionEndCapture:null})},

dependencies:[
topLevelTypes.topBlur,
topLevelTypes.topCompositionEnd,
topLevelTypes.topKeyDown,
topLevelTypes.topKeyPress,
topLevelTypes.topKeyUp,
topLevelTypes.topMouseDown]},


compositionStart:{
phasedRegistrationNames:{
bubbled:keyOf({onCompositionStart:null}),
captured:keyOf({onCompositionStartCapture:null})},

dependencies:[
topLevelTypes.topBlur,
topLevelTypes.topCompositionStart,
topLevelTypes.topKeyDown,
topLevelTypes.topKeyPress,
topLevelTypes.topKeyUp,
topLevelTypes.topMouseDown]},


compositionUpdate:{
phasedRegistrationNames:{
bubbled:keyOf({onCompositionUpdate:null}),
captured:keyOf({onCompositionUpdateCapture:null})},

dependencies:[
topLevelTypes.topBlur,
topLevelTypes.topCompositionUpdate,
topLevelTypes.topKeyDown,
topLevelTypes.topKeyPress,
topLevelTypes.topKeyUp,
topLevelTypes.topMouseDown]}};





var hasSpaceKeypress=false;






function isKeypressCommand(nativeEvent){
return (
(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && 

!(nativeEvent.ctrlKey && nativeEvent.altKey));}










function getCompositionEventType(topLevelType){
switch(topLevelType){
case topLevelTypes.topCompositionStart:
return eventTypes.compositionStart;
case topLevelTypes.topCompositionEnd:
return eventTypes.compositionEnd;
case topLevelTypes.topCompositionUpdate:
return eventTypes.compositionUpdate;}}











function isFallbackCompositionStart(topLevelType,nativeEvent){
return (
topLevelType === topLevelTypes.topKeyDown && 
nativeEvent.keyCode === START_KEYCODE);}










function isFallbackCompositionEnd(topLevelType,nativeEvent){
switch(topLevelType){
case topLevelTypes.topKeyUp:

return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
case topLevelTypes.topKeyDown:


return nativeEvent.keyCode !== START_KEYCODE;
case topLevelTypes.topKeyPress:
case topLevelTypes.topMouseDown:
case topLevelTypes.topBlur:

return true;
default:
return false;}}












function getDataFromCustomEvent(nativeEvent){
var detail=nativeEvent.detail;
if(typeof detail === 'object' && 'data' in detail){
return detail.data;}

return null;}



var currentComposition=null;








function extractCompositionEvent(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var eventType;
var fallbackData;

if(canUseCompositionEvent){
eventType = getCompositionEventType(topLevelType);}else 
if(!currentComposition){
if(isFallbackCompositionStart(topLevelType,nativeEvent)){
eventType = eventTypes.compositionStart;}}else 

if(isFallbackCompositionEnd(topLevelType,nativeEvent)){
eventType = eventTypes.compositionEnd;}


if(!eventType){
return null;}


if(useFallbackCompositionData){


if(!currentComposition && eventType === eventTypes.compositionStart){
currentComposition = FallbackCompositionState.getPooled(topLevelTarget);}else 
if(eventType === eventTypes.compositionEnd){
if(currentComposition){
fallbackData = currentComposition.getData();}}}




var event=SyntheticCompositionEvent.getPooled(
eventType,
topLevelTargetID,
nativeEvent);


if(fallbackData){


event.data = fallbackData;}else 
{
var customData=getDataFromCustomEvent(nativeEvent);
if(customData !== null){
event.data = customData;}}



EventPropagators.accumulateTwoPhaseDispatches(event);
return event;}







function getNativeBeforeInputChars(topLevelType,nativeEvent){
switch(topLevelType){
case topLevelTypes.topCompositionEnd:
return getDataFromCustomEvent(nativeEvent);
case topLevelTypes.topKeyPress:














var which=nativeEvent.which;
if(which !== SPACEBAR_CODE){
return null;}


hasSpaceKeypress = true;
return SPACEBAR_CHAR;

case topLevelTypes.topTextInput:

var chars=nativeEvent.data;




if(chars === SPACEBAR_CHAR && hasSpaceKeypress){
return null;}


return chars;

default:

return null;}}











function getFallbackBeforeInputChars(topLevelType,nativeEvent){


if(currentComposition){
if(
topLevelType === topLevelTypes.topCompositionEnd || 
isFallbackCompositionEnd(topLevelType,nativeEvent))
{
var chars=currentComposition.getData();
FallbackCompositionState.release(currentComposition);
currentComposition = null;
return chars;}

return null;}


switch(topLevelType){
case topLevelTypes.topPaste:


return null;
case topLevelTypes.topKeyPress:
















if(nativeEvent.which && !isKeypressCommand(nativeEvent)){
return String.fromCharCode(nativeEvent.which);}

return null;
case topLevelTypes.topCompositionEnd:
return useFallbackCompositionData?null:nativeEvent.data;
default:
return null;}}













function extractBeforeInputEvent(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var chars;

if(canUseTextInputEvent){
chars = getNativeBeforeInputChars(topLevelType,nativeEvent);}else 
{
chars = getFallbackBeforeInputChars(topLevelType,nativeEvent);}




if(!chars){
return null;}


var event=SyntheticInputEvent.getPooled(
eventTypes.beforeInput,
topLevelTargetID,
nativeEvent);


event.data = chars;
EventPropagators.accumulateTwoPhaseDispatches(event);
return event;}




















var BeforeInputEventPlugin={

eventTypes:eventTypes,









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
return [
extractCompositionEvent(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent),

extractBeforeInputEvent(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)];}};





module.exports = BeforeInputEventPlugin;
});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;
});
__d('FallbackCompositionState',["PooledClass","Object.assign","getTextContentAccessor"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var getTextContentAccessor=require('getTextContentAccessor');












function FallbackCompositionState(root){
this._root = root;
this._startText = this.getText();
this._fallbackText = null;}


assign(FallbackCompositionState.prototype,{





getText:function(){
if('value' in this._root){
return this._root.value;}

return this._root[getTextContentAccessor()];},








getData:function(){
if(this._fallbackText){
return this._fallbackText;}


var start;
var startValue=this._startText;
var startLength=startValue.length;
var end;
var endValue=this.getText();
var endLength=endValue.length;

for(start = 0;start < startLength;start++) {
if(startValue[start] !== endValue[start]){
break;}}



var minEnd=startLength - start;
for(end = 1;end <= minEnd;end++) {
if(startValue[startLength - end] !== endValue[endLength - end]){
break;}}



var sliceTail=end > 1?1 - end:undefined;
this._fallbackText = endValue.slice(start,sliceTail);
return this._fallbackText;}});



PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
});
__d('getTextContentAccessor',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var contentKey=null;







function getTextContentAccessor(){
if(!contentKey && ExecutionEnvironment.canUseDOM){


contentKey = 'textContent' in document.documentElement?
'textContent':
'innerText';}

return contentKey;}


module.exports = getTextContentAccessor;
});
__d('SyntheticCompositionEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');





var CompositionEventInterface={
data:null};








function SyntheticCompositionEvent(
dispatchConfig,
dispatchMarker,
nativeEvent){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticEvent.augmentClass(
SyntheticCompositionEvent,
CompositionEventInterface);


module.exports = SyntheticCompositionEvent;
});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction","getEventTarget"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var getEventTarget=require('getEventTarget');





var EventInterface={
type:null,
target:getEventTarget,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp || Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({},Super.Interface,Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.threeArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;
});
__d('getEventTarget',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function getEventTarget(nativeEvent){
var target=nativeEvent.target || nativeEvent.srcElement || window;


return target.nodeType === 3?target.parentNode:target;}


module.exports = getEventTarget;
});
__d('SyntheticInputEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');






var InputEventInterface={
data:null};








function SyntheticInputEvent(
dispatchConfig,
dispatchMarker,
nativeEvent){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticEvent.augmentClass(
SyntheticInputEvent,
InputEventInterface);


module.exports = SyntheticInputEvent;
});
__d('ChangeEventPlugin',["EventConstants","EventPluginHub","EventPropagators","ExecutionEnvironment","ReactUpdates","SyntheticEvent","isEventSupported","isTextInputElement","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var ExecutionEnvironment=require('ExecutionEnvironment');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var isEventSupported=require('isEventSupported');
var isTextInputElement=require('isTextInputElement');
var keyOf=require('keyOf');

var topLevelTypes=EventConstants.topLevelTypes;

var eventTypes={
change:{
phasedRegistrationNames:{
bubbled:keyOf({onChange:null}),
captured:keyOf({onChangeCapture:null})},

dependencies:[
topLevelTypes.topBlur,
topLevelTypes.topChange,
topLevelTypes.topClick,
topLevelTypes.topFocus,
topLevelTypes.topInput,
topLevelTypes.topKeyDown,
topLevelTypes.topKeyUp,
topLevelTypes.topSelectionChange]}};







var activeElement=null;
var activeElementID=null;
var activeElementValue=null;
var activeElementValueProp=null;




function shouldUseChangeEvent(elem){
return (
elem.nodeName === 'SELECT' || 
elem.nodeName === 'INPUT' && elem.type === 'file');}



var doesChangeEventBubble=false;
if(ExecutionEnvironment.canUseDOM){

doesChangeEventBubble = isEventSupported('change') && (
!('documentMode' in document) || document.documentMode > 8);}



function manualDispatchChangeEvent(nativeEvent){
var event=SyntheticEvent.getPooled(
eventTypes.change,
activeElementID,
nativeEvent);

EventPropagators.accumulateTwoPhaseDispatches(event);












ReactUpdates.batchedUpdates(runEventInBatch,event);}


function runEventInBatch(event){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();}


function startWatchingForChangeEventIE8(target,targetID){
activeElement = target;
activeElementID = targetID;
activeElement.attachEvent('onchange',manualDispatchChangeEvent);}


function stopWatchingForChangeEventIE8(){
if(!activeElement){
return;}

activeElement.detachEvent('onchange',manualDispatchChangeEvent);
activeElement = null;
activeElementID = null;}


function getTargetIDForChangeEvent(
topLevelType,
topLevelTarget,
topLevelTargetID){
if(topLevelType === topLevelTypes.topChange){
return topLevelTargetID;}}


function handleEventsForChangeEventIE8(
topLevelType,
topLevelTarget,
topLevelTargetID){
if(topLevelType === topLevelTypes.topFocus){


stopWatchingForChangeEventIE8();
startWatchingForChangeEventIE8(topLevelTarget,topLevelTargetID);}else 
if(topLevelType === topLevelTypes.topBlur){
stopWatchingForChangeEventIE8();}}







var isInputEventSupported=false;
if(ExecutionEnvironment.canUseDOM){


isInputEventSupported = isEventSupported('input') && (
!('documentMode' in document) || document.documentMode > 9);}







var newValueProp={
get:function(){
return activeElementValueProp.get.call(this);},

set:function(val){

activeElementValue = '' + val;
activeElementValueProp.set.call(this,val);}};








function startWatchingForValueChange(target,targetID){
activeElement = target;
activeElementID = targetID;
activeElementValue = target.value;
activeElementValueProp = Object.getOwnPropertyDescriptor(
target.constructor.prototype,
'value');


Object.defineProperty(activeElement,'value',newValueProp);
activeElement.attachEvent('onpropertychange',handlePropertyChange);}






function stopWatchingForValueChange(){
if(!activeElement){
return;}



delete activeElement.value;
activeElement.detachEvent('onpropertychange',handlePropertyChange);

activeElement = null;
activeElementID = null;
activeElementValue = null;
activeElementValueProp = null;}






function handlePropertyChange(nativeEvent){
if(nativeEvent.propertyName !== 'value'){
return;}

var value=nativeEvent.srcElement.value;
if(value === activeElementValue){
return;}

activeElementValue = value;

manualDispatchChangeEvent(nativeEvent);}





function getTargetIDForInputEvent(
topLevelType,
topLevelTarget,
topLevelTargetID){
if(topLevelType === topLevelTypes.topInput){


return topLevelTargetID;}}




function handleEventsForInputEventIE(
topLevelType,
topLevelTarget,
topLevelTargetID){
if(topLevelType === topLevelTypes.topFocus){













stopWatchingForValueChange();
startWatchingForValueChange(topLevelTarget,topLevelTargetID);}else 
if(topLevelType === topLevelTypes.topBlur){
stopWatchingForValueChange();}}




function getTargetIDForInputEventIE(
topLevelType,
topLevelTarget,
topLevelTargetID){
if(topLevelType === topLevelTypes.topSelectionChange || 
topLevelType === topLevelTypes.topKeyUp || 
topLevelType === topLevelTypes.topKeyDown){










if(activeElement && activeElement.value !== activeElementValue){
activeElementValue = activeElement.value;
return activeElementID;}}}








function shouldUseClickEvent(elem){



return (
elem.nodeName === 'INPUT' && (
elem.type === 'checkbox' || elem.type === 'radio'));}



function getTargetIDForClickEvent(
topLevelType,
topLevelTarget,
topLevelTargetID){
if(topLevelType === topLevelTypes.topClick){
return topLevelTargetID;}}













var ChangeEventPlugin={

eventTypes:eventTypes,









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){

var getTargetIDFunc,handleEventFunc;
if(shouldUseChangeEvent(topLevelTarget)){
if(doesChangeEventBubble){
getTargetIDFunc = getTargetIDForChangeEvent;}else 
{
handleEventFunc = handleEventsForChangeEventIE8;}}else 

if(isTextInputElement(topLevelTarget)){
if(isInputEventSupported){
getTargetIDFunc = getTargetIDForInputEvent;}else 
{
getTargetIDFunc = getTargetIDForInputEventIE;
handleEventFunc = handleEventsForInputEventIE;}}else 

if(shouldUseClickEvent(topLevelTarget)){
getTargetIDFunc = getTargetIDForClickEvent;}


if(getTargetIDFunc){
var targetID=getTargetIDFunc(
topLevelType,
topLevelTarget,
topLevelTargetID);

if(targetID){
var event=SyntheticEvent.getPooled(
eventTypes.change,
targetID,
nativeEvent);

EventPropagators.accumulateTwoPhaseDispatches(event);
return event;}}



if(handleEventFunc){
handleEventFunc(
topLevelType,
topLevelTarget,
topLevelTargetID);}}};






module.exports = ChangeEventPlugin;
});
__d('isTextInputElement',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var supportedInputTypes={
'color':true,
'date':true,
'datetime':true,
'datetime-local':true,
'email':true,
'month':true,
'number':true,
'password':true,
'range':true,
'search':true,
'tel':true,
'text':true,
'time':true,
'url':true,
'week':true};


function isTextInputElement(elem){
return elem && (
elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || 
elem.nodeName === 'TEXTAREA');}



module.exports = isTextInputElement;
});
__d('ClientReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var nextReactRootIndex=0;

var ClientReactRootIndex={
createReactRootIndex:function(){
return nextReactRootIndex++;}};



module.exports = ClientReactRootIndex;
});
__d('DefaultEventPluginOrder',["keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyOf=require('keyOf');










var DefaultEventPluginOrder=[
keyOf({ResponderEventPlugin:null}),
keyOf({SimpleEventPlugin:null}),
keyOf({TapEventPlugin:null}),
keyOf({EnterLeaveEventPlugin:null}),
keyOf({ChangeEventPlugin:null}),
keyOf({SelectEventPlugin:null}),
keyOf({BeforeInputEventPlugin:null}),
keyOf({AnalyticsEventPlugin:null}),
keyOf({MobileSafariClickEventPlugin:null})];


module.exports = DefaultEventPluginOrder;
});
__d('EnterLeaveEventPlugin',["EventConstants","EventPropagators","SyntheticMouseEvent","ReactMount","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPropagators=require('EventPropagators');
var SyntheticMouseEvent=require('SyntheticMouseEvent');

var ReactMount=require('ReactMount');
var keyOf=require('keyOf');

var topLevelTypes=EventConstants.topLevelTypes;
var getFirstReactDOM=ReactMount.getFirstReactDOM;

var eventTypes={
mouseEnter:{
registrationName:keyOf({onMouseEnter:null}),
dependencies:[
topLevelTypes.topMouseOut,
topLevelTypes.topMouseOver]},


mouseLeave:{
registrationName:keyOf({onMouseLeave:null}),
dependencies:[
topLevelTypes.topMouseOut,
topLevelTypes.topMouseOver]}};




var extractedEvents=[null,null];

var EnterLeaveEventPlugin={

eventTypes:eventTypes,















extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
if(topLevelType === topLevelTypes.topMouseOver && (
nativeEvent.relatedTarget || nativeEvent.fromElement)){
return null;}

if(topLevelType !== topLevelTypes.topMouseOut && 
topLevelType !== topLevelTypes.topMouseOver){

return null;}


var win;
if(topLevelTarget.window === topLevelTarget){

win = topLevelTarget;}else 
{

var doc=topLevelTarget.ownerDocument;
if(doc){
win = doc.defaultView || doc.parentWindow;}else 
{
win = window;}}



var from,to;
if(topLevelType === topLevelTypes.topMouseOut){
from = topLevelTarget;
to = 
getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) || 
win;}else 
{
from = win;
to = topLevelTarget;}


if(from === to){

return null;}


var fromID=from?ReactMount.getID(from):'';
var toID=to?ReactMount.getID(to):'';

var leave=SyntheticMouseEvent.getPooled(
eventTypes.mouseLeave,
fromID,
nativeEvent);

leave.type = 'mouseleave';
leave.target = from;
leave.relatedTarget = to;

var enter=SyntheticMouseEvent.getPooled(
eventTypes.mouseEnter,
toID,
nativeEvent);

enter.type = 'mouseenter';
enter.target = to;
enter.relatedTarget = from;

EventPropagators.accumulateEnterLeaveDispatches(leave,enter,fromID,toID);

extractedEvents[0] = leave;
extractedEvents[1] = enter;

return extractedEvents;}};




module.exports = EnterLeaveEventPlugin;
});
__d('SyntheticMouseEvent',["SyntheticUIEvent","ViewportMetrics","getEventModifierState"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticUIEvent=require('SyntheticUIEvent');
var ViewportMetrics=require('ViewportMetrics');

var getEventModifierState=require('getEventModifierState');





var MouseEventInterface={
screenX:null,
screenY:null,
clientX:null,
clientY:null,
ctrlKey:null,
shiftKey:null,
altKey:null,
metaKey:null,
getModifierState:getEventModifierState,
button:function(event){



var button=event.button;
if('which' in event){
return button;}





return button === 2?2:button === 4?1:0;},

buttons:null,
relatedTarget:function(event){
return event.relatedTarget || (
event.fromElement === event.srcElement?
event.toElement:
event.fromElement);},



pageX:function(event){
return 'pageX' in event?
event.pageX:
event.clientX + ViewportMetrics.currentScrollLeft;},

pageY:function(event){
return 'pageY' in event?
event.pageY:
event.clientY + ViewportMetrics.currentScrollTop;}};









function SyntheticMouseEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticUIEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticUIEvent.augmentClass(SyntheticMouseEvent,MouseEventInterface);

module.exports = SyntheticMouseEvent;
});
__d('SyntheticUIEvent',["SyntheticEvent","getEventTarget"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');

var getEventTarget=require('getEventTarget');





var UIEventInterface={
view:function(event){
if(event.view){
return event.view;}


var target=getEventTarget(event);
if(target != null && target.window === target){

return target;}


var doc=target.ownerDocument;

if(doc){
return doc.defaultView || doc.parentWindow;}else 
{
return window;}},


detail:function(event){
return event.detail || 0;}};









function SyntheticUIEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticEvent.augmentClass(SyntheticUIEvent,UIEventInterface);

module.exports = SyntheticUIEvent;
});
__d('getEventModifierState',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var modifierKeyToProp={
'Alt':'altKey',
'Control':'ctrlKey',
'Meta':'metaKey',
'Shift':'shiftKey'};





function modifierStateGetter(keyArg){

var syntheticEvent=this;
var nativeEvent=syntheticEvent.nativeEvent;
if(nativeEvent.getModifierState){
return nativeEvent.getModifierState(keyArg);}

var keyProp=modifierKeyToProp[keyArg];
return keyProp?!!nativeEvent[keyProp]:false;}


function getEventModifierState(nativeEvent){
return modifierStateGetter;}


module.exports = getEventModifierState;
});
__d('HTMLDOMPropertyConfig',["DOMProperty","ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var DOMProperty=require('DOMProperty');
var ExecutionEnvironment=require('ExecutionEnvironment');

var MUST_USE_ATTRIBUTE=DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY=DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE=DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS=DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE=DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE=
DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE=
DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var hasSVG;
if(ExecutionEnvironment.canUseDOM){
var implementation=document.implementation;
hasSVG = 
implementation && 
implementation.hasFeature && 
implementation.hasFeature(
'http://www.w3.org/TR/SVG11/feature#BasicStructure',
'1.1');}





var HTMLDOMPropertyConfig={
isCustomAttribute:RegExp.prototype.test.bind(
/^(data|aria)-[a-z_][a-z\d_.\-]*$/),

Properties:{



accept:null,
acceptCharset:null,
accessKey:null,
action:null,
allowFullScreen:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
allowTransparency:MUST_USE_ATTRIBUTE,
alt:null,
async:HAS_BOOLEAN_VALUE,
autoComplete:null,


autoPlay:HAS_BOOLEAN_VALUE,
cellPadding:null,
cellSpacing:null,
charSet:MUST_USE_ATTRIBUTE,
checked:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
classID:MUST_USE_ATTRIBUTE,





className:hasSVG?MUST_USE_ATTRIBUTE:MUST_USE_PROPERTY,
cols:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
colSpan:null,
content:null,
contentEditable:null,
contextMenu:MUST_USE_ATTRIBUTE,
controls:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
coords:null,
crossOrigin:null,
data:null,
dateTime:MUST_USE_ATTRIBUTE,
defer:HAS_BOOLEAN_VALUE,
dir:null,
disabled:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
download:HAS_OVERLOADED_BOOLEAN_VALUE,
draggable:null,
encType:null,
form:MUST_USE_ATTRIBUTE,
formAction:MUST_USE_ATTRIBUTE,
formEncType:MUST_USE_ATTRIBUTE,
formMethod:MUST_USE_ATTRIBUTE,
formNoValidate:HAS_BOOLEAN_VALUE,
formTarget:MUST_USE_ATTRIBUTE,
frameBorder:MUST_USE_ATTRIBUTE,
headers:null,
height:MUST_USE_ATTRIBUTE,
hidden:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
high:null,
href:null,
hrefLang:null,
htmlFor:null,
httpEquiv:null,
icon:null,
id:MUST_USE_PROPERTY,
label:null,
lang:null,
list:MUST_USE_ATTRIBUTE,
loop:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
low:null,
manifest:MUST_USE_ATTRIBUTE,
marginHeight:null,
marginWidth:null,
max:null,
maxLength:MUST_USE_ATTRIBUTE,
media:MUST_USE_ATTRIBUTE,
mediaGroup:null,
method:null,
min:null,
multiple:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
muted:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
name:null,
noValidate:HAS_BOOLEAN_VALUE,
open:HAS_BOOLEAN_VALUE,
optimum:null,
pattern:null,
placeholder:null,
poster:null,
preload:null,
radioGroup:null,
readOnly:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
rel:null,
required:HAS_BOOLEAN_VALUE,
role:MUST_USE_ATTRIBUTE,
rows:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
rowSpan:null,
sandbox:null,
scope:null,
scoped:HAS_BOOLEAN_VALUE,
scrolling:null,
seamless:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
selected:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
shape:null,
size:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
sizes:MUST_USE_ATTRIBUTE,
span:HAS_POSITIVE_NUMERIC_VALUE,
spellCheck:null,
src:null,
srcDoc:MUST_USE_PROPERTY,
srcSet:MUST_USE_ATTRIBUTE,
start:HAS_NUMERIC_VALUE,
step:null,
style:null,
tabIndex:null,
target:null,
title:null,
type:null,
useMap:null,
value:MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
width:MUST_USE_ATTRIBUTE,
wmode:MUST_USE_ATTRIBUTE,






autoCapitalize:null,
autoCorrect:null,


itemProp:MUST_USE_ATTRIBUTE,
itemScope:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
itemType:MUST_USE_ATTRIBUTE,



itemID:MUST_USE_ATTRIBUTE,
itemRef:MUST_USE_ATTRIBUTE,

property:null,

unselectable:MUST_USE_ATTRIBUTE},

DOMAttributeNames:{
acceptCharset:'accept-charset',
className:'class',
htmlFor:'for',
httpEquiv:'http-equiv'},

DOMPropertyNames:{
autoCapitalize:'autocapitalize',
autoComplete:'autocomplete',
autoCorrect:'autocorrect',
autoFocus:'autofocus',
autoPlay:'autoplay',


encType:'encoding',
hrefLang:'hreflang',
radioGroup:'radiogroup',
spellCheck:'spellcheck',
srcDoc:'srcdoc',
srcSet:'srcset'}};



module.exports = HTMLDOMPropertyConfig;
});
__d('MobileSafariClickEventPlugin',["EventConstants","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');

var emptyFunction=require('emptyFunction');

var topLevelTypes=EventConstants.topLevelTypes;









var MobileSafariClickEventPlugin={

eventTypes:null,









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
if(topLevelType === topLevelTypes.topTouchStart){
var target=nativeEvent.target;
if(target && !target.onclick){
target.onclick = emptyFunction;}}}};






module.exports = MobileSafariClickEventPlugin;
});
__d('ReactBrowserComponentMixin',["findDOMNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var findDOMNode=require('findDOMNode');

var ReactBrowserComponentMixin={







getDOMNode:function(){
return findDOMNode(this);}};



module.exports = ReactBrowserComponentMixin;
});
__d('findDOMNode',["ReactCurrentOwner","ReactInstanceMap","ReactMount","invariant","isNode","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var isNode=require('isNode');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing getDOMNode or findDOMNode inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrElement == null){
return null;}

if(isNode(componentOrElement)){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render == null || 
typeof componentOrElement.render !== 'function',
'Component (with keys: %s) contains `render` method ' + 
'but is not mounted in the DOM',
Object.keys(componentOrElement));

invariant(
false,
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
Object.keys(componentOrElement));}



module.exports = findDOMNode;
});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a,b,c,d);}else 
{
transaction.perform(callback,null,a,b,c,d);}}};




module.exports = ReactDefaultBatchingStrategy;
});
__d('ReactDOMButton',["AutoFocusMixin","ReactBrowserComponentMixin","ReactClass","ReactElement","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AutoFocusMixin=require('AutoFocusMixin');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');

var keyMirror=require('keyMirror');

var button=ReactElement.createFactory('button');

var mouseListenerNames=keyMirror({
onClick:true,
onDoubleClick:true,
onMouseDown:true,
onMouseMove:true,
onMouseUp:true,
onClickCapture:true,
onDoubleClickCapture:true,
onMouseDownCapture:true,
onMouseMoveCapture:true,
onMouseUpCapture:true});






var ReactDOMButton=ReactClass.createClass({
displayName:'ReactDOMButton',
tagName:'BUTTON',

mixins:[AutoFocusMixin,ReactBrowserComponentMixin],

render:function(){
var props={};


for(var key in this.props) {
if(this.props.hasOwnProperty(key) && (
!this.props.disabled || !mouseListenerNames[key])){
props[key] = this.props[key];}}



return button(props,this.props.children);}});




module.exports = ReactDOMButton;
});
__d('AutoFocusMixin',["focusNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var focusNode=require('focusNode');

var AutoFocusMixin={
componentDidMount:function(){
if(this.props.autoFocus){
focusNode(this.getDOMNode());}}};




module.exports = AutoFocusMixin;
});
__d('focusNode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";















function focusNode(node){



try{
node.focus();}
catch(e) {}}



module.exports = focusNode;
});
__d('ReactDOMForm',["EventConstants","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactClass","ReactElement"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var LocalEventTrapMixin=require('LocalEventTrapMixin');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');

var form=ReactElement.createFactory('form');







var ReactDOMForm=ReactClass.createClass({
displayName:'ReactDOMForm',
tagName:'FORM',

mixins:[ReactBrowserComponentMixin,LocalEventTrapMixin],

render:function(){



return form(this.props);},


componentDidMount:function(){
this.trapBubbledEvent(EventConstants.topLevelTypes.topReset,'reset');
this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit,'submit');}});



module.exports = ReactDOMForm;
});
__d('LocalEventTrapMixin',["ReactBrowserEventEmitter","accumulateInto","forEachAccumulated","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');

function remove(event){
event.remove();}


var LocalEventTrapMixin={
trapBubbledEvent:function(topLevelType,handlerBaseName){
invariant(this.isMounted(),'Must be mounted to trap events');


var node=this.getDOMNode();
invariant(
node,
'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.');

var listener=ReactBrowserEventEmitter.trapBubbledEvent(
topLevelType,
handlerBaseName,
node);

this._localEventListeners = 
accumulateInto(this._localEventListeners,listener);},





componentWillUnmount:function(){
if(this._localEventListeners){
forEachAccumulated(this._localEventListeners,remove);}}};




module.exports = LocalEventTrapMixin;
});
__d('ReactDOMImg',["EventConstants","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactClass","ReactElement"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var LocalEventTrapMixin=require('LocalEventTrapMixin');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');

var img=ReactElement.createFactory('img');







var ReactDOMImg=ReactClass.createClass({
displayName:'ReactDOMImg',
tagName:'IMG',

mixins:[ReactBrowserComponentMixin,LocalEventTrapMixin],

render:function(){
return img(this.props);},


componentDidMount:function(){
this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad,'load');
this.trapBubbledEvent(EventConstants.topLevelTypes.topError,'error');}});



module.exports = ReactDOMImg;
});
__d('ReactDOMIframe',["EventConstants","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactClass","ReactElement"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var LocalEventTrapMixin=require('LocalEventTrapMixin');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');

var iframe=ReactElement.createFactory('iframe');







var ReactDOMIframe=ReactClass.createClass({
displayName:'ReactDOMIframe',
tagName:'IFRAME',

mixins:[ReactBrowserComponentMixin,LocalEventTrapMixin],

render:function(){
return iframe(this.props);},


componentDidMount:function(){
this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad,'load');}});



module.exports = ReactDOMIframe;
});
__d('ReactDOMInput',["AutoFocusMixin","DOMPropertyOperations","LinkedValueUtils","ReactBrowserComponentMixin","ReactClass","ReactElement","ReactMount","ReactUpdates","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AutoFocusMixin=require('AutoFocusMixin');
var DOMPropertyOperations=require('DOMPropertyOperations');
var LinkedValueUtils=require('LinkedValueUtils');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');

var input=ReactElement.createFactory('input');

var instancesByReactID={};

function forceUpdateIfMounted(){

if(this.isMounted()){
this.forceUpdate();}}



















var ReactDOMInput=ReactClass.createClass({
displayName:'ReactDOMInput',
tagName:'INPUT',

mixins:[AutoFocusMixin,LinkedValueUtils.Mixin,ReactBrowserComponentMixin],

getInitialState:function(){
var defaultValue=this.props.defaultValue;
return {
initialChecked:this.props.defaultChecked || false,
initialValue:defaultValue != null?defaultValue:null};},



render:function(){

var props=assign({},this.props);

props.defaultChecked = null;
props.defaultValue = null;

var value=LinkedValueUtils.getValue(this);
props.value = value != null?value:this.state.initialValue;

var checked=LinkedValueUtils.getChecked(this);
props.checked = checked != null?checked:this.state.initialChecked;

props.onChange = this._handleChange;

return input(props,this.props.children);},


componentDidMount:function(){
var id=ReactMount.getID(this.getDOMNode());
instancesByReactID[id] = this;},


componentWillUnmount:function(){
var rootNode=this.getDOMNode();
var id=ReactMount.getID(rootNode);
delete instancesByReactID[id];},


componentDidUpdate:function(prevProps,prevState,prevContext){
var rootNode=this.getDOMNode();
if(this.props.checked != null){
DOMPropertyOperations.setValueForProperty(
rootNode,
'checked',
this.props.checked || false);}



var value=LinkedValueUtils.getValue(this);
if(value != null){


DOMPropertyOperations.setValueForProperty(rootNode,'value','' + value);}},



_handleChange:function(event){
var returnValue;
var onChange=LinkedValueUtils.getOnChange(this);
if(onChange){
returnValue = onChange.call(this,event);}




ReactUpdates.asap(forceUpdateIfMounted,this);

var name=this.props.name;
if(this.props.type === 'radio' && name != null){
var rootNode=this.getDOMNode();
var queryRoot=rootNode;

while(queryRoot.parentNode) {
queryRoot = queryRoot.parentNode;}








var group=queryRoot.querySelectorAll(
'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

for(var i=0,groupLen=group.length;i < groupLen;i++) {
var otherNode=group[i];
if(otherNode === rootNode || 
otherNode.form !== rootNode.form){
continue;}

var otherID=ReactMount.getID(otherNode);
invariant(
otherID,
'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 
'same `name` is not supported.');

var otherInstance=instancesByReactID[otherID];
invariant(
otherInstance,
'ReactDOMInput: Unknown radio button ID %s.',
otherID);




ReactUpdates.asap(forceUpdateIfMounted,otherInstance);}}



return returnValue;}});




module.exports = ReactDOMInput;
});
__d('LinkedValueUtils',["ReactPropTypes","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactPropTypes=require('ReactPropTypes');

var invariant=require('invariant');

var hasReadOnlyValue={
'button':true,
'checkbox':true,
'image':true,
'hidden':true,
'radio':true,
'reset':true,
'submit':true};


function _assertSingleLink(input){
invariant(
input.props.checkedLink == null || input.props.valueLink == null,
'Cannot provide a checkedLink and a valueLink. If you want to use ' + 
'checkedLink, you probably don\'t want to use valueLink and vice versa.');}


function _assertValueLink(input){
_assertSingleLink(input);
invariant(
input.props.value == null && input.props.onChange == null,
'Cannot provide a valueLink and a value or onChange event. If you want ' + 
'to use value or onChange, you probably don\'t want to use valueLink.');}



function _assertCheckedLink(input){
_assertSingleLink(input);
invariant(
input.props.checked == null && input.props.onChange == null,
'Cannot provide a checkedLink and a checked property or onChange event. ' + 
'If you want to use checked or onChange, you probably don\'t want to ' + 
'use checkedLink');}






function _handleLinkedValueChange(e){

this.props.valueLink.requestChange(e.target.value);}





function _handleLinkedCheckChange(e){

this.props.checkedLink.requestChange(e.target.checked);}






var LinkedValueUtils={
Mixin:{
propTypes:{
value:function(props,propName,componentName){
if(!props[propName] || 
hasReadOnlyValue[props.type] || 
props.onChange || 
props.readOnly || 
props.disabled){
return null;}

return new Error(
'You provided a `value` prop to a form field without an ' + 
'`onChange` handler. This will render a read-only field. If ' + 
'the field should be mutable use `defaultValue`. Otherwise, ' + 
'set either `onChange` or `readOnly`.');},


checked:function(props,propName,componentName){
if(!props[propName] || 
props.onChange || 
props.readOnly || 
props.disabled){
return null;}

return new Error(
'You provided a `checked` prop to a form field without an ' + 
'`onChange` handler. This will render a read-only field. If ' + 
'the field should be mutable use `defaultChecked`. Otherwise, ' + 
'set either `onChange` or `readOnly`.');},


onChange:ReactPropTypes.func}},







getValue:function(input){
if(input.props.valueLink){
_assertValueLink(input);
return input.props.valueLink.value;}

return input.props.value;},







getChecked:function(input){
if(input.props.checkedLink){
_assertCheckedLink(input);
return input.props.checkedLink.value;}

return input.props.checked;},






getOnChange:function(input){
if(input.props.valueLink){
_assertValueLink(input);
return _handleLinkedValueChange;}else 
if(input.props.checkedLink){
_assertCheckedLink(input);
return _handleLinkedCheckChange;}

return input.props.onChange;}};



module.exports = LinkedValueUtils;
});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var elementTypeChecker=createElementTypeChecker();
var nodeTypeChecker=createNodeChecker();

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:elementTypeChecker,
instanceOf:createInstanceTypeChecker,
node:nodeTypeChecker,
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(isRequired,props,propName,componentName,location){
componentName = componentName || ANONYMOUS;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props,propName,componentName,location);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired = checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + preciseType + '` ' + ('supplied to `' + 
componentName + '`, expected `' + expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0;i < propValue.length;i++) {
var error=typeChecker(propValue,i,componentName,location);
if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
function validate(props,propName,componentName,location){
var propValue=props[propName];
for(var i=0;i < expectedValues.length;i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(propValue,key,componentName,location);
if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
function validate(props,propName,componentName,location){
for(var i=0;i < arrayOfTypeCheckers.length;i++) {
var checker=arrayOfTypeCheckers[i];
if(checker(props,propName,componentName,location) == null){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(propValue,key,componentName,location);
if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;
});
__d('ReactDOMOption',["ReactBrowserComponentMixin","ReactClass","ReactElement","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');

var warning=require('warning');

var option=ReactElement.createFactory('option');




var ReactDOMOption=ReactClass.createClass({
displayName:'ReactDOMOption',
tagName:'OPTION',

mixins:[ReactBrowserComponentMixin],

componentWillMount:function(){

if(__DEV__){
warning(
this.props.selected == null,
'Use the `defaultValue` or `value` props on <select> instead of ' + 
'setting `selected` on <option>.');}},




render:function(){
return option(this.props,this.props.children);}});




module.exports = ReactDOMOption;
});
__d('ReactDOMSelect',["AutoFocusMixin","LinkedValueUtils","ReactBrowserComponentMixin","ReactClass","ReactElement","ReactUpdates","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AutoFocusMixin=require('AutoFocusMixin');
var LinkedValueUtils=require('LinkedValueUtils');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');

var select=ReactElement.createFactory('select');

function updateOptionsIfPendingUpdateAndMounted(){

if(this._pendingUpdate){
this._pendingUpdate = false;
var value=LinkedValueUtils.getValue(this);
if(value != null && this.isMounted()){
updateOptions(this,value);}}}








function selectValueType(props,propName,componentName){
if(props[propName] == null){
return null;}

if(props.multiple){
if(!Array.isArray(props[propName])){
return new Error(
'The `' + propName + '` prop supplied to <select> must be an array if ' + '`multiple` is true.');}}else 



{
if(Array.isArray(props[propName])){
return new Error(
'The `' + propName + '` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.');}}}











function updateOptions(component,propValue){
var selectedValue,i,l;
var options=component.getDOMNode().options;

if(component.props.multiple){
selectedValue = {};
for(i = 0,l = propValue.length;i < l;i++) {
selectedValue['' + propValue[i]] = true;}

for(i = 0,l = options.length;i < l;i++) {
var selected=selectedValue.hasOwnProperty(options[i].value);
if(options[i].selected !== selected){
options[i].selected = selected;}}}else 


{


selectedValue = '' + propValue;
for(i = 0,l = options.length;i < l;i++) {
if(options[i].value === selectedValue){
options[i].selected = true;
return;}}


if(options.length){
options[0].selected = true;}}}



















var ReactDOMSelect=ReactClass.createClass({
displayName:'ReactDOMSelect',
tagName:'SELECT',

mixins:[AutoFocusMixin,LinkedValueUtils.Mixin,ReactBrowserComponentMixin],

propTypes:{
defaultValue:selectValueType,
value:selectValueType},


render:function(){

var props=assign({},this.props);

props.onChange = this._handleChange;
props.value = null;

return select(props,this.props.children);},


componentWillMount:function(){
this._pendingUpdate = false;},


componentDidMount:function(){
var value=LinkedValueUtils.getValue(this);
if(value != null){
updateOptions(this,value);}else 
if(this.props.defaultValue != null){
updateOptions(this,this.props.defaultValue);}},



componentDidUpdate:function(prevProps){
var value=LinkedValueUtils.getValue(this);
if(value != null){
this._pendingUpdate = false;
updateOptions(this,value);}else 
if(!prevProps.multiple !== !this.props.multiple){

if(this.props.defaultValue != null){
updateOptions(this,this.props.defaultValue);}else 
{

updateOptions(this,this.props.multiple?[]:'');}}},




_handleChange:function(event){
var returnValue;
var onChange=LinkedValueUtils.getOnChange(this);
if(onChange){
returnValue = onChange.call(this,event);}


this._pendingUpdate = true;
ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted,this);
return returnValue;}});




module.exports = ReactDOMSelect;
});
__d('ReactDOMTextarea',["AutoFocusMixin","DOMPropertyOperations","LinkedValueUtils","ReactBrowserComponentMixin","ReactClass","ReactElement","ReactUpdates","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AutoFocusMixin=require('AutoFocusMixin');
var DOMPropertyOperations=require('DOMPropertyOperations');
var LinkedValueUtils=require('LinkedValueUtils');
var ReactBrowserComponentMixin=require('ReactBrowserComponentMixin');
var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');

var warning=require('warning');

var textarea=ReactElement.createFactory('textarea');

function forceUpdateIfMounted(){

if(this.isMounted()){
this.forceUpdate();}}


















var ReactDOMTextarea=ReactClass.createClass({
displayName:'ReactDOMTextarea',
tagName:'TEXTAREA',

mixins:[AutoFocusMixin,LinkedValueUtils.Mixin,ReactBrowserComponentMixin],

getInitialState:function(){
var defaultValue=this.props.defaultValue;

var children=this.props.children;
if(children != null){
if(__DEV__){
warning(
false,
'Use the `defaultValue` or `value` props instead of setting ' + 
'children on <textarea>.');}


invariant(
defaultValue == null,
'If you supply `defaultValue` on a <textarea>, do not pass children.');

if(Array.isArray(children)){
invariant(
children.length <= 1,
'<textarea> can only have at most one child.');

children = children[0];}


defaultValue = '' + children;}

if(defaultValue == null){
defaultValue = '';}

var value=LinkedValueUtils.getValue(this);
return {




initialValue:'' + (value != null?value:defaultValue)};},



render:function(){

var props=assign({},this.props);

invariant(
props.dangerouslySetInnerHTML == null,
'`dangerouslySetInnerHTML` does not make sense on <textarea>.');


props.defaultValue = null;
props.value = null;
props.onChange = this._handleChange;



return textarea(props,this.state.initialValue);},


componentDidUpdate:function(prevProps,prevState,prevContext){
var value=LinkedValueUtils.getValue(this);
if(value != null){
var rootNode=this.getDOMNode();


DOMPropertyOperations.setValueForProperty(rootNode,'value','' + value);}},



_handleChange:function(event){
var returnValue;
var onChange=LinkedValueUtils.getOnChange(this);
if(onChange){
returnValue = onChange.call(this,event);}

ReactUpdates.asap(forceUpdateIfMounted,this);
return returnValue;}});




module.exports = ReactDOMTextarea;
});
__d('ReactEventListener',["EventListener","ExecutionEnvironment","PooledClass","ReactInstanceHandles","ReactMount","ReactUpdates","Object.assign","getEventTarget","getUnboundedScrollPosition"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventListener=require('EventListener');
var ExecutionEnvironment=require('ExecutionEnvironment');
var PooledClass=require('PooledClass');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var getEventTarget=require('getEventTarget');
var getUnboundedScrollPosition=require('getUnboundedScrollPosition');








function findParent(node){



var nodeID=ReactMount.getID(node);
var rootID=ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
var container=ReactMount.findReactContainerForID(rootID);
var parent=ReactMount.getFirstReactDOM(container);
return parent;}



function TopLevelCallbackBookKeeping(topLevelType,nativeEvent){
this.topLevelType = topLevelType;
this.nativeEvent = nativeEvent;
this.ancestors = [];}

assign(TopLevelCallbackBookKeeping.prototype,{
destructor:function(){
this.topLevelType = null;
this.nativeEvent = null;
this.ancestors.length = 0;}});


PooledClass.addPoolingTo(
TopLevelCallbackBookKeeping,
PooledClass.twoArgumentPooler);


function handleTopLevelImpl(bookKeeping){
var topLevelTarget=ReactMount.getFirstReactDOM(
getEventTarget(bookKeeping.nativeEvent)) || 
window;





var ancestor=topLevelTarget;
while(ancestor) {
bookKeeping.ancestors.push(ancestor);
ancestor = findParent(ancestor);}


for(var i=0,l=bookKeeping.ancestors.length;i < l;i++) {
topLevelTarget = bookKeeping.ancestors[i];
var topLevelTargetID=ReactMount.getID(topLevelTarget) || '';
ReactEventListener._handleTopLevel(
bookKeeping.topLevelType,
topLevelTarget,
topLevelTargetID,
bookKeeping.nativeEvent);}}




function scrollValueMonitor(cb){
var scrollPosition=getUnboundedScrollPosition(window);
cb(scrollPosition);}


var ReactEventListener={
_enabled:true,
_handleTopLevel:null,

WINDOW_HANDLE:ExecutionEnvironment.canUseDOM?window:null,

setHandleTopLevel:function(handleTopLevel){
ReactEventListener._handleTopLevel = handleTopLevel;},


setEnabled:function(enabled){
ReactEventListener._enabled = !!enabled;},


isEnabled:function(){
return ReactEventListener._enabled;},













trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
var element=handle;
if(!element){
return null;}

return EventListener.listen(
element,
handlerBaseName,
ReactEventListener.dispatchEvent.bind(null,topLevelType));},













trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
var element=handle;
if(!element){
return null;}

return EventListener.capture(
element,
handlerBaseName,
ReactEventListener.dispatchEvent.bind(null,topLevelType));},



monitorScrollValue:function(refresh){
var callback=scrollValueMonitor.bind(null,refresh);
EventListener.listen(window,'scroll',callback);},


dispatchEvent:function(topLevelType,nativeEvent){
if(!ReactEventListener._enabled){
return;}


var bookKeeping=TopLevelCallbackBookKeeping.getPooled(
topLevelType,
nativeEvent);

try{


ReactUpdates.batchedUpdates(handleTopLevelImpl,bookKeeping);}finally 
{
TopLevelCallbackBookKeeping.release(bookKeeping);}}};




module.exports = ReactEventListener;
});
__d('EventListener',["emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 


















emptyFunction=require('emptyFunction');





var EventListener={








listen:function(target,eventType,callback){
if(target.addEventListener){
target.addEventListener(eventType,callback,false);
return {
remove:function(){
target.removeEventListener(eventType,callback,false);}};}else 


if(target.attachEvent){
target.attachEvent('on' + eventType,callback);
return {
remove:function(){
target.detachEvent('on' + eventType,callback);}};}},













capture:function(target,eventType,callback){
if(!target.addEventListener){
if(__DEV__){
console.error(
'Attempted to listen to events during the capture phase on a ' + 
'browser that does not support the capture phase. Your application ' + 
'will not receive some events.');}


return {
remove:emptyFunction};}else 

{
target.addEventListener(eventType,callback,true);
return {
remove:function(){
target.removeEventListener(eventType,callback,true);}};}},





registerDefault:function(){}};


module.exports = EventListener;
});
__d('getUnboundedScrollPosition',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";























function getUnboundedScrollPosition(scrollable){
if(scrollable === window){
return {
x:window.pageXOffset || document.documentElement.scrollLeft,
y:window.pageYOffset || document.documentElement.scrollTop};}


return {
x:scrollable.scrollLeft,
y:scrollable.scrollTop};}



module.exports = getUnboundedScrollPosition;
});
__d('ReactInjection',["DOMProperty","EventPluginHub","ReactComponentEnvironment","ReactClass","ReactEmptyComponent","ReactBrowserEventEmitter","ReactNativeComponent","ReactDOMComponent","ReactPerf","ReactRootIndex","ReactUpdates"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var EventPluginHub=require('EventPluginHub');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactClass=require('ReactClass');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactDOMComponent=require('ReactDOMComponent');
var ReactPerf=require('ReactPerf');
var ReactRootIndex=require('ReactRootIndex');
var ReactUpdates=require('ReactUpdates');

var ReactInjection={
Component:ReactComponentEnvironment.injection,
Class:ReactClass.injection,
DOMComponent:ReactDOMComponent.injection,
DOMProperty:DOMProperty.injection,
EmptyComponent:ReactEmptyComponent.injection,
EventPluginHub:EventPluginHub.injection,
EventEmitter:ReactBrowserEventEmitter.injection,
NativeComponent:ReactNativeComponent.injection,
Perf:ReactPerf.injection,
RootIndex:ReactRootIndex.injection,
Updates:ReactUpdates.injection};


module.exports = ReactInjection;
});
__d('ReactReconcileTransaction',["CallbackQueue","PooledClass","ReactBrowserEventEmitter","ReactInputSelection","ReactPutListenerQueue","Transaction","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactInputSelection=require('ReactInputSelection');
var ReactPutListenerQueue=require('ReactPutListenerQueue');
var Transaction=require('Transaction');

var assign=require('Object.assign');





var SELECTION_RESTORATION={



initialize:ReactInputSelection.getSelectionInformation,



close:ReactInputSelection.restoreSelection};







var EVENT_SUPPRESSION={




initialize:function(){
var currentlyEnabled=ReactBrowserEventEmitter.isEnabled();
ReactBrowserEventEmitter.setEnabled(false);
return currentlyEnabled;},







close:function(previouslyEnabled){
ReactBrowserEventEmitter.setEnabled(previouslyEnabled);}};







var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};



var PUT_LISTENER_QUEUEING={
initialize:function(){
this.putListenerQueue.reset();},


close:function(){
this.putListenerQueue.putListeners();}};








var TRANSACTION_WRAPPERS=[
PUT_LISTENER_QUEUEING,
SELECTION_RESTORATION,
EVENT_SUPPRESSION,
ON_DOM_READY_QUEUEING];
















function ReactReconcileTransaction(){
this.reinitializeTransaction();





this.renderToStaticMarkup = false;
this.reactMountReady = CallbackQueue.getPooled(null);
this.putListenerQueue = ReactPutListenerQueue.getPooled();}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},





getReactMountReady:function(){
return this.reactMountReady;},


getPutListenerQueue:function(){
return this.putListenerQueue;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;

ReactPutListenerQueue.release(this.putListenerQueue);
this.putListenerQueue = null;}};




assign(ReactReconcileTransaction.prototype,Transaction.Mixin,Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
});
__d('ReactInputSelection',["ReactDOMSelection","containsNode","focusNode","getActiveElement"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactDOMSelection=require('ReactDOMSelection');

var containsNode=require('containsNode');
var focusNode=require('focusNode');
var getActiveElement=require('getActiveElement');

function isInDocument(node){
return containsNode(document.documentElement,node);}








var ReactInputSelection={

hasSelectionCapabilities:function(elem){
return elem && (
elem.nodeName === 'INPUT' && elem.type === 'text' || 
elem.nodeName === 'TEXTAREA' || 
elem.contentEditable === 'true');},



getSelectionInformation:function(){
var focusedElem=getActiveElement();
return {
focusedElem:focusedElem,
selectionRange:
ReactInputSelection.hasSelectionCapabilities(focusedElem)?
ReactInputSelection.getSelection(focusedElem):
null};},








restoreSelection:function(priorSelectionInformation){
var curFocusedElem=getActiveElement();
var priorFocusedElem=priorSelectionInformation.focusedElem;
var priorSelectionRange=priorSelectionInformation.selectionRange;
if(curFocusedElem !== priorFocusedElem && 
isInDocument(priorFocusedElem)){
if(ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)){
ReactInputSelection.setSelection(
priorFocusedElem,
priorSelectionRange);}


focusNode(priorFocusedElem);}},









getSelection:function(input){
var selection;

if('selectionStart' in input){

selection = {
start:input.selectionStart,
end:input.selectionEnd};}else 

if(document.selection && input.nodeName === 'INPUT'){

var range=document.selection.createRange();


if(range.parentElement() === input){
selection = {
start:-range.moveStart('character',-input.value.length),
end:-range.moveEnd('character',-input.value.length)};}}else 


{

selection = ReactDOMSelection.getOffsets(input);}


return selection || {start:0,end:0};},








setSelection:function(input,offsets){
var start=offsets.start;
var end=offsets.end;
if(typeof end === 'undefined'){
end = start;}


if('selectionStart' in input){
input.selectionStart = start;
input.selectionEnd = Math.min(end,input.value.length);}else 
if(document.selection && input.nodeName === 'INPUT'){
var range=input.createTextRange();
range.collapse(true);
range.moveStart('character',start);
range.moveEnd('character',end - start);
range.select();}else 
{
ReactDOMSelection.setOffsets(input,offsets);}}};




module.exports = ReactInputSelection;
});
__d('ReactDOMSelection',["ExecutionEnvironment","getNodeForCharacterOffset","getTextContentAccessor"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var getNodeForCharacterOffset=require('getNodeForCharacterOffset');
var getTextContentAccessor=require('getTextContentAccessor');






function isCollapsed(anchorNode,anchorOffset,focusNode,focusOffset){
return anchorNode === focusNode && anchorOffset === focusOffset;}
















function getIEOffsets(node){
var selection=document.selection;
var selectedRange=selection.createRange();
var selectedLength=selectedRange.text.length;


var fromStart=selectedRange.duplicate();
fromStart.moveToElementText(node);
fromStart.setEndPoint('EndToStart',selectedRange);

var startOffset=fromStart.text.length;
var endOffset=startOffset + selectedLength;

return {
start:startOffset,
end:endOffset};}







function getModernOffsets(node){
var selection=window.getSelection && window.getSelection();

if(!selection || selection.rangeCount === 0){
return null;}


var anchorNode=selection.anchorNode;
var anchorOffset=selection.anchorOffset;
var focusNode=selection.focusNode;
var focusOffset=selection.focusOffset;

var currentRange=selection.getRangeAt(0);




var isSelectionCollapsed=isCollapsed(
selection.anchorNode,
selection.anchorOffset,
selection.focusNode,
selection.focusOffset);


var rangeLength=isSelectionCollapsed?0:currentRange.toString().length;

var tempRange=currentRange.cloneRange();
tempRange.selectNodeContents(node);
tempRange.setEnd(currentRange.startContainer,currentRange.startOffset);

var isTempRangeCollapsed=isCollapsed(
tempRange.startContainer,
tempRange.startOffset,
tempRange.endContainer,
tempRange.endOffset);


var start=isTempRangeCollapsed?0:tempRange.toString().length;
var end=start + rangeLength;


var detectionRange=document.createRange();
detectionRange.setStart(anchorNode,anchorOffset);
detectionRange.setEnd(focusNode,focusOffset);
var isBackward=detectionRange.collapsed;

return {
start:isBackward?end:start,
end:isBackward?start:end};}







function setIEOffsets(node,offsets){
var range=document.selection.createRange().duplicate();
var start,end;

if(typeof offsets.end === 'undefined'){
start = offsets.start;
end = start;}else 
if(offsets.start > offsets.end){
start = offsets.end;
end = offsets.start;}else 
{
start = offsets.start;
end = offsets.end;}


range.moveToElementText(node);
range.moveStart('character',start);
range.setEndPoint('EndToStart',range);
range.moveEnd('character',end - start);
range.select();}














function setModernOffsets(node,offsets){
if(!window.getSelection){
return;}


var selection=window.getSelection();
var length=node[getTextContentAccessor()].length;
var start=Math.min(offsets.start,length);
var end=typeof offsets.end === 'undefined'?
start:Math.min(offsets.end,length);



if(!selection.extend && start > end){
var temp=end;
end = start;
start = temp;}


var startMarker=getNodeForCharacterOffset(node,start);
var endMarker=getNodeForCharacterOffset(node,end);

if(startMarker && endMarker){
var range=document.createRange();
range.setStart(startMarker.node,startMarker.offset);
selection.removeAllRanges();

if(start > end){
selection.addRange(range);
selection.extend(endMarker.node,endMarker.offset);}else 
{
range.setEnd(endMarker.node,endMarker.offset);
selection.addRange(range);}}}




var useIEOffsets=
ExecutionEnvironment.canUseDOM && 
'selection' in document && 
!('getSelection' in window);


var ReactDOMSelection={



getOffsets:useIEOffsets?getIEOffsets:getModernOffsets,





setOffsets:useIEOffsets?setIEOffsets:setModernOffsets};


module.exports = ReactDOMSelection;
});
__d('getNodeForCharacterOffset',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















function getLeafNode(node){
while(node && node.firstChild) {
node = node.firstChild;}

return node;}









function getSiblingNode(node){
while(node) {
if(node.nextSibling){
return node.nextSibling;}

node = node.parentNode;}}










function getNodeForCharacterOffset(root,offset){
var node=getLeafNode(root);
var nodeStart=0;
var nodeEnd=0;

while(node) {
if(node.nodeType === 3){
nodeEnd = nodeStart + node.textContent.length;

if(nodeStart <= offset && nodeEnd >= offset){
return {
node:node,
offset:offset - nodeStart};}



nodeStart = nodeEnd;}


node = getLeafNode(getSiblingNode(node));}}



module.exports = getNodeForCharacterOffset;
});
__d('getActiveElement',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

















getActiveElement(){
try{
return document.activeElement || document.body;}
catch(e) {
return document.body;}}



module.exports = getActiveElement;
});
__d('ReactPutListenerQueue',["PooledClass","ReactBrowserEventEmitter","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');

var assign=require('Object.assign');

function ReactPutListenerQueue(){
this.listenersToPut = [];}


assign(ReactPutListenerQueue.prototype,{
enqueuePutListener:function(rootNodeID,propKey,propValue){
this.listenersToPut.push({
rootNodeID:rootNodeID,
propKey:propKey,
propValue:propValue});},



putListeners:function(){
for(var i=0;i < this.listenersToPut.length;i++) {
var listenerToPut=this.listenersToPut[i];
ReactBrowserEventEmitter.putListener(
listenerToPut.rootNodeID,
listenerToPut.propKey,
listenerToPut.propValue);}},




reset:function(){
this.listenersToPut.length = 0;},


destructor:function(){
this.reset();}});



PooledClass.addPoolingTo(ReactPutListenerQueue);

module.exports = ReactPutListenerQueue;
});
__d('SelectEventPlugin',["EventConstants","EventPropagators","ReactInputSelection","SyntheticEvent","getActiveElement","isTextInputElement","keyOf","shallowEqual"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPropagators=require('EventPropagators');
var ReactInputSelection=require('ReactInputSelection');
var SyntheticEvent=require('SyntheticEvent');

var getActiveElement=require('getActiveElement');
var isTextInputElement=require('isTextInputElement');
var keyOf=require('keyOf');
var shallowEqual=require('shallowEqual');

var topLevelTypes=EventConstants.topLevelTypes;

var eventTypes={
select:{
phasedRegistrationNames:{
bubbled:keyOf({onSelect:null}),
captured:keyOf({onSelectCapture:null})},

dependencies:[
topLevelTypes.topBlur,
topLevelTypes.topContextMenu,
topLevelTypes.topFocus,
topLevelTypes.topKeyDown,
topLevelTypes.topMouseDown,
topLevelTypes.topMouseUp,
topLevelTypes.topSelectionChange]}};




var activeElement=null;
var activeElementID=null;
var lastSelection=null;
var mouseDown=false;










function getSelection(node){
if('selectionStart' in node && 
ReactInputSelection.hasSelectionCapabilities(node)){
return {
start:node.selectionStart,
end:node.selectionEnd};}else 

if(window.getSelection){
var selection=window.getSelection();
return {
anchorNode:selection.anchorNode,
anchorOffset:selection.anchorOffset,
focusNode:selection.focusNode,
focusOffset:selection.focusOffset};}else 

if(document.selection){
var range=document.selection.createRange();
return {
parentElement:range.parentElement(),
text:range.text,
top:range.boundingTop,
left:range.boundingLeft};}}










function constructSelectEvent(nativeEvent){




if(mouseDown || 
activeElement == null || 
activeElement !== getActiveElement()){
return null;}



var currentSelection=getSelection(activeElement);
if(!lastSelection || !shallowEqual(lastSelection,currentSelection)){
lastSelection = currentSelection;

var syntheticEvent=SyntheticEvent.getPooled(
eventTypes.select,
activeElementID,
nativeEvent);


syntheticEvent.type = 'select';
syntheticEvent.target = activeElement;

EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

return syntheticEvent;}}

















var SelectEventPlugin={

eventTypes:eventTypes,









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){

switch(topLevelType){

case topLevelTypes.topFocus:
if(isTextInputElement(topLevelTarget) || 
topLevelTarget.contentEditable === 'true'){
activeElement = topLevelTarget;
activeElementID = topLevelTargetID;
lastSelection = null;}

break;
case topLevelTypes.topBlur:
activeElement = null;
activeElementID = null;
lastSelection = null;
break;



case topLevelTypes.topMouseDown:
mouseDown = true;
break;
case topLevelTypes.topContextMenu:
case topLevelTypes.topMouseUp:
mouseDown = false;
return constructSelectEvent(nativeEvent);







case topLevelTypes.topSelectionChange:
case topLevelTypes.topKeyDown:
case topLevelTypes.topKeyUp:
return constructSelectEvent(nativeEvent);}}};




module.exports = SelectEventPlugin;
});
__d('shallowEqual',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















function shallowEqual(objA,objB){
if(objA === objB){
return true;}

var key;

for(key in objA) {
if(objA.hasOwnProperty(key) && (
!objB.hasOwnProperty(key) || objA[key] !== objB[key])){
return false;}}



for(key in objB) {
if(objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)){
return false;}}


return true;}


module.exports = shallowEqual;
});
__d('ServerReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var GLOBAL_MOUNT_POINT_MAX=Math.pow(2,53);

var ServerReactRootIndex={
createReactRootIndex:function(){
return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);}};



module.exports = ServerReactRootIndex;
});
__d('SimpleEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","SyntheticClipboardEvent","SyntheticEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticMouseEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticUIEvent","SyntheticWheelEvent","getEventCharCode","invariant","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var SyntheticClipboardEvent=require('SyntheticClipboardEvent');
var SyntheticEvent=require('SyntheticEvent');
var SyntheticFocusEvent=require('SyntheticFocusEvent');
var SyntheticKeyboardEvent=require('SyntheticKeyboardEvent');
var SyntheticMouseEvent=require('SyntheticMouseEvent');
var SyntheticDragEvent=require('SyntheticDragEvent');
var SyntheticTouchEvent=require('SyntheticTouchEvent');
var SyntheticUIEvent=require('SyntheticUIEvent');
var SyntheticWheelEvent=require('SyntheticWheelEvent');

var getEventCharCode=require('getEventCharCode');

var invariant=require('invariant');
var keyOf=require('keyOf');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;

var eventTypes={
blur:{
phasedRegistrationNames:{
bubbled:keyOf({onBlur:true}),
captured:keyOf({onBlurCapture:true})}},


click:{
phasedRegistrationNames:{
bubbled:keyOf({onClick:true}),
captured:keyOf({onClickCapture:true})}},


contextMenu:{
phasedRegistrationNames:{
bubbled:keyOf({onContextMenu:true}),
captured:keyOf({onContextMenuCapture:true})}},


copy:{
phasedRegistrationNames:{
bubbled:keyOf({onCopy:true}),
captured:keyOf({onCopyCapture:true})}},


cut:{
phasedRegistrationNames:{
bubbled:keyOf({onCut:true}),
captured:keyOf({onCutCapture:true})}},


doubleClick:{
phasedRegistrationNames:{
bubbled:keyOf({onDoubleClick:true}),
captured:keyOf({onDoubleClickCapture:true})}},


drag:{
phasedRegistrationNames:{
bubbled:keyOf({onDrag:true}),
captured:keyOf({onDragCapture:true})}},


dragEnd:{
phasedRegistrationNames:{
bubbled:keyOf({onDragEnd:true}),
captured:keyOf({onDragEndCapture:true})}},


dragEnter:{
phasedRegistrationNames:{
bubbled:keyOf({onDragEnter:true}),
captured:keyOf({onDragEnterCapture:true})}},


dragExit:{
phasedRegistrationNames:{
bubbled:keyOf({onDragExit:true}),
captured:keyOf({onDragExitCapture:true})}},


dragLeave:{
phasedRegistrationNames:{
bubbled:keyOf({onDragLeave:true}),
captured:keyOf({onDragLeaveCapture:true})}},


dragOver:{
phasedRegistrationNames:{
bubbled:keyOf({onDragOver:true}),
captured:keyOf({onDragOverCapture:true})}},


dragStart:{
phasedRegistrationNames:{
bubbled:keyOf({onDragStart:true}),
captured:keyOf({onDragStartCapture:true})}},


drop:{
phasedRegistrationNames:{
bubbled:keyOf({onDrop:true}),
captured:keyOf({onDropCapture:true})}},


focus:{
phasedRegistrationNames:{
bubbled:keyOf({onFocus:true}),
captured:keyOf({onFocusCapture:true})}},


input:{
phasedRegistrationNames:{
bubbled:keyOf({onInput:true}),
captured:keyOf({onInputCapture:true})}},


keyDown:{
phasedRegistrationNames:{
bubbled:keyOf({onKeyDown:true}),
captured:keyOf({onKeyDownCapture:true})}},


keyPress:{
phasedRegistrationNames:{
bubbled:keyOf({onKeyPress:true}),
captured:keyOf({onKeyPressCapture:true})}},


keyUp:{
phasedRegistrationNames:{
bubbled:keyOf({onKeyUp:true}),
captured:keyOf({onKeyUpCapture:true})}},


load:{
phasedRegistrationNames:{
bubbled:keyOf({onLoad:true}),
captured:keyOf({onLoadCapture:true})}},


error:{
phasedRegistrationNames:{
bubbled:keyOf({onError:true}),
captured:keyOf({onErrorCapture:true})}},




mouseDown:{
phasedRegistrationNames:{
bubbled:keyOf({onMouseDown:true}),
captured:keyOf({onMouseDownCapture:true})}},


mouseMove:{
phasedRegistrationNames:{
bubbled:keyOf({onMouseMove:true}),
captured:keyOf({onMouseMoveCapture:true})}},


mouseOut:{
phasedRegistrationNames:{
bubbled:keyOf({onMouseOut:true}),
captured:keyOf({onMouseOutCapture:true})}},


mouseOver:{
phasedRegistrationNames:{
bubbled:keyOf({onMouseOver:true}),
captured:keyOf({onMouseOverCapture:true})}},


mouseUp:{
phasedRegistrationNames:{
bubbled:keyOf({onMouseUp:true}),
captured:keyOf({onMouseUpCapture:true})}},


paste:{
phasedRegistrationNames:{
bubbled:keyOf({onPaste:true}),
captured:keyOf({onPasteCapture:true})}},


reset:{
phasedRegistrationNames:{
bubbled:keyOf({onReset:true}),
captured:keyOf({onResetCapture:true})}},


scroll:{
phasedRegistrationNames:{
bubbled:keyOf({onScroll:true}),
captured:keyOf({onScrollCapture:true})}},


submit:{
phasedRegistrationNames:{
bubbled:keyOf({onSubmit:true}),
captured:keyOf({onSubmitCapture:true})}},


touchCancel:{
phasedRegistrationNames:{
bubbled:keyOf({onTouchCancel:true}),
captured:keyOf({onTouchCancelCapture:true})}},


touchEnd:{
phasedRegistrationNames:{
bubbled:keyOf({onTouchEnd:true}),
captured:keyOf({onTouchEndCapture:true})}},


touchMove:{
phasedRegistrationNames:{
bubbled:keyOf({onTouchMove:true}),
captured:keyOf({onTouchMoveCapture:true})}},


touchStart:{
phasedRegistrationNames:{
bubbled:keyOf({onTouchStart:true}),
captured:keyOf({onTouchStartCapture:true})}},


wheel:{
phasedRegistrationNames:{
bubbled:keyOf({onWheel:true}),
captured:keyOf({onWheelCapture:true})}}};




var topLevelEventsToDispatchConfig={
topBlur:eventTypes.blur,
topClick:eventTypes.click,
topContextMenu:eventTypes.contextMenu,
topCopy:eventTypes.copy,
topCut:eventTypes.cut,
topDoubleClick:eventTypes.doubleClick,
topDrag:eventTypes.drag,
topDragEnd:eventTypes.dragEnd,
topDragEnter:eventTypes.dragEnter,
topDragExit:eventTypes.dragExit,
topDragLeave:eventTypes.dragLeave,
topDragOver:eventTypes.dragOver,
topDragStart:eventTypes.dragStart,
topDrop:eventTypes.drop,
topError:eventTypes.error,
topFocus:eventTypes.focus,
topInput:eventTypes.input,
topKeyDown:eventTypes.keyDown,
topKeyPress:eventTypes.keyPress,
topKeyUp:eventTypes.keyUp,
topLoad:eventTypes.load,
topMouseDown:eventTypes.mouseDown,
topMouseMove:eventTypes.mouseMove,
topMouseOut:eventTypes.mouseOut,
topMouseOver:eventTypes.mouseOver,
topMouseUp:eventTypes.mouseUp,
topPaste:eventTypes.paste,
topReset:eventTypes.reset,
topScroll:eventTypes.scroll,
topSubmit:eventTypes.submit,
topTouchCancel:eventTypes.touchCancel,
topTouchEnd:eventTypes.touchEnd,
topTouchMove:eventTypes.touchMove,
topTouchStart:eventTypes.touchStart,
topWheel:eventTypes.wheel};


for(var type in topLevelEventsToDispatchConfig) {
topLevelEventsToDispatchConfig[type].dependencies = [type];}


var SimpleEventPlugin={

eventTypes:eventTypes,









executeDispatch:function(event,listener,domID){
var returnValue=EventPluginUtils.executeDispatch(event,listener,domID);

warning(
typeof returnValue !== 'boolean',
'Returning `false` from an event handler is deprecated and will be ' + 
'ignored in a future release. Instead, manually call ' + 
'e.stopPropagation() or e.preventDefault(), as appropriate.');


if(returnValue === false){
event.stopPropagation();
event.preventDefault();}},











extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var dispatchConfig=topLevelEventsToDispatchConfig[topLevelType];
if(!dispatchConfig){
return null;}

var EventConstructor;
switch(topLevelType){
case topLevelTypes.topInput:
case topLevelTypes.topLoad:
case topLevelTypes.topError:
case topLevelTypes.topReset:
case topLevelTypes.topSubmit:


EventConstructor = SyntheticEvent;
break;
case topLevelTypes.topKeyPress:



if(getEventCharCode(nativeEvent) === 0){
return null;}


case topLevelTypes.topKeyDown:
case topLevelTypes.topKeyUp:
EventConstructor = SyntheticKeyboardEvent;
break;
case topLevelTypes.topBlur:
case topLevelTypes.topFocus:
EventConstructor = SyntheticFocusEvent;
break;
case topLevelTypes.topClick:


if(nativeEvent.button === 2){
return null;}


case topLevelTypes.topContextMenu:
case topLevelTypes.topDoubleClick:
case topLevelTypes.topMouseDown:
case topLevelTypes.topMouseMove:
case topLevelTypes.topMouseOut:
case topLevelTypes.topMouseOver:
case topLevelTypes.topMouseUp:
EventConstructor = SyntheticMouseEvent;
break;
case topLevelTypes.topDrag:
case topLevelTypes.topDragEnd:
case topLevelTypes.topDragEnter:
case topLevelTypes.topDragExit:
case topLevelTypes.topDragLeave:
case topLevelTypes.topDragOver:
case topLevelTypes.topDragStart:
case topLevelTypes.topDrop:
EventConstructor = SyntheticDragEvent;
break;
case topLevelTypes.topTouchCancel:
case topLevelTypes.topTouchEnd:
case topLevelTypes.topTouchMove:
case topLevelTypes.topTouchStart:
EventConstructor = SyntheticTouchEvent;
break;
case topLevelTypes.topScroll:
EventConstructor = SyntheticUIEvent;
break;
case topLevelTypes.topWheel:
EventConstructor = SyntheticWheelEvent;
break;
case topLevelTypes.topCopy:
case topLevelTypes.topCut:
case topLevelTypes.topPaste:
EventConstructor = SyntheticClipboardEvent;
break;}

invariant(
EventConstructor,
'SimpleEventPlugin: Unhandled event type, `%s`.',
topLevelType);

var event=EventConstructor.getPooled(
dispatchConfig,
topLevelTargetID,
nativeEvent);

EventPropagators.accumulateTwoPhaseDispatches(event);
return event;}};




module.exports = SimpleEventPlugin;
});
__d('SyntheticClipboardEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');





var ClipboardEventInterface={
clipboardData:function(event){
return (
'clipboardData' in event?
event.clipboardData:
window.clipboardData);}};










function SyntheticClipboardEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticEvent.augmentClass(SyntheticClipboardEvent,ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
});
__d('SyntheticFocusEvent',["SyntheticUIEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticUIEvent=require('SyntheticUIEvent');





var FocusEventInterface={
relatedTarget:null};








function SyntheticFocusEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticUIEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticUIEvent.augmentClass(SyntheticFocusEvent,FocusEventInterface);

module.exports = SyntheticFocusEvent;
});
__d('SyntheticKeyboardEvent',["SyntheticUIEvent","getEventCharCode","getEventKey","getEventModifierState"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticUIEvent=require('SyntheticUIEvent');

var getEventCharCode=require('getEventCharCode');
var getEventKey=require('getEventKey');
var getEventModifierState=require('getEventModifierState');





var KeyboardEventInterface={
key:getEventKey,
location:null,
ctrlKey:null,
shiftKey:null,
altKey:null,
metaKey:null,
repeat:null,
locale:null,
getModifierState:getEventModifierState,

charCode:function(event){





if(event.type === 'keypress'){
return getEventCharCode(event);}

return 0;},

keyCode:function(event){







if(event.type === 'keydown' || event.type === 'keyup'){
return event.keyCode;}

return 0;},

which:function(event){


if(event.type === 'keypress'){
return getEventCharCode(event);}

if(event.type === 'keydown' || event.type === 'keyup'){
return event.keyCode;}

return 0;}};









function SyntheticKeyboardEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticUIEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent,KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
});
__d('getEventCharCode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























function getEventCharCode(nativeEvent){
var charCode;
var keyCode=nativeEvent.keyCode;

if('charCode' in nativeEvent){
charCode = nativeEvent.charCode;


if(charCode === 0 && keyCode === 13){
charCode = 13;}}else 

{

charCode = keyCode;}




if(charCode >= 32 || charCode === 13){
return charCode;}


return 0;}


module.exports = getEventCharCode;
});
__d('getEventKey',["getEventCharCode"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var getEventCharCode=require('getEventCharCode');





var normalizeKey={
'Esc':'Escape',
'Spacebar':' ',
'Left':'ArrowLeft',
'Up':'ArrowUp',
'Right':'ArrowRight',
'Down':'ArrowDown',
'Del':'Delete',
'Win':'OS',
'Menu':'ContextMenu',
'Apps':'ContextMenu',
'Scroll':'ScrollLock',
'MozPrintableKey':'Unidentified'};







var translateToKey={
8:'Backspace',
9:'Tab',
12:'Clear',
13:'Enter',
16:'Shift',
17:'Control',
18:'Alt',
19:'Pause',
20:'CapsLock',
27:'Escape',
32:' ',
33:'PageUp',
34:'PageDown',
35:'End',
36:'Home',
37:'ArrowLeft',
38:'ArrowUp',
39:'ArrowRight',
40:'ArrowDown',
45:'Insert',
46:'Delete',
112:'F1',113:'F2',114:'F3',115:'F4',116:'F5',117:'F6',
118:'F7',119:'F8',120:'F9',121:'F10',122:'F11',123:'F12',
144:'NumLock',
145:'ScrollLock',
224:'Meta'};






function getEventKey(nativeEvent){
if(nativeEvent.key){





var key=normalizeKey[nativeEvent.key] || nativeEvent.key;
if(key !== 'Unidentified'){
return key;}}




if(nativeEvent.type === 'keypress'){
var charCode=getEventCharCode(nativeEvent);



return charCode === 13?'Enter':String.fromCharCode(charCode);}

if(nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup'){


return translateToKey[nativeEvent.keyCode] || 'Unidentified';}

return '';}


module.exports = getEventKey;
});
__d('SyntheticDragEvent',["SyntheticMouseEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticMouseEvent=require('SyntheticMouseEvent');





var DragEventInterface={
dataTransfer:null};








function SyntheticDragEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticMouseEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticMouseEvent.augmentClass(SyntheticDragEvent,DragEventInterface);

module.exports = SyntheticDragEvent;
});
__d('SyntheticTouchEvent',["SyntheticUIEvent","getEventModifierState"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticUIEvent=require('SyntheticUIEvent');

var getEventModifierState=require('getEventModifierState');





var TouchEventInterface={
touches:null,
targetTouches:null,
changedTouches:null,
altKey:null,
metaKey:null,
ctrlKey:null,
shiftKey:null,
getModifierState:getEventModifierState};








function SyntheticTouchEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticUIEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticUIEvent.augmentClass(SyntheticTouchEvent,TouchEventInterface);

module.exports = SyntheticTouchEvent;
});
__d('SyntheticWheelEvent',["SyntheticMouseEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var SyntheticMouseEvent=require('SyntheticMouseEvent');





var WheelEventInterface={
deltaX:function(event){
return (
'deltaX' in event?event.deltaX:

'wheelDeltaX' in event?-event.wheelDeltaX:0);},


deltaY:function(event){
return (
'deltaY' in event?event.deltaY:

'wheelDeltaY' in event?-event.wheelDeltaY:

'wheelDelta' in event?-event.wheelDelta:0);},


deltaZ:null,





deltaMode:null};








function SyntheticWheelEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticMouseEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticMouseEvent.augmentClass(SyntheticWheelEvent,WheelEventInterface);

module.exports = SyntheticWheelEvent;
});
__d('SVGDOMPropertyConfig',["DOMProperty"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var DOMProperty=require('DOMProperty');

var MUST_USE_ATTRIBUTE=DOMProperty.injection.MUST_USE_ATTRIBUTE;

var SVGDOMPropertyConfig={
Properties:{
cx:MUST_USE_ATTRIBUTE,
cy:MUST_USE_ATTRIBUTE,
d:MUST_USE_ATTRIBUTE,
dx:MUST_USE_ATTRIBUTE,
dy:MUST_USE_ATTRIBUTE,
fill:MUST_USE_ATTRIBUTE,
fillOpacity:MUST_USE_ATTRIBUTE,
fontFamily:MUST_USE_ATTRIBUTE,
fontSize:MUST_USE_ATTRIBUTE,
fx:MUST_USE_ATTRIBUTE,
fy:MUST_USE_ATTRIBUTE,
gradientTransform:MUST_USE_ATTRIBUTE,
gradientUnits:MUST_USE_ATTRIBUTE,
markerEnd:MUST_USE_ATTRIBUTE,
markerMid:MUST_USE_ATTRIBUTE,
markerStart:MUST_USE_ATTRIBUTE,
offset:MUST_USE_ATTRIBUTE,
opacity:MUST_USE_ATTRIBUTE,
patternContentUnits:MUST_USE_ATTRIBUTE,
patternUnits:MUST_USE_ATTRIBUTE,
points:MUST_USE_ATTRIBUTE,
preserveAspectRatio:MUST_USE_ATTRIBUTE,
r:MUST_USE_ATTRIBUTE,
rx:MUST_USE_ATTRIBUTE,
ry:MUST_USE_ATTRIBUTE,
spreadMethod:MUST_USE_ATTRIBUTE,
stopColor:MUST_USE_ATTRIBUTE,
stopOpacity:MUST_USE_ATTRIBUTE,
stroke:MUST_USE_ATTRIBUTE,
strokeDasharray:MUST_USE_ATTRIBUTE,
strokeLinecap:MUST_USE_ATTRIBUTE,
strokeOpacity:MUST_USE_ATTRIBUTE,
strokeWidth:MUST_USE_ATTRIBUTE,
textAnchor:MUST_USE_ATTRIBUTE,
transform:MUST_USE_ATTRIBUTE,
version:MUST_USE_ATTRIBUTE,
viewBox:MUST_USE_ATTRIBUTE,
x1:MUST_USE_ATTRIBUTE,
x2:MUST_USE_ATTRIBUTE,
x:MUST_USE_ATTRIBUTE,
y1:MUST_USE_ATTRIBUTE,
y2:MUST_USE_ATTRIBUTE,
y:MUST_USE_ATTRIBUTE},

DOMAttributeNames:{
fillOpacity:'fill-opacity',
fontFamily:'font-family',
fontSize:'font-size',
gradientTransform:'gradientTransform',
gradientUnits:'gradientUnits',
markerEnd:'marker-end',
markerMid:'marker-mid',
markerStart:'marker-start',
patternContentUnits:'patternContentUnits',
patternUnits:'patternUnits',
preserveAspectRatio:'preserveAspectRatio',
spreadMethod:'spreadMethod',
stopColor:'stop-color',
stopOpacity:'stop-opacity',
strokeDasharray:'stroke-dasharray',
strokeLinecap:'stroke-linecap',
strokeOpacity:'stroke-opacity',
strokeWidth:'stroke-width',
textAnchor:'text-anchor',
viewBox:'viewBox'}};



module.exports = SVGDOMPropertyConfig;
});
__d('createFullPageComponent',["ReactClass","ReactElement","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ReactClass=require('ReactClass');
var ReactElement=require('ReactElement');

var invariant=require('invariant');












function createFullPageComponent(tag){
var elementFactory=ReactElement.createFactory(tag);

var FullPageComponent=ReactClass.createClass({
tagName:tag.toUpperCase(),
displayName:'ReactFullPageComponent' + tag,

componentWillUnmount:function(){
invariant(
false,
'%s tried to unmount. Because of cross-browser quirks it is ' + 
'impossible to unmount some top-level components (eg <html>, <head>, ' + 
'and <body>) reliably and efficiently. To fix this, have a single ' + 
'top-level component that never unmounts render these elements.',
this.constructor.displayName);},



render:function(){
return elementFactory(this.props);}});



return FullPageComponent;}


module.exports = createFullPageComponent;
});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj,key,val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;},


stop:function(){
ReactPerf.enableMeasure = false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count),
'Render time per instance (ms)':roundFloat(item.render / item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0});

start = performanceNow();
rv = func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0],
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this,args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive,rootNodeID,totalTime - subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports = ReactDefaultPerf;
});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
TEXT_CONTENT:'set textContent',
'updatePropertyByID':'update attribute',
'deletePropertyByID':'delete attribute',
'updateStylesByID':'update styles',
'updateInnerHTMLByID':'set innerHTML',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type] || write.type,
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0;i < dirtyLeafIDs.length;i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;
});
__d('performanceNow',["performance"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;
});
__d('performance',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};
});
__d('ReactServerRendering',["ReactElement","ReactInstanceHandles","ReactMarkupChecksum","ReactServerRenderingTransaction","emptyObject","instantiateReactComponent","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactServerRenderingTransaction=
require('ReactServerRenderingTransaction');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');





function renderToString(element){
invariant(
ReactElement.isValidElement(element),
'renderToString(): You must pass a valid ReactElement.');


var transaction;
try{
var id=ReactInstanceHandles.createReactRootID();
transaction = ReactServerRenderingTransaction.getPooled(false);

return transaction.perform(function(){
var componentInstance=instantiateReactComponent(element,null);
var markup=
componentInstance.mountComponent(id,transaction,emptyObject);
return ReactMarkupChecksum.addChecksumToMarkup(markup);},
null);}finally 
{
ReactServerRenderingTransaction.release(transaction);}}








function renderToStaticMarkup(element){
invariant(
ReactElement.isValidElement(element),
'renderToStaticMarkup(): You must pass a valid ReactElement.');


var transaction;
try{
var id=ReactInstanceHandles.createReactRootID();
transaction = ReactServerRenderingTransaction.getPooled(true);

return transaction.perform(function(){
var componentInstance=instantiateReactComponent(element,null);
return componentInstance.mountComponent(id,transaction,emptyObject);},
null);}finally 
{
ReactServerRenderingTransaction.release(transaction);}}



module.exports = {
renderToString:renderToString,
renderToStaticMarkup:renderToStaticMarkup};
});
__d('ReactServerRenderingTransaction',["PooledClass","CallbackQueue","ReactPutListenerQueue","Transaction","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');
var CallbackQueue=require('CallbackQueue');
var ReactPutListenerQueue=require('ReactPutListenerQueue');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},


close:emptyFunction};


var PUT_LISTENER_QUEUEING={
initialize:function(){
this.putListenerQueue.reset();},


close:emptyFunction};







var TRANSACTION_WRAPPERS=[
PUT_LISTENER_QUEUEING,
ON_DOM_READY_QUEUEING];






function ReactServerRenderingTransaction(renderToStaticMarkup){
this.reinitializeTransaction();
this.renderToStaticMarkup = renderToStaticMarkup;
this.reactMountReady = CallbackQueue.getPooled(null);
this.putListenerQueue = ReactPutListenerQueue.getPooled();}


var Mixin={






getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},





getReactMountReady:function(){
return this.reactMountReady;},


getPutListenerQueue:function(){
return this.putListenerQueue;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;

ReactPutListenerQueue.release(this.putListenerQueue);
this.putListenerQueue = null;}};




assign(
ReactServerRenderingTransaction.prototype,
Transaction.Mixin,
Mixin);


PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
});
__d('onlyChild',["ReactElement","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;
});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","View","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large'])},



getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var style=_props.style;var props=_objectWithoutProperties(_props,['style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{style:[styles.container,sizeStyle,style]},
React.createElement(RCTActivityIndicatorView,props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
height:20},

sizeLarge:{
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
null);

if(__DEV__){
var nativeOnlyProps={activityIndicatorViewStyle:true};
verifyPropTypes(
ActivityIndicatorIOS,
RCTActivityIndicatorView.viewConfig,
nativeOnlyProps);}



module.exports = ActivityIndicatorIOS;
});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTPOPAnimationManager=NativeModules.POPAnimationManager;
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');

















var animationIDInvariant=function(
funcName,
anim)
{
invariant(
anim,
funcName + ' must be called with a valid animation ID returned from' + 
' POPAnimation.createAnimation, received: "' + anim + '"');};



var NativeMethodsMixin={
addAnimation:function(anim,callback){
animationIDInvariant('addAnimation',anim);
RCTPOPAnimationManager.addAnimation(
findNodeHandle(this),
anim,
mountSafeCallback(this,callback));},



removeAnimation:function(anim){
animationIDInvariant('removeAnimation',anim);
RCTPOPAnimationManager.removeAnimation(findNodeHandle(this),anim);},


measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},



measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps,style);}


RCTUIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
props);},



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports = NativeMethodsMixin;
});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;
});
__d('BatchedBridge',["BatchedBridgeFactory","MessageQueue"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var BatchedBridgeFactory=require('BatchedBridgeFactory');
var MessageQueue=require('MessageQueue');










var remoteModulesConfig=__fbBatchedBridgeConfig.remoteModuleConfig;
var localModulesConfig=__fbBatchedBridgeConfig.localModulesConfig;


var BatchedBridge=BatchedBridgeFactory.create(
MessageQueue,
remoteModulesConfig,
localModulesConfig);


BatchedBridge._config = remoteModulesConfig;

module.exports = BatchedBridge;
});
__d('BatchedBridgeFactory',["invariant","keyMirror","mapObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var mapObject=require('mapObject');
var warning=require('warning');

var slice=Array.prototype.slice;

var MethodTypes=keyMirror({
remote:null,
local:null});





var BatchedBridgeFactory={
MethodTypes:MethodTypes,







_createBridgedModule:function(messageQueue,moduleConfig,moduleName){
var remoteModule=mapObject(moduleConfig.methods,function(methodConfig,memberName){
return methodConfig.type === MethodTypes.local?null:function(){
var lastArg=arguments.length > 0?arguments[arguments.length - 1]:null;
var secondLastArg=arguments.length > 1?arguments[arguments.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=(hasSuccCB?1:0) + (hasErrorCB?1:0);
var args=slice.call(arguments,0,arguments.length - numCBs);
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
return messageQueue.call(moduleName,memberName,args,onFail,onSucc);};});


for(var constName in moduleConfig.constants) {
warning(!remoteModule[constName],'saw constant and method named %s',constName);
remoteModule[constName] = moduleConfig.constants[constName];}

return remoteModule;},



create:function(MessageQueue,modulesConfig,localModulesConfig){
var messageQueue=new MessageQueue(modulesConfig,localModulesConfig);
return {
callFunction:messageQueue.callFunction.bind(messageQueue),
callFunctionReturnFlushedQueue:
messageQueue.callFunctionReturnFlushedQueue.bind(messageQueue),
invokeCallback:messageQueue.invokeCallback.bind(messageQueue),
invokeCallbackAndReturnFlushedQueue:
messageQueue.invokeCallbackAndReturnFlushedQueue.bind(messageQueue),
flushedQueue:messageQueue.flushedQueue.bind(messageQueue),
RemoteModules:mapObject(modulesConfig,this._createBridgedModule.bind(this,messageQueue)),
setLoggingEnabled:messageQueue.setLoggingEnabled.bind(messageQueue),
getLoggedOutgoingItems:messageQueue.getLoggedOutgoingItems.bind(messageQueue),
getLoggedIncomingItems:messageQueue.getLoggedIncomingItems.bind(messageQueue),
replayPreviousLog:messageQueue.replayPreviousLog.bind(messageQueue),
processBatch:messageQueue.processBatch.bind(messageQueue)};}};




module.exports = BatchedBridgeFactory;
});
__d('MessageQueue',["ErrorUtils","ReactUpdates","invariant","warning","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var warning=require('warning');

var JSTimersExecution=require('JSTimersExecution');

var INTERNAL_ERROR='Error in MessageQueue implementation';


var DEBUG_SPY_MODE=false;
















var requireFunc=require;







var jsCall=function(module,methodName,params){
return module[methodName].apply(module,params);};














var MessageQueue=function(
remoteModulesConfig,
localModulesConfig,
customRequire)
{
this._requireFunc = customRequire || requireFunc;
this._initBookeeping();
this._initNamingMap(remoteModulesConfig,localModulesConfig);};



var REQUEST_MODULE_IDS=0;
var REQUEST_METHOD_IDS=1;
var REQUEST_PARAMSS=2;

var RESPONSE_CBIDS=3;
var RESPONSE_RETURN_VALUES=4;

var applyWithErrorReporter=function(fun,context,args){
try{
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportFatalError(e);}};

















var guardReturn=function(operation,operationArguments,getReturnValue,context){
if(operation){
applyWithErrorReporter(operation,context,operationArguments);}

if(getReturnValue){
return applyWithErrorReporter(getReturnValue,context,null);}

return null;};
















var createBookkeeping=function(){
return {




GUID:1,
errorCallbackIDForSuccessCallbackID:function(successID){
return successID + 1;},

successCallbackIDForErrorCallbackID:function(errorID){
return errorID - 1;},

allocateCallbackIDs:function(res){
res.successCallbackID = this.GUID++;
res.errorCallbackID = this.GUID++;},

isSuccessCallback:function(id){
return id % 2 === 1;}};};




var MessageQueueMixin={







_initNamingMap:function(
remoteModulesConfig,
localModulesConfig)
{
this._remoteModuleNameToModuleID = {};
this._remoteModuleIDToModuleName = {};

this._remoteModuleNameToMethodNameToID = {};
this._remoteModuleNameToMethodIDToName = {};

this._localModuleNameToModuleID = {};
this._localModuleIDToModuleName = {};

this._localModuleNameToMethodNameToID = {};
this._localModuleNameToMethodIDToName = {};

function fillMappings(
modulesConfig,
moduleNameToModuleID,
moduleIDToModuleName,
moduleNameToMethodNameToID,
moduleNameToMethodIDToName)
{
for(var moduleName in modulesConfig) {
var moduleConfig=modulesConfig[moduleName];
var moduleID=moduleConfig.moduleID;
moduleNameToModuleID[moduleName] = moduleID;
moduleIDToModuleName[moduleID] = moduleName;

moduleNameToMethodNameToID[moduleName] = {};
moduleNameToMethodIDToName[moduleName] = {};
var methods=moduleConfig.methods;
for(var methodName in methods) {
var methodID=methods[methodName].methodID;
moduleNameToMethodNameToID[moduleName][methodName] = 
methodID;
moduleNameToMethodIDToName[moduleName][methodID] = 
methodName;}}}



fillMappings(
remoteModulesConfig,
this._remoteModuleNameToModuleID,
this._remoteModuleIDToModuleName,
this._remoteModuleNameToMethodNameToID,
this._remoteModuleNameToMethodIDToName);


fillMappings(
localModulesConfig,
this._localModuleNameToModuleID,
this._localModuleIDToModuleName,
this._localModuleNameToMethodNameToID,
this._localModuleNameToMethodIDToName);},




_initBookeeping:function(){
this._POOLED_CBIDS = {errorCallbackID:null,successCallbackID:null};
this._bookkeeping = createBookkeeping();






this._threadLocalCallbacksByID = [];
this._threadLocalScopesByID = [];















this._outgoingItems = [
[],
[],
[],

[],

[]];






this._outgoingItemsSwap = [[],[],[],[],[]];},


invokeCallback:function(cbID,args){
return guardReturn(this._invokeCallback,[cbID,args],null,this);},


_invokeCallback:function(cbID,args){
try{
var cb=this._threadLocalCallbacksByID[cbID];
var scope=this._threadLocalScopesByID[cbID];
warning(
cb,
'Cannot find callback with CBID %s. Native module may have invoked ' + 
'both the success callback and the error callback.',
cbID);

if(DEBUG_SPY_MODE){
console.log('N->JS: Callback#' + cbID + '(' + JSON.stringify(args) + ')');}

cb.apply(scope,args);}
catch(ie_requires_catch) {
throw ie_requires_catch;}finally 
{

this._freeResourcesForCallbackID(cbID);}},



invokeCallbackAndReturnFlushedQueue:function(cbID,args){
if(this._enableLogging){
this._loggedIncomingItems.push([new Date().getTime(),cbID,args]);}

return guardReturn(
this._invokeCallback,
[cbID,args],
this._flushedQueueUnguarded,
this);},



callFunction:function(moduleID,methodID,params){
return guardReturn(this._callFunction,[moduleID,methodID,params],null,this);},


_callFunction:function(moduleID,methodID,params){
var moduleName=this._localModuleIDToModuleName[moduleID];

var methodName=this._localModuleNameToMethodIDToName[moduleName][methodID];
if(DEBUG_SPY_MODE){
console.log(
'N->JS: ' + moduleName + '.' + methodName + 
'(' + JSON.stringify(params) + ')');}

var ret=jsCall(this._requireFunc(moduleName),methodName,params);

return ret;},


callFunctionReturnFlushedQueue:function(moduleID,methodID,params){
if(this._enableLogging){
this._loggedIncomingItems.push([new Date().getTime(),moduleID,methodID,params]);}

return guardReturn(
this._callFunction,
[moduleID,methodID,params],
this._flushedQueueUnguarded,
this);},



processBatch:function(batch){
var self=this;
return guardReturn(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
invariant(
call.module === 'BatchedBridge',
'All the calls should pass through the BatchedBridge module');

if(call.method === 'callFunctionReturnFlushedQueue'){
self._callFunction.apply(self,call.args);}else 
if(call.method === 'invokeCallbackAndReturnFlushedQueue'){
self._invokeCallback.apply(self,call.args);}else 
{
throw new Error(
'Unrecognized method called on BatchedBridge: ' + call.method);}});});},



null,this._flushedQueueUnguarded,this);},


setLoggingEnabled:function(enabled){
this._enableLogging = enabled;
this._loggedIncomingItems = [];
this._loggedOutgoingItems = [[],[],[],[],[]];},


getLoggedIncomingItems:function(){
return this._loggedIncomingItems;},


getLoggedOutgoingItems:function(){
return this._loggedOutgoingItems;},


replayPreviousLog:function(previousLog){
this._outgoingItems = previousLog;},







_swapAndReinitializeBuffer:function(){

var currentOutgoingItems=this._outgoingItems;
var nextOutgoingItems=this._outgoingItemsSwap;

nextOutgoingItems[REQUEST_MODULE_IDS].length = 0;
nextOutgoingItems[REQUEST_METHOD_IDS].length = 0;
nextOutgoingItems[REQUEST_PARAMSS].length = 0;


nextOutgoingItems[RESPONSE_CBIDS].length = 0;
nextOutgoingItems[RESPONSE_RETURN_VALUES].length = 0;

this._outgoingItemsSwap = currentOutgoingItems;
this._outgoingItems = nextOutgoingItems;},








_pushRequestToOutgoingItems:function(moduleID,methodName,params){
this._outgoingItems[REQUEST_MODULE_IDS].push(moduleID);
this._outgoingItems[REQUEST_METHOD_IDS].push(methodName);
this._outgoingItems[REQUEST_PARAMSS].push(params);

if(this._enableLogging){
this._loggedOutgoingItems[REQUEST_MODULE_IDS].push(moduleID);
this._loggedOutgoingItems[REQUEST_METHOD_IDS].push(methodName);
this._loggedOutgoingItems[REQUEST_PARAMSS].push(params);}},








_pushResponseToOutgoingItems:function(cbID,returnValue){
this._outgoingItems[RESPONSE_CBIDS].push(cbID);
this._outgoingItems[RESPONSE_RETURN_VALUES].push(returnValue);},


_freeResourcesForCallbackID:function(cbID){
var correspondingCBID=this._bookkeeping.isSuccessCallback(cbID)?
this._bookkeeping.errorCallbackIDForSuccessCallbackID(cbID):
this._bookkeeping.successCallbackIDForErrorCallbackID(cbID);
this._threadLocalCallbacksByID[cbID] = null;
this._threadLocalScopesByID[cbID] = null;
if(this._threadLocalCallbacksByID[correspondingCBID]){
this._threadLocalCallbacksByID[correspondingCBID] = null;
this._threadLocalScopesByID[correspondingCBID] = null;}},











_storeCallbacksInCurrentThread:function(onFail,onSucc,scope){
invariant(onFail || onSucc,INTERNAL_ERROR);
this._bookkeeping.allocateCallbackIDs(this._POOLED_CBIDS);
var succCBID=this._POOLED_CBIDS.successCallbackID;
var errorCBID=this._POOLED_CBIDS.errorCallbackID;
this._threadLocalCallbacksByID[errorCBID] = onFail;
this._threadLocalCallbacksByID[succCBID] = onSucc;
this._threadLocalScopesByID[errorCBID] = scope;
this._threadLocalScopesByID[succCBID] = scope;},




















flushedQueue:function(){
return guardReturn(null,null,this._flushedQueueUnguarded,this);},


_flushedQueueUnguarded:function(){

JSTimersExecution.callImmediates();

var currentOutgoingItems=this._outgoingItems;
this._swapAndReinitializeBuffer();
var ret=currentOutgoingItems[REQUEST_MODULE_IDS].length || 
currentOutgoingItems[RESPONSE_RETURN_VALUES].length?currentOutgoingItems:null;

if(DEBUG_SPY_MODE && ret){
for(var i=0;i < currentOutgoingItems[0].length;i++) {
var moduleName=this._remoteModuleIDToModuleName[currentOutgoingItems[0][i]];
var methodName=
this._remoteModuleNameToMethodIDToName[moduleName][currentOutgoingItems[1][i]];
console.log(
'JS->N: ' + moduleName + '.' + methodName + 
'(' + JSON.stringify(currentOutgoingItems[2][i]) + ')');}}



return ret;},


call:function(moduleName,methodName,params,onFail,onSucc,scope){
invariant(
(!onFail || typeof onFail === 'function') && (
!onSucc || typeof onSucc === 'function'),
'Callbacks must be functions');



if(onSucc){
this._storeCallbacksInCurrentThread(onFail,onSucc,scope,this._POOLED_CBIDS);
onFail && params.push(this._POOLED_CBIDS.errorCallbackID);
params.push(this._POOLED_CBIDS.successCallbackID);}

var moduleID=this._remoteModuleNameToModuleID[moduleName];
if(moduleID === undefined || moduleID === null){
throw new Error('Unrecognized module name:' + moduleName);}

var methodID=this._remoteModuleNameToMethodNameToID[moduleName][methodName];
if(methodID === undefined || moduleID === null){
throw new Error('Unrecognized method name:' + methodName);}

this._pushRequestToOutgoingItems(moduleID,methodID,params);},

__numPendingCallbacksOnlyUseMeInTestCases:function(){
var callbacks=this._threadLocalCallbacksByID;
var total=0;
for(var i=0;i < callbacks.length;i++) {
if(callbacks[i]){
total++;}}


return total;}};



Object.assign(MessageQueue.prototype,MessageQueueMixin);
module.exports = MessageQueue;
});
__d('ErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID,'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1;ii < errorCount;ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;
});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2 > 2?_len2 - 2:0),_key2=2;_key2 < _len2;_key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;
});
__d('nativeModulePrefixNormalizer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/,'');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;
});
__d('TextInputState',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
RCTUIManager.focus(textFieldID);}},








blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
RCTUIManager.blur(textFieldID);}}};




module.exports = TextInputState;
});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function',

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;
});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID && tag,'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r[' + tag + ']{TOP_LEVEL}';},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;
});
__d('flattenStyle',["StyleSheetRegistry","invariant","mergeIntoFast"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');
var mergeIntoFast=require('mergeIntoFast');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}





function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i < style.length;++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
mergeIntoFast(result,computedStyle);}}


return result;}


module.exports = flattenStyle;
});
__d('StyleSheetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this,StyleSheetRegistry);}_createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}},{key:'getStyleByID',value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;
});
__d('mergeIntoFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var mergeIntoFast=function(one,two){
for(var keyTwo in two) {
one[keyTwo] = two[keyTwo];}};



module.exports = mergeIntoFast;
});
__d('mergeFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















var mergeFast=function(one,two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;
});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix,
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({},style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'rotate':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({},
style,{
transformMatrix:result,
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({},
style,{
transformMatrix:result});}






function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an animated value or spring to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotate':
invariant(
typeof value === 'string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1,
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports = precomputeStyle;
});
__d('MatrixMath',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12] = x;
matrixCommand[13] = y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5] = factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10] = factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;},


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det,
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det,
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det,
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det,
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det,
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det,
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det,
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det,
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det,
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det,
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det,
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det,
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det,
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det,
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det,
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];},






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im,
vector[1] * im,
vector[2] * im];},







v3Dot:function(a,b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale * a[0] + bScale * b[0],
aScale * a[1] + bScale * b[1],
aScale * a[2] + bScale * b[2]];},







v3Cross:function(a,b){
return [
a[1] * b[2] - a[2] * b[1],
a[2] * b[0] - a[0] * b[2],
a[0] * b[1] - a[1] * b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0,2 * Math.atan2(qx,qw) * conv,90];}

if(test < -0.49999 * unit){
return [0,-2 * Math.atan2(qx,qw) * conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz,1 - 2 * qx2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz,1 - 2 * qy2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i < 4;i++) {
matrix.push([]);
for(var j=0;j < 4;j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0;i < 3;i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0;i < 3;i++) {
row[i] = [
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0],scale[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1],scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2] = MatrixMath.v3Dot(row[1],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2],scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3) < 0){
for(i = 0;i < 3;i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2],0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2],0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2],0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2],0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports = MatrixMath;
});
__d('Platform',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;
});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;
});
__d('stringifySafe',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;
});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this,StyleSheet);}_createClass(StyleSheet,null,[{key:'create',value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key,obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;
});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:
function validateStyleProp(prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:



function validateStyle(name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet ' + name);}}},{key:'addValidStylePropTypes',value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
invariant(
allStylePropTypes[key] === undefined || 
allStylePropTypes[key] === stylePropTypes[key],
'Attemped to redefine existing style prop type "' + key + '".');

allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style,null,'  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;
});
__d('ImageResizeMode',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports = ImageResizeMode;
});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number,
height:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;
});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number})])),


transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number),


rotation:ReactPropTypes.number,
scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;
});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes),{
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),

fontStyle:ReactPropTypes.oneOf(['normal','italic']),
lineHeight:ReactPropTypes.number,
color:ReactPropTypes.string,
containerBackgroundColor:ReactPropTypes.string,
textAlign:ReactPropTypes.oneOf(
['auto','left','right','center']),

writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl']),

letterSpacing:ReactPropTypes.number});



var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii < unsupportedProps.length;ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;
});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;
});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);





















var View=React.createClass({
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,




testID:PropTypes.string,






onMoveShouldSetResponder:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,




onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,













renderToHardwareTextureAndroid:PropTypes.bool},


render:function(){
return React.createElement(RCTView,this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView,
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;
});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};

module.exports = ReactNativeStyleAttributes;
});
__d('matricesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;
});
__d('sizesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;
});
__d('ReactNativeViewAttributes',["merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
testID:true,
onLayout:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;
});
__d('merge',["mergeInto"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports = merge;
});
__d('mergeInto',["mergeHelpers"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;
});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one) && Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports = mergeHelpers;
});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports = StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false,
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired = checkType.bind(null,true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;
});
__d('createReactNativeComponentClass',["ReactElement","ReactNativeBaseComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ReactElement=require('ReactElement');
var ReactNativeBaseComponent=require('ReactNativeBaseComponent');











var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);

return Constructor;};


module.exports = createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i < size;i++) {
arr[i] = i;}

return cachedIndexArray._cache[size] = arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement = element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i < mountImages.length;i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},












computeUpdatedProperties:function(prevProps,nextProps,validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null,
prevProps,
nextProps,
validAttributes);







if(styleDiffer(nextProps.style,prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload,
this.previousFlattenedStyle,
nextFlattenedStyle,
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] != prevProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}}},









mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{},
this._currentElement.props,
this.viewConfig.validAttributes);

RCTUIManager.createView(tag,this.viewConfig.uiViewClassName,updatePayload);

this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;
});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i < indices.length;i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i < indices.length;i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0;j < temp.length;j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj < changedTouches.length;jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;
});
__d('NodeHandle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;
});
__d('styleDiffer',["deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0;i < a.length;++i) {
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;
});
__d('deepDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0;ii < len;ii++) {
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;
});
__d('diffRawProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























function diffRawProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){




isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || 
!prevProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp,nextProp);

if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}





isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar && prevProp !== nextProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;
});
__d('requireNativeComponent',["NativeModules","UnimplementedView","createReactNativeComponentClass","deepDiffer","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
















function requireNativeComponent(
viewName,
wrapperComponent)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.nativeProps){
return UnimplementedView;}

var nativeProps=_extends({},
RCTUIManager.RCTView.nativeProps,
viewConfig.nativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
for(var key in nativeProps) {

var differ=TypeToDifferMap[nativeProps[key]] || deepDiffer;
viewConfig.validAttributes[key] = {diff:differ};}

if(__DEV__){
wrapperComponent && verifyPropTypes(wrapperComponent,viewConfig);}

return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;
});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({
setNativeProps:function(){},




render:function(){
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports = UnimplementedView;
});
__d('insetsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;
});
__d('pointsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;
});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');

function verifyPropTypes(
component,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var nativeProps=viewConfig.nativeProps;
for(var prop in nativeProps) {
if(!component.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + component.displayName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop].type + '`');}}}





module.exports = verifyPropTypes;
});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number},


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}},




render:function(){
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:DATEPICKER,
style:styles.rkDatePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:RCTDatePickerIOSConsts.DatePickerModes[props.mode],
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
rkDatePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS);

module.exports = DatePickerIOS;
});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","merge","requireNativeComponent","resolveAssetSource","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


























var Image=React.createClass({
propTypes:{





source:PropTypes.shape({
uri:PropTypes.string}),





defaultSource:PropTypes.shape({
uri:PropTypes.string}),




accessible:PropTypes.bool,



accessibilityLabel:PropTypes.string,







capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),
style:StyleSheetPropType(ImageStylePropTypes),




testID:PropTypes.string},


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


render:function(){
for(var prop in nativeOnlyProps) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]);
invariant(style,'style must be initialized');

var isNetwork=source.uri && source.uri.match(/^https?:/);
invariant(
!(isNetwork && source.isStatic),
'static image uris cannot start with "http": "' + source.uri + '"');

var isStored=!source.isStatic && !isNetwork;
var RawImage=isNetwork?RCTNetworkImage:RCTStaticImage;

if(this.props.style && this.props.style.tintColor){
warning(RawImage === RCTStaticImage,'tintColor style only supported on static images.');}

var resizeMode=this.props.resizeMode || style.resizeMode;
var contentModes=NativeModules.UIManager.UIView.ContentMode;
var contentMode;
if(resizeMode === ImageResizeMode.stretch){
contentMode = contentModes.ScaleToFill;}else 
if(resizeMode === ImageResizeMode.contain){
contentMode = contentModes.ScaleAspectFit;}else 
{
contentMode = contentModes.ScaleAspectFill;}


var nativeProps=merge(this.props,{
style:style,
contentMode:contentMode,
tintColor:style.tintColor});

if(isStored){
nativeProps.imageTag = source.uri;}else 
{
nativeProps.src = source.uri;}

if(this.props.defaultSource){
nativeProps.defaultImageSrc = this.props.defaultSource.uri;}

return React.createElement(RawImage,nativeProps);}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var RCTNetworkImage=requireNativeComponent('RCTNetworkImageView',null);
var RCTStaticImage=requireNativeComponent('RCTStaticImage',null);

var nativeOnlyProps={
src:true,
defaultImageSrc:true,
imageTag:true,
contentMode:true};

if(__DEV__){
verifyPropTypes(Image,RCTStaticImage.viewConfig,nativeOnlyProps);
verifyPropTypes(Image,RCTNetworkImage.viewConfig,nativeOnlyProps);}


module.exports = Image;
});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker","insetsDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var insetsDiffer=require('insetsDiffer');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports = EdgeInsetsPropType;
});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i < scales.length;i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width,
height:asset.height,
uri:getPathOnDevserver(devServerURL,asset),
isStatic:false};}else 

{
return {
width:asset.width,
height:asset.height,
uri:getPathInArchive(asset),
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;
});
__d('AssetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',["Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 






























PixelRatio=(function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',value:












function get(){
return Dimensions.get('window').scale;}},{key:'getPixelSizeForLayoutSize',value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}},{key:'startDetecting',value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;
});
__d('Dimensions',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale,
height:windowPhysicalPixels.height / windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'set',value:





function set(dims){
Object.assign(dimensions,dims);
return true;}},{key:'get',value:















function get(dim){
invariant(dimensions[dim],'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;
});
__d('ListView',["ListViewDataSource","React","NativeModules","ScrollView","ScrollResponder","StaticRenderer","logError","merge","isEmpty","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var logError=require('logError');
var merge=require('merge');
var isEmpty=require('isEmpty');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var RENDER_INTERVAL=20;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:_extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,







renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentHeight:this.scrollProperties.contentHeight,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF];},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0};},



componentWillMount:function(){

this.scrollProperties = {
visibleHeight:null,
contentHeight:null,
offsetY:0};

this._childFrames = [];
this._visibleRows = {};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();
_this.setInterval(_this._renderMoreRowsIfNeeded,RENDER_INTERVAL);});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState({prevRenderedRowsCount:0});}},



render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_' + sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_' + comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID)});


bodyComponents.push(row);
totalIndex++;
if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}



var props=merge(
this.props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices});


if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}


return (
React.createElement(ScrollView,_extends({},props,{
ref:SCROLLVIEW_REF}),
header,
bodyComponents,
footer));},








_measureAndUpdateScrollProps:function(){
RCTUIManager.measureLayout(
this.refs[SCROLLVIEW_REF].getInnerViewNode(),
React.findNodeHandle(this.refs[SCROLLVIEW_REF]),
logError,
this._setScrollContentHeight);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(this.refs[SCROLLVIEW_REF]),
logError,
this._setScrollVisibleHeight);},



_setScrollContentHeight:function(left,top,width,height){
this.scrollProperties.contentHeight = height;},


_setScrollVisibleHeight:function(left,top,width,height){
this.scrollProperties.visibleHeight = height;
this._updateVisibleRows();},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentHeight === null || 
this.scrollProperties.visibleHeight === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this2=this;
var rowsToRender=Math.min(
this.state.curRenderedRowsCount + this.props.pageSize,
this.props.dataSource.getRowCount());

this.setState(
{
prevRenderedRowsCount:this.state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender},

function(){
_this2._measureAndUpdateScrollProps();
_this2.setState({
prevRenderedRowsCount:_this2.state.curRenderedRowsCount});});},





_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentHeight - 
scrollProperties.visibleHeight - 
scrollProperties.offsetY;},


_updateVisibleRows:function(e){var _this3=this;
if(!this.props.onChangeVisibleRows){
return;}

var updatedFrames=e && e.nativeEvent.updatedChildFrames;
if(updatedFrames){
updatedFrames.forEach(function(frame){
_this3._childFrames[frame.index] = merge(frame);});}


var dataSource=this.props.dataSource;
var visibleTop=this.scrollProperties.offsetY;
var visibleBottom=visibleTop + this.scrollProperties.visibleHeight;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var top=frame.y;
var bottom=top + frame.height;
if(top > visibleBottom || bottom < visibleTop){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
this.scrollProperties.visibleHeight = e.nativeEvent.layoutMeasurement.height;
this.scrollProperties.contentHeight = e.nativeEvent.contentSize.height;
this.scrollProperties.offsetY = e.nativeEvent.contentOffset.y;
this._updateVisibleRows(e);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentHeight !== this._sentEndForContentHeight && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentHeight = this.scrollProperties.contentHeight;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;
});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function',
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource,[{key:'cloneWithRows',value:


















function cloneWithRows(
dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:













function cloneWithRowsAndSections(
dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:


function getRowCount(){
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:





function rowShouldUpdate(sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}},{key:'getRowData',value:





function getRowData(sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined,
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:





function getSectionLengths(){
var results=[];
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined,
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:





















function _calculateDirtyArrays(
prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii < prevRowIDs.length;ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0;sIndex < this.sectionIdentities.length;sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0;rIndex < this.rowIdentities[sIndex].length;rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;
});
__d('isEmpty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;
});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewConsts=RCTScrollView.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';

var keyboardDismissModeConstants={
'none':RCTScrollViewConsts.KeyboardDismissMode.None,
'interactive':RCTScrollViewConsts.KeyboardDismissMode.Interactive,
'onDrag':RCTScrollViewConsts.KeyboardDismissMode.OnDrag};










var ScrollView=React.createClass({
propTypes:{
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
contentOffset:PointPropType,
onScroll:PropTypes.func,
onScrollAnimationEnd:PropTypes.func,
scrollEnabled:PropTypes.bool,
scrollIndicatorInsets:EdgeInsetsPropType,
showsHorizontalScrollIndicator:PropTypes.bool,
showsVerticalScrollIndicator:PropTypes.bool,
style:StyleSheetPropType(ViewStylePropTypes),
scrollEventThrottle:PropTypes.number,







bounces:PropTypes.bool,





bouncesZoom:PropTypes.bool,





alwaysBounceHorizontal:PropTypes.bool,





alwaysBounceVertical:PropTypes.bool,






centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),






decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,




directionalLockEnabled:PropTypes.bool,




canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'onDrag']),







keyboardShouldPersistTaps:PropTypes.bool,



maximumZoomScale:PropTypes.number,



minimumZoomScale:PropTypes.number,





pagingEnabled:PropTypes.bool,




scrollsToTop:PropTypes.bool,







stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),






removeClippedSubviews:PropTypes.bool,



zoomScale:PropTypes.number},


mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollTo,
[destX || 0,destY || 0]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);}},




scrollWithoutAnimationTo:function(destY,destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);},



render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0,
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}


if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
var onScroll=this.props.onScroll;
this.props.onScroll = function(){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');

onScroll.apply(this,arguments);};}}




var contentContainer=
React.createElement(View,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews},
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
keyboardDismissMode:this.props.keyboardDismissMode?
keyboardDismissModeConstants[this.props.keyboardDismissMode]:
undefined,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.scrollResponderHandleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}}


invariant(
ScrollViewClass !== undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,_extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=_extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports = ScrollView;
});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker","pointsDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var pointsDiffer=require('pointsDiffer');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports = PointPropType;
});
__d('ScrollResponder',["NativeModules","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTUIManagerDeprecated=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
statics:RCTScrollViewConsts,
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target != currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target != currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
RCTUIManagerDeprecated.scrollTo(React.findNodeHandle(this),offsetX,offsetY);},






scrollResponderZoomTo:function(rect){
RCTUIManagerDeprecated.zoomToRect(React.findNodeHandle(this),rect);},












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidShow && this.props.onKeyboardDidShow();},


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;
});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;
});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this,EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter,[{key:'addListener',value:
















function addListener(
eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:












function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii < keys.length;ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener,
subscription.context,
Array.prototype.slice.call(arguments,1),
null,
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;
});
__d('EmitterSubscription',["EventSubscription"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){_classCallCheck(this,EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype),'constructor',this).call(this,subscriber);
this.listener = listener;
this.context = context;}return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;
});
__d('EventSubscription',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription,[{key:'remove',value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;
});
__d('EventSubscriptionVendor',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:








function addSubscription(
eventType,subscription){
invariant(
subscription.subscriber === this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}},{key:'removeAllSubscriptions',value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;
});
__d('Subscribable',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');









var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports = Subscribable;
});
__d('StaticRenderer',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts] = null;
this[_intervals] && this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals] = null;
this[_immediates] && this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates] = null;
this[_rafs] && this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs] = null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('logError',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports = logError;
});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,







region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




title:React.PropTypes.string,
subtitle:React.PropTypes.string})),





maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func},


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}},



render:function(){
return React.createElement(RCTMap,_extends({},this.props,{onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView,{
showsUserLocation:true,
zoomEnabled:true,
rotateEnabled:true,
pitchEnabled:true,
scrollEnabled:true,
region:{diff:deepDiffer},
annotations:{diff:deepDiffer},
maxDelta:true,
minDelta:true,
legalLabelInsets:{diff:insetsDiffer}}),


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap',MapView);}


module.exports = MapView;
});
__d('Modal',["React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var RCTModalHostView=requireNativeComponent('RCTModalHostView',null);var 

Modal=(function(_React$Component){_inherits(Modal,_React$Component);function Modal(){_classCallCheck(this,Modal);_get(Object.getPrototypeOf(Modal.prototype),'constructor',this).apply(this,arguments);}_createClass(Modal,[{key:'render',value:
function render(){
if(this.props.visible === false){
return null;}


return (
React.createElement(RCTModalHostView,{animated:this.props.animated,style:styles.modal},
React.createElement(View,{style:styles.container},
this.props.children)));}}]);return Modal;})(React.Component);






var styles=StyleSheet.create({
modal:{
position:'absolute'},

container:{
left:0,
position:'absolute',
top:0}});



module.exports = Modal;
});
__d('Navigator',["NativeModules","BackAndroid","Dimensions","InteractionMixin","NavigatorBreadcrumbNavigationBar","NavigatorInterceptor","NavigatorNavigationBar","NavigatorSceneConfigs","NavigatorStaticContextContainer","PanResponder","Platform","React","StaticContainer.react","StyleSheet","Subscribable","View","clamp","flattenStyle","getNavigatorContext","invariant","keyMirror","merge","react-timer-mixin/TimerMixin.js","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var BackAndroid=require('BackAndroid');
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorInterceptor=require('NavigatorInterceptor');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var NavigatorStaticContextContainer=require('NavigatorStaticContextContainer');
var PanResponder=require('PanResponder');
var Platform=require('Platform');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var getNavigatorContext=require('getNavigatorContext');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var merge=require('merge');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
style:{
left:SCREEN_WIDTH,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
left:SCREEN_WIDTH},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];































































































var Navigator=React.createClass({

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),




onWillFocus:PropTypes.func,





onDidFocus:PropTypes.func,




onItemRef:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


contextTypes:{},




statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs,
Interceptor:NavigatorInterceptor,
getContext:getNavigatorContext},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

idStack:routeStack.map(function(){return getuid();}),
routeStack:routeStack,


updatingRangeStart:0,
updatingRangeLength:routeStack.length,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;
this.parentNavigator = getNavigatorContext(this) || this.props.navigator;
this._subRouteFocus = [];
this.navigatorContext = {

setHandlerForRoute:this.setHandlerForRoute,
request:this.request,


parentNavigator:this.parentNavigator,
getCurrentRoutes:this.getCurrentRoutes,



pop:this.requestPop,
popToRoute:this.requestPopTo,


jumpBack:this.jumpBack,
jumpForward:this.jumpForward,
jumpTo:this.jumpTo,
push:this.push,
replace:this.replace,
replaceAtIndex:this.replaceAtIndex,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
immediatelyResetRouteStack:this.immediatelyResetRouteStack,
resetTo:this.resetTo,
popToTop:this.popToTop};

this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderGrant:this._handlePanResponderGrant,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._itemRefs = {};
this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


request:function(action,arg1,arg2){
if(this.parentNavigator){
return this.parentNavigator.request.apply(null,arguments);}

return this._handleRequest.apply(null,arguments);},


requestPop:function(popToBeforeRoute){
return this.request('pop',popToBeforeRoute);},


requestPopTo:function(route){
return this.request('popTo',route);},


_handleRequest:function(action,arg1,arg2){
var childHandler=this._handlers[this.state.presentedIndex];
if(childHandler && childHandler(action,arg1,arg2)){
return true;}

switch(action){
case 'pop':
return this._handlePop(arg1);
case 'popTo':
return this._handlePopTo(arg1);
case 'push':
return this._handlePush(arg1);
default:
invariant(false,'Unsupported request type ' + action);
return false;}},



_handlePop:function(popToBeforeRoute){
if(popToBeforeRoute){
var popToBeforeRouteIndex=this.state.routeStack.indexOf(popToBeforeRoute);
if(popToBeforeRouteIndex === -1){
return false;}

invariant(
popToBeforeRouteIndex <= this.state.presentedIndex,
'Cannot pop past a route that is forward in the navigator');

this._popN(this.state.presentedIndex - popToBeforeRouteIndex + 1);
return true;}

if(this.state.presentedIndex === 0){
return false;}

this.pop();
return true;},


_handlePopTo:function(destRoute){
if(destRoute){
var hasRoute=this.state.routeStack.indexOf(destRoute) !== -1;
if(hasRoute){
this.popToRoute(destRoute);
return true;}else 
{
return false;}}


if(this.state.presentedIndex === 0){
return false;}

this.pop();
return true;},


_handlePush:function(route){
this.push(route);
return true;},


setHandlerForRoute:function(route,handler){
this._handlers[this.state.routeStack.indexOf(route)] = handler;},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);
if(this.parentNavigator){
this.parentNavigator.setHandler(this._handleRequest);}else 
if(Platform.OS === 'android'){


BackAndroid.addEventListener('hardwareBackPress',this._handleAndroidBackPress);}},



componentWillUnmount:function(){
if(this.parentNavigator){
this.parentNavigator.setHandler(null);}else 
if(Platform.OS === 'android'){
BackAndroid.removeEventListener('hardwareBackPress',this._handleAndroidBackPress);}},



_handleAndroidBackPress:function(){
var didPop=this.requestPop();
if(!didPop){
BackAndroid.exitApp();}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
idStack:nextRouteStack.map(getuid),
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

updatingRangeStart:0,
updatingRangeLength:nextRouteStack.length,
presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);
var willFocusRoute=this._subRouteFocus[this.state.presentedIndex] || this.state.routeStack[this.state.presentedIndex];
this._emitWillFocus(willFocusRoute);},






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
this._transitionBetween(
this.state.presentedIndex,
this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture),
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
if(this._lastDidFocus === route){
return;}

this._lastDidFocus = route;
if(this.props.onDidFocus){
this.props.onDidFocus(route);}

if(this.parentNavigator && this.parentNavigator.onDidFocus){
this.parentNavigator.onDidFocus(route);}},



_emitWillFocus:function(route){
if(this._lastWillFocus === route){
return;}

this._lastWillFocus = route;
var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}

if(this.parentNavigator && this.parentNavigator.onWillFocus){
this.parentNavigator.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i < this.state.routeStack.length;i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle(this.props.sceneStyle);

var enabledSceneNativeProps={
left:sceneStyle.left};

if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHarwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderSceneToHarwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var currentRoute=this.state.routeStack[this.state.presentedIndex];
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;},


_handlePanResponderGrant:function(e,gestureState){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action ' + gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1 - this.spring.getCurrentValue());}}else 


{

this._transitionTo(destIndex,transitionVelocity);}

this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1 - this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0,nextProgress,1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this4=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this4._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this4._eligibleGestures = _this4._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_resetUpdatingRange:function(){
this.state.updatingRangeStart = 0;
this.state.updatingRangeLength = this.state.routeStack.length;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){var _this5=this;
var destIndex=this._getDestIndexWithinBounds(n);
var requestTransitionAndResetUpdatingRange=function(){
_this5._enableScene(destIndex);
_this5._transitionTo(destIndex);
_this5._resetUpdatingRange();};

this.setState({
updatingRangeStart:destIndex,
updatingRangeLength:1},
requestTransitionAndResetUpdatingRange);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeIDStack=this.state.idStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextIDStack=activeIDStack.concat([getuid()]);
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

var requestTransitionAndResetUpdatingRange=function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);
_this6._resetUpdatingRange();};

this.setState({
idStack:nextIDStack,
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack,
updatingRangeStart:nextStack.length - 1,
updatingRangeLength:1},
requestTransitionAndResetUpdatingRange);},


_popN:function(n){var _this7=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
this._popN(1);},








replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack,
updatingRangeStart:index,
updatingRangeLength:1},
function(){
_this8._resetUpdatingRange();
if(index === _this8.state.presentedIndex){
_this8._emitWillFocus(route);
_this8._emitDidFocus(route);}

cb && cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex - 1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


_getNumToPopForRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

return this.state.presentedIndex - indexOfRoute;},


popToRoute:function(route){
var numToPop=this._getNumToPopForRoute(route);
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex > 0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){
return this.state.routeStack;},


_handleItemRef:function(itemId,route,ref){
this._itemRefs[itemId] = ref;
var itemIndex=this.state.idStack.indexOf(itemId);
if(itemIndex === -1){
return;}

this.props.onItemRef && this.props.onItemRef(ref,itemIndex,route);},


_cleanScenesPastIndex:function(index){var _this10=this;
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
var updatingRangeStart=newStackLength;
var updatingRangeLength=this.state.routeStack.length - newStackLength + 1;
this.state.idStack.slice(newStackLength).map(function(removingId){
_this10._itemRefs[removingId] = null;});

this.setState({
updatingRangeStart:updatingRangeStart,
updatingRangeLength:updatingRangeLength,
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
idStack:this.state.idStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)},
this._resetUpdatingRange);}},



_renderOptimizedScenes:function(){







var shouldRenderScenes=this.state.updatingRangeLength !== 0;
if(shouldRenderScenes){
return (
React.createElement(StaticContainer,{shouldUpdate:true},
React.createElement(View,_extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

this.state.routeStack.map(this._renderOptimizedScene))));}









return (
React.createElement(StaticContainer,{shouldUpdate:false}));},



_renderOptimizedScene:function(route,i){var _this11=this;
var shouldRenderScene=
i >= this.state.updatingRangeStart && 
i <= this.state.updatingRangeStart + this.state.updatingRangeLength;
var sceneNavigatorContext=_extends({},
this.navigatorContext,{
route:route,
setHandler:function(handler){
_this11.navigatorContext.setHandlerForRoute(route,handler);},

onWillFocus:function(childRoute){
_this11._subRouteFocus[i] = childRoute;
if(_this11.state.presentedIndex === i){
_this11._emitWillFocus(childRoute);}},


onDidFocus:function(childRoute){
_this11._subRouteFocus[i] = childRoute;
if(_this11.state.presentedIndex === i){
_this11._emitDidFocus(childRoute);}}});



var scene=shouldRenderScene?
this._renderScene(route,i,sceneNavigatorContext):null;
return (
React.createElement(NavigatorStaticContextContainer,{
navigatorContext:sceneNavigatorContext,
key:'nav' + i,
shouldUpdate:shouldRenderScene},
scene));},




_renderScene:function(route,i,sceneNavigatorContext){var _this12=this;
var child=this.props.renderScene(
route,
sceneNavigatorContext);

var disabledSceneStyle=null;
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;}

return (
React.createElement(View,{
key:this.state.idStack[i],
ref:'scene_' + i,
onStartShouldSetResponderCapture:function(){
return i !== _this12.state.presentedIndex;},

style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
React.cloneElement(child,{
ref:this._handleItemRef.bind(null,this.state.idStack[i],route)})));},





_renderNavigationBar:function(){var _this13=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){_this13._navBar = navBar;},
navigator:this.navigatorContext,
navState:this.state});},



render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.style]},
this._renderOptimizedScenes(),
this._renderNavigationBar()));}});





module.exports = Navigator;
});
__d('BackAndroid',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var warning=require('warning');

function platformWarn(){
warning(false,'BackAndroid is not supported on this platform.');}


var BackAndroid={
exitApp:platformWarn,
addEventListener:platformWarn,
removeEventListener:platformWarn};


module.exports = BackAndroid;
});
__d('InteractionMixin',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;
});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');

var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function',
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);},





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports = InteractionManager;
});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this,Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set,[{key:'add',value:












function add(value){
this._map.set(value,value);
this.size = this._map.size;
return this;}},{key:'clear',value:







function clear(){
initSet(this);}},{key:'delete',value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}},{key:'entries',value:







function entries(){
return this._map.entries();}},{key:'forEach',value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:











function has(value){
return this._map.has(value);}},{key:'values',value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());
});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}_createClass(Map,[{key:'clear',value:








function clear(){
initMap(this);}},{key:'has',value:









function has(key){
var index=getIndex(this,key);
return !!(index != null && this._mapData[index]);}},{key:'set',value:










function set(key,value){
var index=getIndex(this,key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key,
value]) - 
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}},{key:'get',value:









function get(key){
var index=getIndex(this,key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:











function _delete(key){
var index=getIndex(this,key);
if(index != null && this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}},{key:'entries',value:










function entries(){
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:








function keys(){
return new MapIterator(this,KIND_KEY);}},{key:'values',value:








function values(){
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:











function forEach(callback,thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0;i < mapData.length;i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map,kind){_classCallCheck(this,MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator,[{key:'next',value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map = undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=(function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());
});
__d('guid',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.','');}


module.exports = guid;
});
__d('toIterator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array,kind){_classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator,[{key:'next',value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined,true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this,StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator,[{key:'next',value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;
});
__d('_shouldPolyfillES6Collection',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){_inherits(SubCollection,_Collection);function SubCollection(){_classCallCheck(this,SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype),'constructor',this).apply(this,arguments);}return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;
});
__d('setImmediate',["ImmediateImplementation"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined,args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());
});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
idStack:React.PropTypes.arrayOf(React.PropTypes.number),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this.refs['crumb_' + index].setNativeProps(CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this.refs['icon_' + index].setNativeProps(ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this.refs['separator_' + index].setNativeProps(SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this.refs['title_' + index].setNativeProps(TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this.refs['crumb_' + index].setNativeProps(props);
this.refs['icon_' + index].setNativeProps(props);
this.refs['separator_' + index].setNativeProps(props);
this.refs['title_' + index].setNativeProps(props);
var right=this.refs['right_' + index];
if(right){
right.setNativeProps(props);}},



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._renderOrReturnBreadcrumb);
var titles=navState.routeStack.map(this._renderOrReturnTitle);
var buttons=navState.routeStack.map(this._renderOrReturnRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_renderOrReturnBreadcrumb:function(route,index){
var uid=this.props.navState.idStack[index];
var navBarRouteMapper=this.props.routeMapper;
var navOps=this.props.navigator;
var alreadyRendered=this.refs['crumbContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'crumbContainer' + uid,
key:'crumbContainer' + uid,
shouldUpdate:false}));}



var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'crumbContainer' + uid,
key:'crumbContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'crumb_' + index,style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_' + index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,navOps)),

React.createElement(View,{ref:'separator_' + index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,navOps)))));},






_renderOrReturnTitle:function(route,index){
var navState=this.props.navState;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['titleContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'titleContainer' + uid,
key:'titleContainer' + uid,
shouldUpdate:false}));}



var navBarRouteMapper=this.props.routeMapper;
var titleContent=navBarRouteMapper.titleContentForRoute(
navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'titleContainer' + uid,
key:'titleContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'title_' + index,style:firstStyles.Title},
titleContent)));},





_renderOrReturnRightButton:function(route,index){
var navState=this.props.navState;
var navBarRouteMapper=this.props.routeMapper;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['rightContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'rightContainer' + uid,
key:'rightContainer' + uid,
shouldUpdate:false}));}



var rightContent=navBarRouteMapper.rightContentForRoute(
navState.routeStack[index],
this.props.navigator);

if(!rightContent){
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'rightContainer' + uid,
key:'rightContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'right_' + index,style:firstStyles.RightItem},
rightContent)));}});






var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i < MAX_BREADCRUMBS;i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft + ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight + ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH / 4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH / 4,opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports = {
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
alignItems:'center',
width:SCREEN_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:2 * SCREEN_WIDTH / 3,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH / 3,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH / 3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2 * SCREEN_WIDTH / 3 - 0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',["keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 









keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1,fnStr.lastIndexOf('}') - 1);
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;},


transformTranslate:function(matVar,opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex < 16;varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i < orderedMatrixOperations.length;i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim,'nextScalarVal');
fn += setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;
});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

















React=require('React');

var onlyChild=require('onlyChild');
















var StaticContainer=React.createClass({

shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return onlyChild(this.props.children);}});




module.exports = StaticContainer;
});
__d('NavigatorInterceptor',["React","getNavigatorContext"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var React=require('React');

var getNavigatorContext=require('getNavigatorContext');

var NavigatorInterceptor=React.createClass({

contextTypes:{
navigator:React.PropTypes.object},


componentWillMount:function(){
this.navigator = getNavigatorContext(this);},


componentDidMount:function(){
this.navigator.setHandler(this._navigatorHandleRequest);},


childContextTypes:{
navigator:React.PropTypes.object},


getChildContext:function(){var _this=this;
return {
navigator:_extends({},
this.navigator,{
setHandler:function(handler){
_this._childNavigationHandler = handler;}})};},





componentWillUnmount:function(){
this.navigator.setHandler(null);},


_navigatorHandleRequest:function(action,arg1,arg2){
if(this._interceptorHandle(action,arg1,arg2)){
return true;}

if(this._childNavigationHandler && this._childNavigationHandler(action,arg1,arg2)){
return true;}},



_interceptorHandle:function(action,arg1,arg2){
if(this.props.onRequest && this.props.onRequest(action,arg1,arg2)){
return true;}

switch(action){
case 'pop':
return this.props.onPopRequest && this.props.onPopRequest(arg1,arg2);
case 'popTo':
return this.props.onPopToRequest && this.props.onPopToRequest(arg1,arg2);
case 'push':
return this.props.onPushRequest && this.props.onPushRequest(arg1,arg2);
default:
return false;}},



render:function(){
return this.props.children;}});




module.exports = NavigatorInterceptor;
});
__d('getNavigatorContext',["ReactInstanceMap"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactInstanceMap=require('ReactInstanceMap');

function getNavigatorContext(el){

return ReactInstanceMap.get(el)._context.navigator;}


module.exports = getNavigatorContext;
});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
idStack:React.PropTypes.arrayOf(React.PropTypes.number),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles},


_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this.refs[componentName + index];
var props=this._getReusableProps(componentName,index);
if(component && interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._renderOrReturnComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,this.props.style]},
components));},




_renderOrReturnComponent:function(
componentName,
route,
index)
{
var navState=this.props.navState;
var uid=navState.idStack[index];
var containerRef=componentName + 'Container' + uid;
var alreadyRendered=this.refs[containerRef];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:containerRef,
key:containerRef,
shouldUpdate:false}));}




var content=this.props.routeMapper[componentName](
navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
return (
React.createElement(StaticContainer,{
ref:containerRef,
key:containerRef,
shouldUpdate:false},
React.createElement(View,{ref:componentName + index,style:initialStage[componentName]},
content)));}});








var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width * 0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width * 0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=_extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH * 0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=_extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:50,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:50,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3 / 5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({},
BaseConfig),


FloatFromRight:_extends({},
BaseConfig),


FloatFromLeft:_extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:_extends({},
BaseConfig,{
gestures:{
pop:_extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}})};




module.exports = NavigatorSceneConfigs;
});
__d('NavigatorStaticContextContainer',["React","StaticContainer.react"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var StaticContainer=require('StaticContainer.react');

var PropTypes=React.PropTypes;

var NavigatorStaticContextContainer=React.createClass({

childContextTypes:{
navigator:PropTypes.object},


getChildContext:function(){
return {
navigator:this.props.navigatorContext};},



render:function(){
return (
React.createElement(StaticContainer,this.props));}});




module.exports = NavigatorStaticContextContainer;
});
__d('PanResponder',["TouchHistoryMath"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;










































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;},

































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e,gestureState);},


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;
});
__d('TouchHistoryMath',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0;i < touchBank.length;i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports = TouchHistoryMath;
});
__d('clamp',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























clamp(min,value,max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;
});
__d('rebound/rebound.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend = function extend(target,source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;},






createSpring:function(tension,friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0,len=this._activeSprings.length;i < len;i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0,deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0,len=this.listeners.length;
for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);},








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);},






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;},


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners = [];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension,friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;},


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;},


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness,speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7,0,20.0);
b = this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed / 1.7,0,20.0);
this.bouncyTension = this.projectNormal(s,0.5,200);
this.bouncyFriction = this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);},


projectNormal:function(n,start,end){
return start + n * (end - start);},


linearInterpolation:function(t,start,end){
return t * end + (1.0 - t) * start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2 * t - t * t,start,end);},


b3Friction1:function(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;},


b3Friction2:function(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2.;},


b3Friction3:function(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#','');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r,g,b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg * Math.PI / 180;},


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx,1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports,rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();
});
__d('NavigatorIOS',["EventEmitter","Image","React","ReactNativeViewAttributes","NativeModules","StyleSheet","StaticContainer.react","View","createReactNativeComponentClass","invariant","logError","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var invariant=require('invariant');
var logError=require('logError');
var merge=require('merge');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var RCTNavigator=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
requestedTopOfStack:true}),

uiViewClassName:'RCTNavigator'});


var RCTNavigatorItem=createReactNativeComponentClass({
validAttributes:{


title:true,
barTintColor:true,
leftButtonIcon:true,
leftButtonTitle:true,
onNavLeftButtonTap:true,
rightButtonIcon:true,
rightButtonTitle:true,
onNavRightButtonTap:true,
backButtonIcon:true,
backButtonTitle:true,
tintColor:true,
navigationBarHidden:true,
titleTextColor:true,
style:true},

uiViewClassName:'RCTNavItem'});


var NavigatorTransitionerIOS=React.createClass({
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});

























































































































var NavigatorIOS=React.createClass({

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string},



navigator:undefined,

componentWillMount:function(){


this.navigator = {
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop};},



getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack + 1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack + 1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length - 1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}},





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
invariant(
_this2.state.requestedTopOfStack - n >= 0,
'Cannot pop below 0');

_this2.setState({
requestedTopOfStack:_this2.state.requestedTopOfStack - n,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});},






replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer,{key:'nav' + i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,{
title:route.title,
style:[
styles.stackItem,
this.props.itemWrapperStyle,
route.wrapperStyle],

backButtonIcon:this._imageNameFromSource(route.backButtonIcon),
backButtonTitle:route.backButtonTitle,
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon),
leftButtonTitle:route.leftButtonTitle,
onNavLeftButtonTap:route.onLeftButtonPress,
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon),
rightButtonTitle:route.rightButtonTitle,
onNavRightButtonTap:route.onRightButtonPress,
navigationBarHidden:this.props.navigationBarHidden,
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
titleTextColor:this.props.titleTextColor},
React.createElement(Component,_extends({
navigator:this.navigator,
route:route},
route.passProps)))));},






_imageNameFromSource:function(source){
return source?source.uri:undefined;},


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



module.exports = NavigatorIOS;
});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","createReactNativeComponentClass","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any},


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:PICKER,
style:styles.rkPickerIOS,
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
rkPickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var rkPickerIOSAttributes=merge(ReactNativeViewAttributes.UIView,{
items:true,
selectedIndex:true});


var RCTPickerIOS=createReactNativeComponentClass({
validAttributes:rkPickerIOSAttributes,
uiViewClassName:'RCTPicker'});


module.exports = PickerIOS;
});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');




var ProgressViewIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source},


render:function(){
return (
React.createElement(RCTProgressView,_extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports = ProgressViewIOS;
});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool},


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,_extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
null);

if(__DEV__){
verifyPropTypes(
RCTSegmentedControl,
RCTSegmentedControl.viewConfig);}



module.exports = SegmentedControlIOS;
});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









value:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func},


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}},



render:function(){
return (
React.createElement(RCTSlider,{
style:[styles.slider,this.props.style],
value:this.props.value,
maximumValue:this.props.maximumValue,
minimumValue:this.props.minimumValue,
minimumTrackTintColor:this.props.minimumTrackTintColor,
maximumTrackTintColor:this.props.maximumTrackTintColor,
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS);

module.exports = SliderIOS;
});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});},


render:function(){
return (
React.createElement(RCTSwitch,_extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS);

module.exports = SwitchIOS;
});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({
statics:{
Item:TabBarItemIOS},


propTypes:{
style:View.propTypes.style},


render:function(){
return (
React.createElement(RCTTabBar,{style:[styles.tabGroup,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports = TabBarIOS;
});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 

{
tabContents = React.createElement(View,null);}


var icon=this.props.systemIcon || 
this.props.icon && this.props.icon.uri;


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem,{
icon:icon,
selectedIcon:this.props.selectedIcon && this.props.selectedIcon.uri,
onPress:this.props.onPress,
selected:this.props.selected,
badge:badge,
title:this.props.title,
style:[styles.tab,this.props.style]},
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports = TabBarItemIOS;
});
__d('Text',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({

mixins:[Touchable.Mixin,NativeMethodsMixin],

propTypes:{





numberOfLines:React.PropTypes.number,





onPress:React.PropTypes.func,




suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string},


viewConfig:viewConfig,

getInitialState:function(){
return merge(this.touchableGetInitialState(),{
isHighlighted:false});},



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;},





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;},


handleResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this,arguments);},


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this,arguments);},


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this,arguments);},


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this,arguments);},


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});},



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});},



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;
return React.createElement(RCTText,props);}});










var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);

module.exports = Text;
});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
this.touchableGetHighlightDelayMS():HIGHLIGHT_DELAY_MS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this,e),
LONG_PRESS_THRESHOLD - delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);},










_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState = nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;},


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress();}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn();}else 
if(!newIsHighlight && curIsHighlight){
this.touchableHandleActivePressOut && this.touchableHandleActivePressOut();}


if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;
});
__d('BoundingDimensions',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports = BoundingDimensions;
});
__d('Position',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports = Position;
});
__d('TouchEventUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;
});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports = queryLayoutByID;
});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","ReactNativeViewAttributes","StyleSheet","Text","TextInputState","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","merge","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var merge=require('merge');

var autoCapitalizeConsts=RCTUIManager.UIText.AutocapitalizationType;
var keyboardTypeConsts=RCTUIManager.UIKeyboardType;
var returnKeyTypeConsts=RCTUIManager.UIReturnKeyType;

var RCTTextViewAttributes=merge(ReactNativeViewAttributes.UIView,{
autoCorrect:true,
autoCapitalize:true,
clearTextOnFocus:true,
color:true,
editable:true,
fontFamily:true,
fontSize:true,
fontStyle:true,
fontWeight:true,
keyboardType:true,
returnKeyType:true,
enablesReturnKeyAutomatically:true,
secureTextEntry:true,
selectTextOnFocus:true,
mostRecentEventCounter:true,
placeholder:true,
placeholderTextColor:true,
text:true});


var RCTTextFieldAttributes=merge(RCTTextViewAttributes,{
caretHidden:true,
enabled:true,
clearButtonMode:true,
clearTextOnFocus:true,
selectTextOnFocus:true});


var onlyMultiline={
onSelectionChange:true,
onTextInput:true,
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true,
autoCorrect:true,
autoFocus:true,
keyboardType:true,
multiline:true,
password:true,
placeholder:true,
text:true,
testID:true};


var viewConfigIOS={
uiViewClassName:'RCTTextField',
validAttributes:RCTTextFieldAttributes};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput',
validAttributes:AndroidTextInputAttributes};


var crossPlatformKeyboardTypeMap={
'numeric':'decimal-pad'};









































var TextInput=React.createClass({
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,



autoFocus:PropTypes.bool,



editable:PropTypes.bool,



keyboardType:PropTypes.oneOf([
'default',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'email-address',
'decimal-pad',
'twitter',
'web-search',

'numeric']),




returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),





enablesReturnKeyAutomatically:PropTypes.bool,



multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,
onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,



onSubmitEditing:PropTypes.func,



onLayout:PropTypes.func,




password:PropTypes.bool,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




selectionState:PropTypes.instanceOf(DocumentSelectionState),



value:PropTypes.string,






bufferDelay:PropTypes.number,





controlled:PropTypes.bool,



clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),




clearTextOnFocus:PropTypes.bool,



selectTextOnFocus:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string},






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:Platform.OS === 'ios'?viewConfigIOS:
Platform.OS === 'android'?viewConfigAndroid:{},

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);},


getDefaultProps:function(){
return {
bufferDelay:100};},



getInitialState:function(){
return {
mostRecentEventCounter:0,
bufferedValue:this.props.value};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



_bufferTimeout:undefined,

componentWillReceiveProps:function(newProps){var _this2=this;
if(newProps.value !== this.props.value){
if(!this.isFocused()){


this.setState({bufferedValue:newProps.value});}else 
{




























this.clearTimeout(this._bufferTimeout);
this._bufferTimeout = this.setTimeout(
function(){return _this2.setState({bufferedValue:newProps.value});},
this.props.bufferDelay);}}},





render:function(){
if(Platform.OS === 'ios'){
return this._renderIOs();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}},



_renderIOs:function(){
var textContainer;

var autoCapitalize=autoCapitalizeConsts[this.props.autoCapitalize];
var clearButtonMode=RCTUIManager.UITextField.clearButtonMode[this.props.clearButtonMode];

var keyboardType=keyboardTypeConsts[
crossPlatformKeyboardTypeMap[this.props.keyboardType] || 
this.props.keyboardType];

var returnKeyType=returnKeyTypeConsts[this.props.returnKeyType];

if(!this.props.multiline){
for(var propKey in onlyMultiline) {
if(this.props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField,{
ref:'input',
style:[styles.input,this.props.style],
enabled:this.props.editable,
keyboardType:keyboardType,
returnKeyType:returnKeyType,
enablesReturnKeyAutomatically:this.props.enablesReturnKeyAutomatically,
secureTextEntry:this.props.password || this.props.secureTextEntry,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onSelectionChangeShouldSetResponder:function(){return true;},
onLayout:this.props.onLayout,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this.state.bufferedValue,
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
clearButtonMode:clearButtonMode,
clearTextOnFocus:this.props.clearTextOnFocus,
selectTextOnFocus:this.props.selectTextOnFocus});}else 

{
for(var propKey in notMultiline) {
if(this.props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

if(this.props.inputView){
children = [children,this.props.inputView];}

textContainer = 
React.createElement(RCTTextView,{
ref:'input',
style:[styles.input,this.props.style],
children:children,
mostRecentEventCounter:this.state.mostRecentEventCounter,
editable:this.props.editable,
keyboardType:keyboardType,
returnKeyType:returnKeyType,
enablesReturnKeyAutomatically:this.props.enablesReturnKeyAutomatically,
secureTextEntry:this.props.password || this.props.secureTextEntry,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onEndEditing:this.props.onEndEditing,
onSelectionChange:this._onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
onLayout:this.props.onLayout,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this.state.bufferedValue,
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
clearButtonMode:clearButtonMode,
selectTextOnFocus:this.props.selectTextOnFocus,
clearTextOnFocus:this.props.clearTextOnFocus});}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=autoCapitalizeConsts[this.props.autoCapitalize];
var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
keyboardType:this.props.keyboardType,
multiline:this.props.multiline,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password || this.props.secureTextEntry,
placeholder:this.props.placeholder,
text:this.state.bufferedValue});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
this.focus();},


_onChange:function(event){
if(this.props.controlled && event.nativeEvent.text !== this.props.value){
this.refs.input.setNativeProps({text:this.props.value});}

this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(event.nativeEvent.text);},


_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start,selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);},


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);
var counter=event.nativeEvent.eventCounter;
if(counter > this.state.mostRecentEventCounter){
this.setState({mostRecentEventCounter:counter});}}});




var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var RCTTextView=createReactNativeComponentClass({
validAttributes:RCTTextViewAttributes,
uiViewClassName:'RCTTextView'});


var RCTTextField=createReactNativeComponentClass({
validAttributes:RCTTextFieldAttributes,
uiViewClassName:'RCTTextField'});


var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes,
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;
});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor,focus){_classCallCheck(this,DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState,[{key:'update',value:









function update(anchor,focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}},{key:'constrainLength',value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}},{key:'blur',value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}},{key:'hasFocus',value:






function hasFocus(){
return this._hasFocus;}},{key:'isCollapsed',value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}},{key:'isBackward',value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}},{key:'getAnchorOffset',value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:








function overlaps(start,end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports = DocumentSelectionState;
});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types = copyProperties({},target.__types,types);}else 
{
target.__types = types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;
});
__d('EventEmitterWithHolding',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter,holder){_classCallCheck(this,EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding,[{key:'addListener',value:





function addListener(eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:





function once(eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:






















function addRetroactiveListener(
eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents = false;

return subscription;}},{key:'removeAllListeners',value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}},{key:'listeners',value:





function listeners(eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:





function emit(eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:

















function emitAndHold(eventType,a,b,c,d,e,_){
this._currentEventToken = this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken = null;}},{key:'releaseCurrentEvent',value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;
});
__d('EventHolder',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this,EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder,[{key:'holdEvent',value:























function holdEvent(eventType,a,b,c,d,e,_){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:










function emitToListener(eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey = origEventKey;}},{key:'releaseCurrentEvent',value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;
});
__d('EventValidator',["copyProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type,allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i = 0;i <= a.length;i++) {
d[i] = [i];}


for(j = 1;j <= b.length;j++) {
d[0][j] = j;}


for(i = 1;i <= a.length;i++) {
for(j = 1;j <= b.length;j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1,
d[i][j - 1] + 1,
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j],d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;
});
__d('copyProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;
});
__d('TouchableWithoutFeedback',["React","Touchable","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var Touchable=require('Touchable');
var onlyChild=require('onlyChild');







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};








var TouchableWithoutFeedback=React.createClass({
mixins:[Touchable.Mixin],

propTypes:{




onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,
onLongPress:React.PropTypes.func},


getInitialState:function(){
return this.touchableGetInitialState();},






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);},


touchableHandleActivePressIn:function(){
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
this.props.onPressOut && this.props.onPressOut();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return 0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:true,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;
});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","keyOf","merge","onlyChild","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');

var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


























var TouchableHighlight=React.createClass({
propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut();},


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay,100);
this.props.onPress && this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


_showUnderlay:function(){
this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));}},




render:function(){
return (
React.createElement(View,{
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
cloneWithProps(
onlyChild(this.props.children),
{
ref:CHILD_REF,
accessible:true,
testID:this.props.testID})));}});







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;
});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child,props){
if(__DEV__){
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports = cloneWithProps;
});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports = ReactPropTransferer;
});
__d('joinClasses',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1;ii < argLength;ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;
});
__d('ensureComponentIsNative',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function',
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;
});
__d('TouchableOpacity',["NativeMethodsMixin","POPAnimationMixin","React","Touchable","TouchableWithoutFeedback","cloneWithProps","ensureComponentIsNative","flattenStyle","keyOf","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var POPAnimationMixin=require('POPAnimationMixin');
var React=require('React');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');
var onlyChild=require('onlyChild');























var TouchableOpacity=React.createClass({
mixins:[Touchable.Mixin,NativeMethodsMixin,POPAnimationMixin],

propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


setOpacityTo:function(value){
if(POPAnimationMixin){

this.stopAllAnimations();
var anim={
type:this.AnimationTypes.linear,
property:this.AnimationProperties.opacity,
toValue:value};

this.startAnimation(CHILD_REF,anim);}else 
{

this.refs[CHILD_REF].setNativeProps({
opacity:value});}},








touchableHandleActivePressIn:function(){
this.refs[CHILD_REF].setNativeProps({
opacity:this.props.activeOpacity});

this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
var child=onlyChild(this.props.children);
var childStyle=flattenStyle(child.props.style) || {};
this.setOpacityTo(childStyle.opacity === undefined?1:childStyle.opacity);
this.props.onPressOut && this.props.onPressOut();},


touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return 0;},


render:function(){
return cloneWithProps(onlyChild(this.props.children),{
ref:CHILD_REF,
accessible:true,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});










var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var CHILD_REF=keyOf({childRef:null});

module.exports = TouchableOpacity;
});
__d('POPAnimationMixin',["POPAnimation","React","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var POPAnimationOrNull=require('POPAnimation');
var React=require('React');

if(!POPAnimationOrNull){


module.exports = null;}else 
{



var POPAnimation=POPAnimationOrNull;

var invariant=require('invariant');
var warning=require('warning');

var POPAnimationMixin={




AnimationTypes:POPAnimation.Types,
AnimationProperties:POPAnimation.Properties,

getInitialState:function(){
return {
_currentAnimationsByNodeHandle:{}};},



_ensureBookkeepingSetup:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
this.state._currentAnimationsByNodeHandle[nodeHandle] = [];}},

















startAnimation:function(
refKey,
anim,
doneCallback)
{
var animID=0;
if(typeof anim === 'number'){
animID = anim;}else 
{
invariant(
anim instanceof Object && 
anim.type !== undefined && 
anim.property !== undefined,
'Animation definitions must specify a type of animation and a ' + 
'property to animate.');

animID = POPAnimation.createAnimation(anim.type,anim);}

invariant(
this.refs[refKey],
'Invalid refKey ' + refKey + ' for anim:\n' + JSON.stringify(anim) + 
'\nvalid refs: ' + JSON.stringify(Object.keys(this.refs)));

var refNodeHandle=React.findNodeHandle(this.refs[refKey]);
this.startAnimationWithNodeHandle(refNodeHandle,animID,doneCallback);},








startAnimationWithNodeHandle:function(
nodeHandle,
animID,
doneCallback)
{var _this=this;
this._ensureBookkeepingSetup(nodeHandle);
var animations=this.state._currentAnimationsByNodeHandle[nodeHandle];
var animIndex=animations.length;
animations.push(animID);
var cleanupWrapper=function(finished){
if(!_this.isMounted()){
return;}

animations[animIndex] = 0;
var allDone=true;
for(var ii=0;ii < animations.length;ii++) {
if(animations[ii]){
allDone = false;
break;}}


if(allDone){
_this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;}

doneCallback && doneCallback(finished);};

POPAnimation.addAnimation(nodeHandle,animID,cleanupWrapper);},













startAnimations:function(
animations,
onSuccess,
onFailure)
{var _this2=this;
var numReturned=0;
var numFinished=0;
var numAnimations=animations.length;
var metaCallback=function(finished){
if(finished){
++numFinished;}

if(++numReturned === numAnimations){
onSuccess && onSuccess(numFinished === numAnimations);}};


animations.forEach(function(anim){
warning(
anim.ref != null || anim.nodeHandle != null && 
!anim.ref !== !anim.nodeHandle,
'Animations must be specified with either ref xor nodeHandle');

if(anim.ref){
_this2.startAnimation(anim.ref,anim.anim,metaCallback);}else 
if(anim.nodeHandle){
_this2.startAnimationWithNodeHandle(anim.nodeHandle,anim.anim,metaCallback);}});},











stopNodeHandleAnimations:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
return;}

var anims=this.state._currentAnimationsByNodeHandle[nodeHandle];
for(var i=0;i < anims.length;i++) {
var anim=anims[i];
if(anim){

POPAnimation.removeAnimation(+nodeHandle,anim);}}


this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;},







stopAnimations:function(refKey){
invariant(this.refs[refKey],'invalid ref');
this.stopNodeHandleAnimations(React.findNodeHandle(this.refs[refKey]));},






stopAllAnimations:function(){
for(var nodeHandle in this.state._currentAnimationsByNodeHandle) {
this.stopNodeHandleAnimations(nodeHandle);}},



















animateToFrame:function(
refKey,
frame,
type,
velocity,
doneCallback)
{
var animFrame={
x:frame.left + frame.width / 2,
y:frame.top + frame.height / 2,
w:frame.width,
h:frame.height};

var posAnim=POPAnimation.createAnimation(type,{
property:POPAnimation.Properties.position,
toValue:[animFrame.x,animFrame.y],
velocity:velocity || [0,0]});

var sizeAnim=POPAnimation.createAnimation(type,{
property:POPAnimation.Properties.size,
toValue:[animFrame.w,animFrame.h]});

this.startAnimation(refKey,posAnim,doneCallback);
this.startAnimation(refKey,sizeAnim);},



componentWillUnmount:function(){
this.stopAllAnimations();}};



module.exports = POPAnimationMixin;}
});
__d('POPAnimation',["NativeModules","ReactPropTypes","createStrictShapeTypeChecker","getObjectValues","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTPOPAnimationManager=require('NativeModules').POPAnimationManager;
if(!RCTPOPAnimationManager){




module.exports = null;}else 
{

var ReactPropTypes=require('ReactPropTypes');
var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var getObjectValues=require('getObjectValues');
var invariant=require('invariant');
var merge=require('merge');

var RCTTypes=RCTPOPAnimationManager.Types;
var RCTProperties=RCTPOPAnimationManager.Properties;

var Properties={
bounds:RCTProperties.bounds,
opacity:RCTProperties.opacity,
position:RCTProperties.position,
positionX:RCTProperties.positionX,
positionY:RCTProperties.positionY,
zPosition:RCTProperties.zPosition,
rotation:RCTProperties.rotation,
rotationX:RCTProperties.rotationX,
rotationY:RCTProperties.rotationY,
scaleX:RCTProperties.scaleX,
scaleXY:RCTProperties.scaleXY,
scaleY:RCTProperties.scaleY,
shadowColor:RCTProperties.shadowColor,
shadowOffset:RCTProperties.shadowOffset,
shadowOpacity:RCTProperties.shadowOpacity,
shadowRadius:RCTProperties.shadowRadius,
size:RCTProperties.size,
subscaleXY:RCTProperties.subscaleXY,
subtranslationX:RCTProperties.subtranslationX,
subtranslationXY:RCTProperties.subtranslationXY,
subtranslationY:RCTProperties.subtranslationY,
subtranslationZ:RCTProperties.subtranslationZ,
translationX:RCTProperties.translationX,
translationXY:RCTProperties.translationXY,
translationY:RCTProperties.translationY,
translationZ:RCTProperties.translationZ};


var Types={
decay:RCTTypes.decay,
easeIn:RCTTypes.easeIn,
easeInEaseOut:RCTTypes.easeInEaseOut,
easeOut:RCTTypes.easeOut,
linear:RCTTypes.linear,
spring:RCTTypes.spring};
















var POPAnimation={
Types:Types,
Properties:Properties,

attributeChecker:createStrictShapeTypeChecker({
type:ReactPropTypes.oneOf(getObjectValues(Types)),
property:ReactPropTypes.oneOf(getObjectValues(Properties)),
fromValue:ReactPropTypes.any,
toValue:ReactPropTypes.any,
duration:ReactPropTypes.any,
velocity:ReactPropTypes.any,
deceleration:ReactPropTypes.any,
springBounciness:ReactPropTypes.any,
dynamicsFriction:ReactPropTypes.any,
dynamicsMass:ReactPropTypes.any,
dynamicsTension:ReactPropTypes.any}),


lastUsedTag:0,
allocateTagForAnimation:function(){
return ++this.lastUsedTag;},


createAnimation:function(typeName,attrs){
var tag=this.allocateTagForAnimation();

if(__DEV__){
POPAnimation.attributeChecker(
{attrs:attrs},
'attrs',
'POPAnimation.createAnimation');

POPAnimation.attributeChecker(
{attrs:{type:typeName}},
'attrs',
'POPAnimation.createAnimation');}



RCTPOPAnimationManager.createAnimationInternal(tag,typeName,attrs);
return tag;},


createSpringAnimation:function(attrs){
return this.createAnimation(this.Types.spring,attrs);},


createDecayAnimation:function(attrs){
return this.createAnimation(this.Types.decay,attrs);},


createLinearAnimation:function(attrs){
return this.createAnimation(this.Types.linear,attrs);},


createEaseInAnimation:function(attrs){
return this.createAnimation(this.Types.easeIn,attrs);},


createEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeOut,attrs);},


createEaseInEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeInEaseOut,attrs);},


addAnimation:function(nodeHandle,anim,callback){
RCTPOPAnimationManager.addAnimation(nodeHandle,anim,callback);},


removeAnimation:function(nodeHandle,anim){
RCTPOPAnimationManager.removeAnimation(nodeHandle,anim);}};





if(__DEV__){
var allProperties=merge(
RCTPOPAnimationManager.Properties,
RCTPOPAnimationManager.Properties);

for(var key in allProperties) {
invariant(
POPAnimation.Properties[key] === RCTPOPAnimationManager.Properties[key],
'POPAnimation doesn\'t copy property ' + key + ' correctly');}



var allTypes=merge(
RCTPOPAnimationManager.Types,
RCTPOPAnimationManager.Types);

for(var key in allTypes) {
invariant(
POPAnimation.Types[key] === RCTPOPAnimationManager.Types[key],
'POPAnimation doesn\'t copy type ' + key + ' correctly');}}




module.exports = POPAnimation;}
});
__d('getObjectValues',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 


























getObjectValues(obj){
var values=[];
for(var key in obj) {
values.push(obj[key]);}

return values;}


module.exports = getObjectValues;
});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","ReactNativeViewAttributes","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};










var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: ' + errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: ' + errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: ' + errorDesc)));};




var WebView=React.createClass({
statics:{
NavigationType:NavigationType},


propTypes:{
url:PropTypes.string,
html:PropTypes.string,
renderError:PropTypes.func,
renderLoading:PropTypes.func,
bounces:PropTypes.bool,
scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
shouldInjectAJAXHandler:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,



javaScriptEnabledAndroid:PropTypes.bool},


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null,
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
shouldInjectAJAXHandler:this.props.shouldInjectAJAXHandler,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebWiewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebWiewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebWiewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebWiewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.error("encountered an error loading page",event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView);

var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;
});
__d('ActionSheetIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(
options,
function(){},
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof failureCallback === 'function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback === 'function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(
options,
failureCallback,
successCallback);}};




module.exports = ActionSheetIOS;
});
__d('AdSupportIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports = {
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT,
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this,AlertIOS);}_createClass(AlertIOS,null,[{key:'alert',value:
function alert(
title,
message,
buttons,



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn,index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title,
message:message,
buttons:buttonsSpec,
type:type},
function(id,value){
var cb=callbacks[id];
cb && cb(value);});}},{key:'prompt',value:



function prompt(
title,
value,
buttons,



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'},
{
text:'OK',
onPress:callback}];}


this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;
});
__d('Animated',["Interpolation","Easing","Image","InteractionManager","Interpolation","React","Set","SpringConfig","Text","View","invariant","flattenStyle","requestAnimationFrame"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}










'use strict';

var Easing=require('Easing');
var Image=require('Image');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var SpringConfig=require('SpringConfig');
var Text=require('Text');
var View=require('View');
var invariant=require('invariant');

var flattenStyle=require('flattenStyle');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=(function(){function Animated(){_classCallCheck(this,Animated);}_createClass(Animated,[{key:'attach',value:
function attach(){}},{key:'detach',value:
function detach(){}},{key:'__getValue',value:
function __getValue(){}},{key:'getAnimatedValue',value:
function getAnimatedValue(){return this.__getValue();}},{key:'addChild',value:
function addChild(child){}},{key:'removeChild',value:
function removeChild(child){}},{key:'getChildren',value:
function getChildren(){return [];}}]);return Animated;})();var 





Animation=(function(){function Animation(){_classCallCheck(this,Animation);}_createClass(Animation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:
function stop(){}},{key:'__debouncedOnEnd',value:

function __debouncedOnEnd(result){
var onEnd=this.__onEnd;
this.__onEnd = null;
onEnd && onEnd(result);}}]);return Animation;})();var 



AnimatedWithChildren=(function(_Animated){_inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){_classCallCheck(this,AnimatedWithChildren);
_get(Object.getPrototypeOf(AnimatedWithChildren.prototype),'constructor',this).call(this);
this._children = [];}_createClass(AnimatedWithChildren,[{key:'addChild',value:


function addChild(child){
if(this._children.length === 0){
this.attach();}

this._children.push(child);}},{key:'removeChild',value:


function removeChild(child){
var index=this._children.indexOf(child);
if(index === -1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length === 0){
this.detach();}}},{key:'getChildren',value:



function getChildren(){
return this._children;}}]);return AnimatedWithChildren;})(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update === 'function'){
animatedStyles.add(node);}else 
{
node.getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}









var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=(function(_Animation){_inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{_classCallCheck(this,TimingAnimation);
_get(Object.getPrototypeOf(TimingAnimation.prototype),'constructor',this).call(this);
this._toValue = config.toValue;
this._easing = config.easing || easeInOut;
this._duration = config.duration !== undefined?config.duration:500;
this._delay = config.delay || 0;}_createClass(TimingAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{var _this=this;
this.__active = true;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;

var start=function(){
if(_this._duration === 0){
_this._onUpdate(_this._toValue);
_this.__debouncedOnEnd({finished:true});}else 
{
_this._startTime = Date.now();
_this._animationFrame = requestAnimationFrame(_this.onUpdate.bind(_this));}};


if(this._delay){
this._timeout = setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:



function onUpdate(){
var now=Date.now();
if(now >= this._startTime + this._duration){
if(this._duration === 0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue + this._easing(1) * (this._toValue - this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue + 
this._easing((now - this._startTime) / this._duration) * (
this._toValue - this._fromValue));

if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;})(Animation);var 













DecayAnimation=(function(_Animation2){_inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{_classCallCheck(this,DecayAnimation);
_get(Object.getPrototypeOf(DecayAnimation.prototype),'constructor',this).call(this);
this._deceleration = config.deceleration || 0.998;
this._velocity = config.velocity;}_createClass(DecayAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{
this.__active = true;
this._lastValue = fromValue;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._startTime = Date.now();
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:


function onUpdate(){
var now=Date.now();

var value=this._fromValue + 
this._velocity / (1 - this._deceleration) * (
1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue - value) < 0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue = value;
if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;})(Animation);



























function withDefault(value,defaultValue){
if(value === undefined || value === null){
return defaultValue;}

return value;}var 


SpringAnimation=(function(_Animation3){_inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{_classCallCheck(this,SpringAnimation);
_get(Object.getPrototypeOf(SpringAnimation.prototype),'constructor',this).call(this);

this._overshootClamping = withDefault(config.overshootClamping,false);
this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold,0.001);
this._restSpeedThreshold = withDefault(config.restSpeedThreshold,0.001);
this._initialVelocity = config.velocity;
this._lastVelocity = withDefault(config.velocity,0);
this._toValue = config.toValue;

var springConfig;
if(config.bounciness !== undefined || config.speed !== undefined){
invariant(
config.tension === undefined && config.friction === undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig = SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig = SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


this._tension = springConfig.tension;
this._friction = springConfig.friction;}_createClass(SpringAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active = true;
this._startPosition = fromValue;
this._lastPosition = this._startPosition;

this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._lastTime = Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition = internalState.lastPosition;
this._lastVelocity = internalState.lastVelocity;
this._lastTime = internalState.lastTime;}

if(this._initialVelocity !== undefined && 
this._initialVelocity !== null){
this._lastVelocity = this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:


function getInternalState(){
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:



function onUpdate(){
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now > this._lastTime + MAX_STEPS){
now = this._lastTime + MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

for(var i=0;i < numSteps;++i) {

var step=TIMESTEP_MSEC / 1000;



var aVelocity=velocity;
var aAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
var tempPosition=position + aVelocity * step / 2;
var tempVelocity=velocity + aAcceleration * step / 2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + bVelocity * step / 2;
tempVelocity = velocity + bAcceleration * step / 2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dxdt=(aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
var dvdt=(aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

position += dxdt * step;
velocity += dvdt * step;}


this._lastTime = now;
this._lastPosition = position;
this._lastVelocity = velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping && this._tension !== 0){
if(this._startPosition < this._toValue){
isOvershooting = position > this._toValue;}else 
{
isOvershooting = position < this._toValue;}}


var isVelocity=Math.abs(velocity) <= this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension !== 0){
isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;}


if(isOvershooting || isVelocity && isDisplacement){
if(this._tension !== 0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:


function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;})(Animation);





var _uniqueId=1;var 

AnimatedValue=(function(_AnimatedWithChildren){_inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){_classCallCheck(this,AnimatedValue);
_get(Object.getPrototypeOf(AnimatedValue.prototype),'constructor',this).call(this);
this._value = value;
this._offset = 0;
this._animation = null;
this._listeners = {};}_createClass(AnimatedValue,[{key:'detach',value:


function detach(){
this.stopAnimation();}},{key:'__getValue',value:


function __getValue(){
return this._value + this._offset;}},{key:'setValue',value:


function setValue(value){
if(this._animation){
this._animation.stop();
this._animation = null;}

this._updateValue(value);}},{key:'setOffset',value:


function setOffset(offset){
this._offset = offset;}},{key:'flattenOffset',value:


function flattenOffset(){
this._value += this._offset;
this._offset = 0;}},{key:'addListener',value:


function addListener(callback){
var id=String(_uniqueId++);
this._listeners[id] = callback;
return id;}},{key:'removeListener',value:


function removeListener(id){
delete this._listeners[id];}},{key:'removeAllListeners',value:


function removeAllListeners(){
this._listeners = {};}},{key:'animate',value:


function animate(animation,callback){var _this2=this;
var handle=InteractionManager.createInteractionHandle();
var previousAnimation=this._animation;
this._animation && this._animation.stop();
this._animation = animation;
animation.start(
this._value,
function(value){
_this2._updateValue(value);},

function(result){
_this2._animation = null;
InteractionManager.clearInteractionHandle(handle);
callback && callback(result);},

previousAnimation);}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.stopTracking();
this._animation && this._animation.stop();
this._animation = null;
callback && callback(this.__getValue());}},{key:'stopTracking',value:


function stopTracking(){
this._tracking && this._tracking.detach();
this._tracking = null;}},{key:'track',value:


function track(tracking){
this.stopTracking();
this._tracking = tracking;}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'_updateValue',value:


function _updateValue(value){
this._value = value;
_flush(this);
for(var key in this._listeners) {
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;})(AnimatedWithChildren);var 





AnimatedValueXY=(function(_AnimatedWithChildren2){_inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){_classCallCheck(this,AnimatedValueXY);
_get(Object.getPrototypeOf(AnimatedValueXY.prototype),'constructor',this).call(this);
var value=valueIn || {x:0,y:0};
if(typeof value.x === 'number' && typeof value.y === 'number'){
this.x = new AnimatedValue(value.x);
this.y = new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue && 
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or ' + 
'AnimatedValues.');

this.x = value.x;
this.y = value.y;}

this._listeners = {};}_createClass(AnimatedValueXY,[{key:'setValue',value:


function setValue(value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:


function setOffset(offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:


function flattenOffset(){
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:


function __getValue(){
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback && callback(this.__getValue());}},{key:'addListener',value:


function addListener(callback){var _this3=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this3.__getValue());};

this._listeners[id] = {
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:


function removeListener(id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:


function getLayout(){
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:



function getTranslateTransform(){
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;})(AnimatedWithChildren);var 




AnimatedInterpolation=(function(_AnimatedWithChildren3){_inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){_classCallCheck(this,AnimatedInterpolation);
_get(Object.getPrototypeOf(AnimatedInterpolation.prototype),'constructor',this).call(this);
this._parent = parent;
this._interpolation = interpolation;}_createClass(AnimatedInterpolation,[{key:'__getValue',value:


function __getValue(){
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue === 'number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'attach',value:


function attach(){
this._parent.addChild(this);}},{key:'detach',value:


function detach(){
this._parent.removeChild(this);}}]);return AnimatedInterpolation;})(AnimatedWithChildren);var 



AnimatedTransform=(function(_AnimatedWithChildren4){_inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){_classCallCheck(this,AnimatedTransform);
_get(Object.getPrototypeOf(AnimatedTransform.prototype),'constructor',this).call(this);
this._transforms = transforms;}_createClass(AnimatedTransform,[{key:'__getValue',value:


function __getValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getValue();}else 
{
result[key] = value;}}


return result;});}},{key:'getAnimatedValue',value:



function getAnimatedValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.getAnimatedValue();}else 
{

result[key] = value;}}


return result;});}},{key:'attach',value:



function attach(){var _this4=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.addChild(_this4);}}});}},{key:'detach',value:





function detach(){var _this5=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.removeChild(_this5);}}});}}]);return AnimatedTransform;})(AnimatedWithChildren);var 






AnimatedStyle=(function(_AnimatedWithChildren5){_inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);
_get(Object.getPrototypeOf(AnimatedStyle.prototype),'constructor',this).call(this);
style = flattenStyle(style) || {};
if(style.transform){
style = _extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


this._style = style;}_createClass(AnimatedStyle,[{key:'__getValue',value:


function __getValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getValue();}else 
{
style[key] = value;}}


return style;}},{key:'getAnimatedValue',value:


function getAnimatedValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.getAnimatedValue();}}


return style;}},{key:'attach',value:


function attach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.addChild(this);}}}},{key:'detach',value:




function detach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.removeChild(this);}}}}]);return AnimatedStyle;})(AnimatedWithChildren);var 





AnimatedProps=(function(_Animated2){_inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{_classCallCheck(this,AnimatedProps);
_get(Object.getPrototypeOf(AnimatedProps.prototype),'constructor',this).call(this);
if(props.style){
props = _extends({},
props,{
style:new AnimatedStyle(props.style)});}


this._props = props;
this._callback = callback;
this.attach();}_createClass(AnimatedProps,[{key:'__getValue',value:


function __getValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getValue();}else 
{
props[key] = value;}}


return props;}},{key:'getAnimatedValue',value:


function getAnimatedValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.getAnimatedValue();}}


return props;}},{key:'attach',value:


function attach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.addChild(this);}}}},{key:'detach',value:




function detach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.removeChild(this);}}}},{key:'update',value:




function update(){
this._callback();}}]);return AnimatedProps;})(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=(function(_React$Component){_inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){_classCallCheck(this,AnimatedComponent);_get(Object.getPrototypeOf(AnimatedComponent.prototype),'constructor',this).apply(this,arguments);}_createClass(AnimatedComponent,[{key:'componentWillUnmount',value:


function componentWillUnmount(){
this._propsAnimated && this._propsAnimated.detach();}},{key:'setNativeProps',value:


function setNativeProps(props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:


function componentWillMount(){
this.attachProps(this.props);}},{key:'attachProps',value:


function attachProps(nextProps){var _this6=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this6.refs[refName].setNativeProps){
var value=_this6._propsAnimated.getAnimatedValue();
_this6.refs[refName].setNativeProps(value);}else 
{
_this6.forceUpdate();}};



this._propsAnimated = new AnimatedProps(
nextProps,
callback);










oldPropsAnimated && oldPropsAnimated.detach();}},{key:'componentWillReceiveProps',value:


function componentWillReceiveProps(nextProps){
this.attachProps(nextProps);}},{key:'render',value:


function render(){
return (
React.createElement(Component,_extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;})(React.Component);





return AnimatedComponent;}var 


AnimatedTracking=(function(_Animated3){_inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{_classCallCheck(this,AnimatedTracking);
_get(Object.getPrototypeOf(AnimatedTracking.prototype),'constructor',this).call(this);
this._value = value;
this._parent = parent;
this._animationClass = animationClass;
this._animationConfig = animationConfig;
this._callback = callback;
this.attach();}_createClass(AnimatedTracking,[{key:'__getValue',value:


function __getValue(){
return this._parent.__getValue();}},{key:'attach',value:


function attach(){
this._parent.addChild(this);}},{key:'detach',value:


function detach(){
this._parent.removeChild(this);}},{key:'update',value:


function update(){
this._value.animate(new this._animationClass(_extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;})(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=_extends({},config);
var configY=_extends({},config);
for(var key in config) {var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x !== undefined && y !== undefined){
configX[key] = x;
configY[key] = y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback && callback(result);
return;}


current++;

if(current === animations.length){
callback && callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length === 0){
callback && callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current < animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config && config.stopTogether === false);

var result={
start:function(callback){
if(doneCount === animations.length){
callback && callback({finished:true});
return;}


animations.forEach(function(animation,idx){
var cb=function(endResult){
hasEnded[idx] = true;
doneCount++;
if(doneCount === animations.length){
doneCount = 0;
callback && callback(endResult);
return;}


if(!endResult.finished && stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});},




stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx] && animation.stop();
hasEnded[idx] = true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time * i),
animation]);}));};






















var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt === 'number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type ' + typeof recMapping + ' for key ' + key + 
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping === 'object',
'Bad mapping of type ' + typeof recMapping + ' for key ' + key);

invariant(
typeof recEvt === 'object',
'Bad event of type ' + typeof recEvt + ' for key ' + key);

for(var key in recMapping) {
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg' + idx);});

if(config && config.listener){
config.listener.apply(null,args);}};};




module.exports = {
delay:delay,
sequence:sequence,
parallel:parallel,
stagger:stagger,

decay:decay,
timing:timing,
spring:spring,

event:event,

Value:AnimatedValue,
ValueXY:AnimatedValueXY,
__PropsOnlyForTests:AnimatedProps,
View:createAnimatedComponent(View),
Text:createAnimatedComponent(Text),
Image:createAnimatedComponent(Image),
createAnimatedComponent:createAnimatedComponent};
});
__d('Interpolation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}













var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop = 1;
throw error;}};















var linear=function(t){return t;};var 





Interpolation=(function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:
function create(config){

if(config.outputRange && typeof config.outputRange[0] === 'string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length === outputRange.length,
'inputRange (' + inputRange.length + ') and outputRange (' + 
outputRange.length + ') must have the same length');


var easing=config.easing || linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft !== undefined){
extrapolateLeft = config.extrapolateLeft;}else 
if(config.extrapolate !== undefined){
extrapolateLeft = config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight !== undefined){
extrapolateRight = config.extrapolateRight;}else 
if(config.extrapolate !== undefined){
extrapolateRight = config.extrapolate;}


return function(input){
invariant(
typeof input === 'number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range + 1],
outputRange[range],
outputRange[range + 1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;})();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result < inputMin){
if(extrapolateLeft === 'identity'){
return result;}else 
if(extrapolateLeft === 'clamp'){
result = inputMin;}else 
if(extrapolateLeft === 'extend'){}}




if(result > inputMax){
if(extrapolateRight === 'identity'){
return result;}else 
if(extrapolateRight === 'clamp'){
result = inputMax;}else 
if(extrapolateRight === 'extend'){}}




if(outputMin === outputMax){
return outputMin;}


if(inputMin === inputMax){
if(input <= inputMin){
return outputMin;}

return outputMax;}



if(inputMin === -Infinity){
result = -result;}else 
if(inputMax === Infinity){
result = result - inputMin;}else 
{
result = (result - inputMin) / (inputMax - inputMin);}



result = easing(result);


if(outputMin === -Infinity){
result = -result;}else 
if(outputMax === Infinity){
result = result + outputMin;}else 
{
result = result * (outputMax - outputMin) + outputMin;}


return result;}


var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length >= 2,'Bad output range');
checkPattern(outputRange);









var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){
value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});



var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(_extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i < arr.length;++i) {
invariant(
pattern === arr[i].replace(stringShapeRegex,''),
'invalid pattern ' + arr[0] + ' and ' + arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i < inputRange.length - 1;++i) {
if(inputRange[i] >= input){
break;}}


return i - 1;}


function checkValidInputRange(arr){
invariant(arr.length >= 2,'inputRange must have at least 2 elements');
for(var i=1;i < arr.length;++i) {
invariant(
arr[i] >= arr[i - 1],






'inputRange must be monotonically increasing ' + arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length >= 2,name + ' must have at least 2 elements');
invariant(
arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,






name + 'cannot be ]-infinity;+infinity[ ' + arr);}



module.exports = Interpolation;
});
__d('Easing',["bezier"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var _bezier=require('bezier');var 






Easing=(function(){function Easing(){_classCallCheck(this,Easing);}_createClass(Easing,null,[{key:'step0',value:
function step0(n){
return n > 0?1:0;}},{key:'step1',value:


function step1(n){
return n >= 1?1:0;}},{key:'linear',value:


function linear(t){
return t;}},{key:'ease',value:(function(_ease){function ease(_x){return _ease.apply(this,arguments);}ease.toString = function(){return _ease.toString();};return ease;})(


function(t){
return ease(t);})},{key:'quad',value:


function quad(t){
return t * t;}},{key:'cubic',value:


function cubic(t){
return t * t * t;}},{key:'poly',value:


function poly(n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:


function sin(t){
return 1 - Math.cos(t * Math.PI / 2);}},{key:'circle',value:


function circle(t){
return 1 - Math.sqrt(1 - t * t);}},{key:'exp',value:


function exp(t){
return Math.pow(2,10 * (t - 1));}},{key:'elastic',value:


function elastic(a,p){
var tau=Math.PI * 2;


var s;
if(arguments.length < 2){
p = 0.45;}

if(arguments.length){
s = p / tau * Math.asin(1 / a);}else 
{
a = 1;
s = p / 4;}

return function(t){return 1 + a * Math.pow(2,-10 * t) * Math.sin((t - s) * tau / p);};}},{key:'back',value:


function back(s){
if(s === undefined){
s = 1.70158;}

return function(t){return t * t * ((s + 1) * t - s);};}},{key:'bounce',value:


function bounce(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}


if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}


if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}


t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}},{key:'bezier',value:


function bezier(
x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon === undefined){


var duration=500;
epsilon = 1000 / 60 / duration / 4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:


function _in(
easing)
{
return easing;}},{key:'out',value:


function out(
easing)
{
return function(t){return 1 - easing(1 - t);};}},{key:'inOut',value:


function inOut(
easing)
{
return function(t){
if(t < 0.5){
return easing(t * 2) / 2;}

return 1 - easing((1 - t) * 2) / 2;};}}]);return Easing;})();




var ease=Easing.bezier(0.42,0,1,1);

module.exports = Easing;
});
__d('bezier',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.





























exports = function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1 - t;
return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;};


var curveY=function(t){
var v=1 - t;
return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;};


var derivativeCurveX=function(t){
var v=1 - t;
return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2 = x,i = 0;i < 8;i++) {
x2 = curveX(t2) - x;
if(Math.abs(x2) < epsilon)return curveY(t2);
d2 = derivativeCurveX(t2);
if(Math.abs(d2) < 1e-6)break;
t2 = t2 - x2 / d2;}


t0 = 0,t1 = 1,t2 = x;

if(t2 < t0)return curveY(t0);
if(t2 > t1)return curveY(t1);


while(t0 < t1) {
x2 = curveX(t2);
if(Math.abs(x2 - x) < epsilon)return curveY(t2);
if(x > x2)t0 = t2;else 
t1 = t2;
t2 = (t1 - t0) * .5 + t0;}



return curveY(t2);};};
});
__d('SpringConfig',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















function tensionFromOrigamiValue(oValue){
return (oValue - 30) * 3.62 + 194;}


function frictionFromOrigamiValue(oValue){
return (oValue - 8) * 3 + 25;}


function fromOrigamiTensionAndFriction(
tension,
friction)
{
return {
tension:tensionFromOrigamiValue(tension),
friction:frictionFromOrigamiValue(friction)};}



function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);}


function projectNormal(n,start,end){
return start + n * (end - start);}


function linearInterpolation(t,start,end){
return t * end + (1 - t) * start;}


function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2 * t - t * t,start,end);}


function b3Friction1(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;}


function b3Friction2(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2;}


function b3Friction3(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;}


function b3Nobounce(tension){
if(tension <= 18){
return b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
return b3Friction2(tension);}else 
{
return b3Friction3(tension);}}



var b=normalize(bounciness / 1.7,0,20);
b = projectNormal(b,0,0.8);
var s=normalize(speed / 1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return {
tension:tensionFromOrigamiValue(bouncyTension),
friction:frictionFromOrigamiValue(bouncyFriction)};}



module.exports = {
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
});
__d('requestAnimationFrame',["emptyFunction","nativeRequestAnimationFrame"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame || 
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16 - (currTime - lastTime));
lastTime = currTime + timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame || 
global.webkitRequestAnimationFrame || 
global.mozRequestAnimationFrame || 
global.oRequestAnimationFrame || 
global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};


















var AppRegistry={
registerConfig:function(config){
for(var i=0;i < config.length;++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey] = {run:func};
return appKey;},


runApplication:function(appKey,appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + __DEV__ + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run,
'Application ' + appKey + ' has not been registered.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;
});
__d('renderApplication',["React","StyleSheet","View","WarningBox","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);

var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox,null):null;
React.render(
React.createElement(View,{style:styles.appContainer},
React.createElement(RootComponent,
initialProps),

warningBox),

rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = renderApplication;
});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","stringifySafe","Dimensions","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound.js');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null,arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments,stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning,count);
totalWarningCount += 1;
warningCountEvents.emit('count',totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY,
JSON.stringify(ignoredWarnings),
function(err){
if(err){
console.warn('Could not save ignored warnings.',err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY,function(err,data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});},


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});},


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();},

onMoveShouldSetPanResponder:function(){return true;},
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();},

onPanResponderMove:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);},

onPanResponderRelease:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});},



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(View,_extends({
style:styles.warningBox,
ref:function(container){_this2.container = container;}},
this.panGesture.panHandlers),
React.createElement(TouchableOpacity,{
onPress:this.props.onOpened},
React.createElement(View,null,
React.createElement(Text,{
style:styles.warningText,
numberOfLines:2,
ref:function(text){_this2.text = text;}},
countText,
this.props.warning))),



React.createElement(View,{
ref:function(closeButton){_this2.closeButton = closeButton;},
style:styles.closeButton},
React.createElement(TouchableOpacity,{
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}},

React.createElement(Text,{style:styles.closeButtonText},'✕')))));}});







var WarningBoxOpened=React.createClass({
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(TouchableOpacity,{
activeOpacity:0.9,
onPress:this.props.onClose},
React.createElement(View,{style:styles.yellowBox},
React.createElement(Text,{style:styles.yellowBoxText},
countText,
this.props.warning),

React.createElement(View,{style:styles.yellowBoxButtons},
React.createElement(View,{style:styles.yellowBoxButton},
React.createElement(TouchableOpacity,{
onPress:this.props.onDismissed},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Dismiss'))),




React.createElement(View,{style:styles.yellowBoxButton},
React.createElement(TouchableOpacity,{
onPress:this.props.onIgnored},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Ignore')))))));}});











var canMountWarningBox=true;

var WarningBox=React.createClass({
getInitialState:function(){
return {
totalWarningCount:totalWarningCount,
openWarning:null};},


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY,'[]',function(err){
if(err){
console.warn('Could not reset ignored warnings.',err);}});


ignoredWarnings = [];}},


componentDidMount:function(){
invariant(
canMountWarningBox,
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count',
this._onWarningCount);},


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;},

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});},


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});},


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View,null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened,{
warning:this.state.openWarning,
onClose:function(){
_this4.setState({openWarning:null});},

onDismissed:this._onDismiss.bind(this,this.state.openWarning),
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count,warning){
warningRows.push(
React.createElement(WarningRow,{
key:warning,
onOpened:function(){
_this4.setState({openWarning:warning});},

onDismissed:_this4._onDismiss.bind(_this4,warning),
warning:warning}));});



return (
React.createElement(View,{style:styles.warningContainer},
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'},

closeButton:{
position:'absolute',
right:0,
height:46,
width:46},

closeButtonText:{
color:'white',
fontSize:32,
position:'relative',
left:8},

warningContainer:{
position:'absolute',
left:0,
right:0,
bottom:0},

warningBox:{
position:'relative',
backgroundColor:'rgba(171, 124, 36, 0.9)',
flex:1,
height:46},

warningText:{
color:'white',
position:'absolute',
left:0,
marginLeft:15,
marginRight:46,
top:7},

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
padding:15,
paddingTop:35},

yellowBoxText:{
color:'white',
fontSize:20},

yellowBoxButtons:{
flexDirection:'row',
position:'absolute',
bottom:0},

yellowBoxButton:{
flex:1,
padding:25},

yellowBoxButtonText:{
color:'white',
fontSize:16}});



module.exports = WarningBox;
});
__d('AsyncStorage',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null,value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},







removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback && callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},





















multiGet:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet(keys,function(errors,result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error,result);
if(errors){
reject(error);}else 
{
resolve(result);}});});},











multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;
});
__d('RCTRenderingPerf',["ReactDefaultPerf","ReactPerf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');
var ReactPerf=require('ReactPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii < measurements.length;ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start === 'function',
'Perf module should have start() function');

invariant(
typeof module.stop === 'function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;
});
__d('AppStateIOS',["NativeModules","RCTDeviceEventEmitter","logError"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');

var DEVICE_APPSTATE_EVENT='appStateDidChange';

var _appStateHandlers={};




















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
_appStateHandlers[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_APPSTATE_EVENT,
function(appStateData){
handler(appStateData.app_state);});},







removeEventListener:function(
type,
handler)
{
if(!_appStateHandlers[handler]){
return;}

_appStateHandlers[handler].remove();
_appStateHandlers[handler] = null;},


currentState:null};



RCTDeviceEventEmitter.addListener(
DEVICE_APPSTATE_EVENT,
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;},

logError);


module.exports = AppStateIOS;
});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];



deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 


CameraRoll=(function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:'saveImageWithTag',value:










function saveImageWithTag(tag,successCallback,errorCallback){
invariant(
typeof tag === 'string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback && successCallback(imageTag);},

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}},{key:'getPhotos',value:












function getPhotos(params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback === 'function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;

module.exports = CameraRoll;
});
__d('ImagePickerIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config = _extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config = _extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports = ImagePickerIOS;
});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd,onError){
configChecker({config:config},'config','LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(config,onAnimationDidEnd,onError);}


function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var LayoutAnimation={
configureNext:configureNext,
create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:{
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}}};





module.exports = LayoutAnimation;
});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var invariant=require('invariant');

var _notifHandlers={};
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 

































































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this,LinkingIOS);}_createClass(LinkingIOS,null,[{key:'addEventListener',value:




function addEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

if(!_notifHandlers[handler]){
return;}

_notifHandlers[handler].remove();
_notifHandlers[handler] = null;}},{key:'openURL',value:





function openURL(url){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:






function canOpenURL(url,callback){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

invariant(
typeof callback === 'function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;
});
__d('NetInfo',["NativeModules","RCTDeviceEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTReachability=NativeModules.Reachability;

var DEVICE_REACHABILITY_EVENT='reachabilityDidChange';

































































var NetInfo={};

if(RCTReachability){




var _reachabilitySubscriptions={};

NetInfo.reachabilityIOS = {
addEventListener:function(
eventName,
handler)
{
_reachabilitySubscriptions[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT,
function(appStateData){
handler(appStateData.network_reachability);});},




removeEventListener:function(
eventName,
handler)
{
if(!_reachabilitySubscriptions[handler]){
return;}

_reachabilitySubscriptions[handler].remove();
_reachabilitySubscriptions[handler] = null;},


fetch:function(){
return new Promise(function(resolve,reject){
RCTReachability.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);},

reject);});}};





var _isConnectedSubscriptions={};

var _iosReachabilityIsConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};


NetInfo.isConnected = {
addEventListener:function(
eventName,
handler)
{
_isConnectedSubscriptions[handler] = function(reachability){
handler(_iosReachabilityIsConnected(reachability));};

NetInfo.reachabilityIOS.addEventListener(
eventName,
_isConnectedSubscriptions[handler]);},



removeEventListener:function(
eventName,
handler)
{
NetInfo.reachabilityIOS.removeEventListener(
eventName,
_isConnectedSubscriptions[handler]);},



fetch:function(){
return NetInfo.reachabilityIOS.fetch().then(
function(reachability){return _iosReachabilityIsConnected(reachability);});}};}





module.exports = NetInfo;
});
__d('PushNotificationIOS',["NativeModules","RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers={};
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';var 








PushNotificationIOS=(function(){_createClass(PushNotificationIOS,null,[{key:'setApplicationIconBadgeNumber',value:








function setApplicationIconBadgeNumber(number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:





function getApplicationIconBadgeNumber(callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:








function addEventListener(type,handler){
invariant(
type === 'notification',
'PushNotificationIOS only supports `notification` events');

_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}},{key:'requestPermissions',value:








function requestPermissions(){
RCTPushNotificationManager.requestPermissions();}},{key:'checkPermissions',value:










function checkPermissions(callback){
invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'notification',
'PushNotificationIOS only supports `notification` events');

if(!_notifHandlers[handler]){
return;}

_notifHandlers[handler].remove();
_notifHandlers[handler] = null;}},{key:'popInitialNotification',value:










function popInitialNotification(){
var initialNotification=_initialNotification && 
new PushNotificationIOS(_initialNotification);
_initialNotification = null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this,PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS,[{key:'getMessage',value:







function getMessage(){

return this._alert;}},{key:'getSound',value:





function getSound(){
return this._sound;}},{key:'getAlert',value:





function getAlert(){
return this._alert;}},{key:'getBadgeCount',value:





function getBadgeCount(){
return this._badgeCount;}},{key:'getData',value:





function getData(){
return this._data;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;
});
__d('Settings',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager.settings,

get:function(key){
return this._settings[key];},


set:function(settings){
this._settings = Object.assign(this._settings,settings);
RCTSettingsManager.setValues(settings);},


watchKeys:function(keys,callback){
if(typeof keys == 'string'){
keys = [keys];}


invariant(
Array.isArray(keys),
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys,callback:callback});
return sid;},


clearWatch:function(watchId){
if(watchId < subscriptions.length){
subscriptions[watchId] = {keys:[],callback:null};}},



_sendObservations:function(body){
var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key] !== newValue;
_this._settings[key] = newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(~sub.keys.indexOf(key) && sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated',
Settings._sendObservations.bind(Settings));


module.exports = Settings;
});
__d('StatusBarIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;

var StatusBarIOS={

Style:{
default:RCTStatusBarManager.Style.default,
lightContent:RCTStatusBarManager.Style.lightContent},


Animation:{
none:RCTStatusBarManager.Animation.none,
fade:RCTStatusBarManager.Animation.fade,
slide:RCTStatusBarManager.Animation.slide},


setStyle:function(style,animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation = animation || StatusBarIOS.Animation.none;
RCTStatusBarManager.setHidden(hidden,animation);}};



module.exports = StatusBarIOS;
});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;
});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports = LinkedStateMixin;
});
__d('ReactLink',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;
});
__d('ReactStateSetters',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports = ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',["shallowEqual"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return !shallowEqual(this.props,nextProps) || 
!shallowEqual(this.state,nextState);}};



module.exports = ReactComponentWithPureRenderMixin;
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec === 'object',
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length === 1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue && typeof nextValue === 'object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}










var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);},



isDOMComponent:function(inst){


return !!(inst && inst.tagName && inst.getDOMNode);},


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);},


isCompositeComponent:function(inst){
return typeof inst.render === 'function' && 
typeof inst.setState === 'function';},


isCompositeComponentWithType:function(inst,type){
return !!(ReactTestUtils.isCompositeComponent(inst) && 
inst.constructor === type);},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');},



isCompositeComponentElementWithType:function(inst,type){
return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
inst.constructor === type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

var ret=test(inst)?[inst]:[];
if(ReactTestUtils.isDOMComponent(inst)){
var internalInstance=ReactInstanceMap.get(inst);
var renderedChildren=internalInstance.
_renderedComponent.
_renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

if(!renderedChildren[key].getPublicInstance){
continue;}

ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
renderedChildren[key].getPublicInstance(),
test));}}else 



if(ReactTestUtils.isCompositeComponent(inst)){
ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
ReactTestUtils.getRenderedChildOfCompositeComponent(inst),
test));}



return ret;},







scryRenderedDOMComponentsWithClass:function(root,className){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
var instClassName=inst.props.className;
return ReactTestUtils.isDOMComponent(inst) && (
instClassName && 
(' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1);});},










findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType);}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName = mockTagName || module.mockTagName || "div";

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
comp.getDOMNode(),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element,context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element,transaction,context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element,transaction,context);}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = domComponentOrNode.getDOMNode();}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],
ReactMount.getID(node),
fakeNativeEvent);

assign(event,eventData);
EventPropagators.accumulateTwoPhaseDispatches(event);

ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;
});
__d('catapp/views/home.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/home/itemblock.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var ItemBlock=require('catapp/views/home/itemblock.js');var 


View=




React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;

var Home=React.createClass({
getInitialState:function(){

var width=Math.floor((Util.size.width - 20 - 50) / 4);
var items=[
{
title:'研发',
partment:'框架研发',
color:'#126AFF'},

{
title:'研发',
partment:'BU研发',
color:'#FFD600'},

{
title:'产品',
partment:'公共产品',
color:'#F80728'},

{
title:'产品',
partment:'BU产品',
color:'#05C147'},

{
title:'产品',
partment:'启明星',
color:'#FF4EB9'},

{
title:'项目',
partment:'项目管理',
color:'#EE810D'}];



return {
items:items,
width:width};},



render:function(){
var Items1=[];
var Items2=[];
var items=this.state.items;

for(var i=0;i < 4;i++) {
Items1.push(
React.createElement(ItemBlock,{
title:items[i].title,
partment:items[i].partment,
width:this.state.width,
color:items[i].color,
nav:this.props.navigator}));}




for(var i=4;i < items.length;i++) {
Items2.push(
React.createElement(ItemBlock,{
title:items[i].title,
partment:items[i].partment,
width:this.state.width,
color:items[i].color,
nav:this.props.navigator}));}




return (
React.createElement(ScrollView,{style:styles.container},
React.createElement(View,{style:styles.itemRow},
Items1),

React.createElement(View,{style:styles.itemRow},
Items2)));}});







var styles=StyleSheet.create({
container:{
flex:1,
padding:10},

itemRow:{
flexDirection:'row',
marginBottom:20}});



module.exports = Home;
});
__d('catapp/views/util.js',["Dimensions","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

React=require('react-native/Libraries/react-native/react-native.js');
var Dimensions=require('Dimensions');var 


PixelRatio=
React.PixelRatio;

var Util={


pixel:1 / PixelRatio.get(),

size:{
width:Dimensions.get('window').width,
height:Dimensions.get('window').height},



post:function(url,data,callback){
var fetchOptions={
method:'POST',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify(data)};


fetch(url,fetchOptions).
then(function(response){return response.text();}).
then(function(responseText){
callback(JSON.parse(responseText));});},



key:'HSHHSGSGGSTWSYWSYUSUWSHWBS-REACT-NATIVE'};



module.exports = Util;
});
__d('catapp/views/home/itemblock.js',["react-native/Libraries/react-native/react-native.js","catapp/views/home/address.js","catapp/views/service.js","catapp/views/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var Address=require('catapp/views/home/address.js');
var Service=require('catapp/views/service.js');
var Util=require('catapp/views/util.js');var 


View=



React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;


var ItemBlock=React.createClass({
render:function(){
var size={
width:parseInt(this.props.width),
height:parseInt(this.props.width),
backgroundColor:this.props.color};

return (
React.createElement(TouchableHighlight,{underlayColor:'#fff',onPress:this._loadPage},
React.createElement(View,{style:[styles.itemBlock,size]},
React.createElement(View,null,
React.createElement(Text,{style:styles.font18},this.props.title)),

React.createElement(View,null,
React.createElement(Text,{style:styles.font10},this.props.partment)))));},






_loadPage:function(e){
var nav=this.props.nav;
var key=Util.key;
var partment=this.props.partment;
var path=Service.host + Service.getUser;

Util.post(path,{
key:key,
partment:partment},
(function(data){
nav.push({
title:this.props.tag,
component:Address,
passProps:{
data:data}});}).


bind(this));}});




var styles=StyleSheet.create({
itemBlock:{
justifyContent:'center',
alignItems:'center',
borderRadius:5,
marginLeft:10},

font18:{
color:'#fff',
fontSize:18,
fontWeight:'500'},

font10:{
color:'#fff',
fontSize:10}});



module.exports = ItemBlock;
});
__d('catapp/views/home/address.js',["ActionSheetIOS","react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/service.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var ActionSheetIOS=require('ActionSheetIOS');
var Service=require('catapp/views/service.js');var 


View=







React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var Image=React.Image;var TouchableHighlight=React.TouchableHighlight;var LinkingIOS=React.LinkingIOS;var AlertIOS=React.AlertIOS;


var Address=React.createClass({
render:function(){
var view=[];
var items=this.props.data.status?this.props.data.data:[];
var colors=['#E20079','#FFD602','#25BFFE','#F90000','#04E246','#04E246','#00AFC9'];
var color={
backgroundColor:colors[parseInt(Math.random() * 7)]};

for(var i in items) {
view.push(
React.createElement(View,{style:styles.row},
React.createElement(View,{style:[styles.text,color]},
React.createElement(Text,{style:{fontSize:25,color:'#fff',fontWeight:'bold'}},
items[i].username.substr(0,1) || '未')),


React.createElement(View,{style:styles.part},
React.createElement(Text,null,
items[i].username),

React.createElement(Text,{style:styles.unColor},
(items[i].partment || '') + '部－' + (items[i].tag || '') + '人员')),


React.createElement(View,{style:{flex:1}},
React.createElement(TouchableHighlight,{underlayColor:'#fff',
onPress:this.showActionSheet.bind(this,items[i].tel,items[i].email,items[i].username)},
React.createElement(Text,{style:styles.link},
items[i].tel)),


React.createElement(TouchableHighlight,{underlayColor:'#fff',
onPress:this.showActionSheet.bind(this,items[i].tel,items[i].email,items[i].username)},
React.createElement(Text,{style:styles.link},
items[i].email)))));}






return (
React.createElement(ScrollView,null,
view));},




showActionSheet:function(tel,email,name){
var options=[];
options.push('拨打电话给：' + name);
options.push('发送短信给：' + name);
options.push('发送邮件给：' + name);
options.push('取消');

var events=[];
events.push(function(){
LinkingIOS.openURL('tel://' + tel);});

events.push(function(){
LinkingIOS.openURL('sms://' + tel);});

events.push(function(){
LinkingIOS.openURL('mailto://' + email);});



ActionSheetIOS.showActionSheetWithOptions({
options:options,
cancelButtonIndex:options.length - 1},

function(index){
events[index] && events[index]();});}});





var styles=StyleSheet.create({
row:{
height:80,
borderBottomWidth:Util.pixel,
borderBottomColor:'#ccc',
flexDirection:'row',
alignItems:'center'},

text:{
width:50,
height:50,
borderRadius:4,
marginLeft:10,
alignItems:'center',
justifyContent:'center',
backgroundColor:'#E30082'},

part:{
marginLeft:5,
flex:1},

link:{
color:'#1BB7FF',
marginTop:2},

unColor:{
color:'#575656',
marginTop:8,
fontSize:12}});



module.exports = Address;
});
__d('catapp/views/service.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var Service={
host:'http://127.0.0.1:3000',
login:'/user/login',
loginByToken:'/user/login/token',
getUser:'/user/get',
createUser:'/user/create',
getMessage:'/message/get',
updatePassword:'/user/password/update',
deleteUser:'/user/delete'};


module.exports = Service;
});
__d('catapp/views/about.js',["image!me_1","image!github","image!weibo","react-native/Libraries/react-native/react-native.js","catapp/views/about/webview.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var webview=require('catapp/views/about/webview.js');var 


View=





React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;


var About=React.createClass({

render:function(){
return (
React.createElement(ScrollView,{style:styles.container},

React.createElement(View,{style:styles.wrapper},
React.createElement(Image,{style:styles.avatar,source:require('image!me_1')}),
React.createElement(Text,{style:{fontSize:14,marginTop:10,color:'#ABABAB'}},'Author: vczero'),
React.createElement(Text,{style:{fontSize:14,marginBottom:20,color:'#ABABAB'}},'Version: v0.0.1'),

React.createElement(View,{style:{flexDirection:'row'}},
React.createElement(TouchableOpacity,{onPress:this._openWebView.bind(this,'https://github.com/vczero/React-Native-App')},
React.createElement(Image,{style:styles.img,source:require('image!github')})),


React.createElement(TouchableOpacity,{onPress:this._openWebView.bind(this,'http://weibo.com/vczero')},
React.createElement(Image,{style:[styles.img,{width:25,height:25}],source:require('image!weibo')}))))));},








_openWebView:function(url){
this.props.navigator.push({
title:'项目地址',
component:webview,
passProps:{
url:url}});}});





var styles=StyleSheet.create({
container:{
flex:1},

wrapper:{
alignItems:'center',
marginTop:50},

avatar:{
width:90,
height:90,
borderRadius:45},

img:{
width:20,
height:20,
marginRight:5}});



module.exports = About;
});
__d('catapp/views/about/webview.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');var 

WebView=



React.WebView;var ScrollView=React.ScrollView;var Text=React.Text;var View=React.View;


var webview=React.createClass({

render:function(){
return (
React.createElement(View,{style:{flex:1}},
React.createElement(WebView,{url:this.props.url})));}});







module.exports = webview;
});
__d('image!me_1',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/lihua/work/react-native-app/App/catapp/iOS/catapp/Images.xcassets/me_1.imageset/me_1.png","uri":"me_1","width":355,"height":426,"deprecated":true};
});
__d('image!github',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/lihua/work/react-native-app/App/catapp/iOS/catapp/Images.xcassets/github.imageset/github.png","uri":"github","width":208,"height":205,"deprecated":true};
});
__d('image!weibo',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/lihua/work/react-native-app/App/catapp/iOS/catapp/Images.xcassets/weibo.imageset/weibo.png","uri":"weibo","width":28,"height":27,"deprecated":true};
});
__d('catapp/views/manager.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/manager/addUser.js","catapp/views/manager/modifyPassword.js","catapp/views/manager/deleteUser.js","catapp/views/manager/postMessage.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var AddUser=require('catapp/views/manager/addUser.js');
var ModifyPassword=require('catapp/views/manager/modifyPassword.js');
var DeleteUser=require('catapp/views/manager/deleteUser.js');
var PostMessage=require('catapp/views/manager/postMessage.js');var 


View=





React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var AsyncStorage=React.AsyncStorage;


var Manager=React.createClass({

render:function(){
var colors=['#F4000B','#17B4FF','#FFD900','#F00000'];
var tags=['U','A','D','M'];
var items=['修改密码','增加联系人','删除联系人','发布公告'];
var components=[ModifyPassword,AddUser,DeleteUser,PostMessage];
var JSXDOM=[];
for(var i in items) {
JSXDOM.push(
React.createElement(TouchableOpacity,{onPress:this._loadPage.bind(this,components[i],items[i])},
React.createElement(View,{style:[styles.item,{flexDirection:'row'}]},
React.createElement(Text,{style:[styles.tag,{color:colors[i]}]},tags[i]),
React.createElement(Text,{style:[styles.font,{flex:1}]},items[i]))));}






return (
React.createElement(ScrollView,{style:styles.container},
React.createElement(View,{style:styles.wrapper},
JSXDOM),


React.createElement(View,{style:{marginTop:30}},
React.createElement(TouchableOpacity,{onPress:this._clear},
React.createElement(View,{style:[styles.item,{flexDirection:'row'}]},
React.createElement(Text,{style:[styles.tag,{color:colors[i]}]},'Q'),
React.createElement(Text,{style:[styles.font,{flex:1}]},'退出登录'))))));},







_loadPage:function(component,title){
this.props.navigator.push({
title:title,
component:component});},



_clear:function(){
this.props.navigator.pop();
AsyncStorage.clear();}});




var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#F5F5F5'},

item:{
height:40,
justifyContent:'center',
borderTopWidth:Util.pixel,
borderTopColor:'#ddd',
backgroundColor:'#fff',
alignItems:'center'},

font:{
fontSize:15,
marginLeft:5,
marginRight:10},

wrapper:{
marginTop:30},

tag:{
marginLeft:10,
fontSize:16,
fontWeight:'bold'}});



module.exports = Manager;
});
__d('catapp/views/manager/addUser.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/service.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var Service=require('catapp/views/service.js');var 


View=







React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var TextInput=React.TextInput;var PickerIOS=React.PickerIOS;var AlertIOS=React.AlertIOS;

var AddUser=React.createClass({

getInitialState:function(){
var items=['A','B','C','D','E','F'];
var tags=['框架研发','BU产品','BU研发','启明星','项目管理','公共产品'];
return {
items:items,
tags:tags,
selectA:{
backgroundColor:'#3BC1FF',
borderColor:'#3BC1FF'},

select_A:{
color:'#FFF'},

yan:{
backgroundColor:'#3BC1FF',
borderColor:'#3BC1FF'},

yan_text:{
color:'#FFF'},

tag:'研发',
partment:'框架研发'};},



render:function(){
var tagOne=[];
for(var i=0;i < 3;i++) {
tagOne.push(
React.createElement(TouchableOpacity,{onPress:this._select.bind(this,this.state.items[i])},
React.createElement(View,{style:[styles.part,this.state['select' + this.state.items[i]]]},
React.createElement(Text,{style:this.state['select_' + this.state.items[i]]},this.state.tags[i]))));}





var tagTwo=[];
for(var i=3;i < 6;i++) {
tagTwo.push(
React.createElement(TouchableOpacity,{onPress:this._select.bind(this,this.state.items[i])},
React.createElement(View,{style:[styles.part,this.state['select' + this.state.items[i]]]},
React.createElement(Text,{style:this.state['select_' + this.state.items[i]]},this.state.tags[i]))));}





return (
React.createElement(ScrollView,{style:{paddingTop:30}},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.label},'用户名'),
React.createElement(TextInput,{style:styles.input,onChangeText:this._setUserName})),


React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.label},'密码'),
React.createElement(TextInput,{style:styles.input,password:true,placeholder:'初始密码',onChangeText:this._setPassword})),


React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.label},'邮箱'),
React.createElement(TextInput,{style:styles.input,onChangeText:this._setEmail})),


React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.label},'电话'),
React.createElement(TextInput,{style:styles.input,onChangeText:this._setTel})),


React.createElement(View,{style:styles.partment},
tagOne),

React.createElement(View,{style:styles.partment},
tagTwo),


React.createElement(View,{style:{marginTop:30,flexDirection:'row',justifyContent:'center'}},
React.createElement(TouchableOpacity,{onPress:this._selectType.bind(this,'yan')},
React.createElement(View,{style:[styles.part,this.state.yan]},
React.createElement(Text,{style:this.state.yan_text},'研发'))),



React.createElement(TouchableOpacity,{onPress:this._selectType.bind(this,'chan')},
React.createElement(View,{style:[styles.part,this.state.chan]},
React.createElement(Text,{style:this.state.chan_text},'产品'))),



React.createElement(TouchableOpacity,{onPress:this._selectType.bind(this,'project')},
React.createElement(View,{style:[styles.part,this.state.project]},
React.createElement(Text,{style:this.state.project_text},'项目')))),




React.createElement(View,{style:{marginTop:30,alignItems:'center',justifyContent:'center'}},
React.createElement(TouchableOpacity,{onPress:this._addUser},
React.createElement(View,{style:styles.btn},
React.createElement(Text,null,'创建用户'))))));},






_select:function(id){
var obj={};
var color={};
var items={
A:{},
B:{},
C:{},
D:{},
E:{},
F:{}};


obj['select' + id] = {
backgroundColor:'#3BC1FF',
borderColor:'#3BC1FF'};

color['select_' + id] = {
color:'#fff'};

this.setState(obj);
this.setState(color);
this.setState();

delete items[id];
for(var i in items) {
var newObj={};
newObj['select' + i] = {
backgroundColor:'#FFF',
borderColor:'#ddd'};

var newColor={};
newColor['select_' + i] = {
color:'#000'};

this.setState(newObj);
this.setState(newColor);}


var partment='框架研发';
switch(id){
case 'A':
partment = this.state.tags[0];
break;
case 'B':
partment = this.state.tags[1];
break;
case 'C':
partment = this.state.tags[2];
break;
case 'D':
partment = this.state.tags[3];
break;
case 'E':
partment = this.state.tags[4];
break;
case 'F':
partment = this.state.tags[5];
break;}

this.setState({
partment:partment});},


_selectType:function(id){
var obj={};
var color={};
var items={
yan:{},
chan:{},
project:{}};


obj[id] = {
backgroundColor:'#3BC1FF',
borderColor:'#3BC1FF'};

color[id + '_text'] = {
color:'#fff'};

this.setState(obj);
this.setState(color);


delete items[id];
for(var i in items) {
var newObj={};
newObj[i] = {
backgroundColor:'#FFF',
borderColor:'#ddd'};

var newColor={};
newColor[i + '_text'] = {
color:'#000'};

this.setState(newObj);
this.setState(newColor);}


var tag='研发';
switch(id){
case 'yan':
tag = '研发';
break;
case 'chan':
tag = '产品';
break;
case 'project':
tag = '项目';
break;
default:
break;}


this.setState({
tag:tag});},




_setUserName:function(val){
this.setState({
username:val});},



_setPassword:function(val){
this.setState({
password:val});},



_setEmail:function(val){
this.setState({
email:val});},



_setTel:function(val){
this.setState({
tel:val});},



_addUser:function(){
var username=this.state.username;
var email=this.state.email;
var password=this.state.password;
var partment=this.state.partment;
var tag=this.state.tag;
var tel=this.state.tel;

if(!username || !email || !password || !tel){
return AlertIOS.alert('提示','用户名、初始密码、邮箱电话、必填，请确认!');}

var obj={
username:username,
email:email,
password:password,
partment:partment,
tag:tag,
tel:tel};


var path=Service.host + Service.createUser;
Util.post(path,obj,function(data){
if(data.status){
AlertIOS.alert('成功','创建用户成功，请告知用户初始密码');}else 
{
AlertIOS.alert('失败','创建用户失败');}});}});








var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
marginBottom:7},

label:{
width:50,
marginLeft:10},

input:{
borderWidth:Util.pixel,
height:35,
flex:1,
marginRight:20,
borderColor:'#ddd',
borderRadius:4,
paddingLeft:5,
fontSize:14},

partment:{
flexDirection:'row',
justifyContent:'center',
marginTop:10},

part:{
width:65,
height:30,
borderWidth:Util.pixel,
borderColor:'#ddd',
borderRadius:3,
alignItems:'center',
justifyContent:'center',
marginRight:10},

btn:{
borderColor:'#268DFF',
height:35,
width:200,
borderRadius:5,
borderWidth:Util.pixel,
alignItems:'center',
justifyContent:'center'}});




module.exports = AddUser;
});
__d('catapp/views/manager/modifyPassword.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/service.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var Service=require('catapp/views/service.js');var 


View=







React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var TextInput=React.TextInput;var AlertIOS=React.AlertIOS;var AsyncStorage=React.AsyncStorage;

var ModifyUser=React.createClass({

render:function(){
return (
React.createElement(ScrollView,null,

React.createElement(View,{style:{height:35,marginTop:30}},
React.createElement(TextInput,{style:styles.input,password:true,placeholder:'原始密码',onChangeText:this._getOldPassword})),


React.createElement(View,{style:{height:35,marginTop:5}},
React.createElement(TextInput,{style:styles.input,password:true,placeholder:'新密码',onChangeText:this._getNewPassword})),


React.createElement(View,null,
React.createElement(TouchableOpacity,{onPress:this._resetPassword},
React.createElement(View,{style:styles.btn},
React.createElement(Text,{style:{color:'#FFF'}},'修改密码'))))));},







_getOldPassword:function(val){
this.setState({
oldPassword:val});},



_getNewPassword:function(val){
this.setState({
password:val});},



_resetPassword:function(){
var path=Service.host + Service.updatePassword;
var that=this;
console.log(that.state.password);

AsyncStorage.getItem('token',function(err,data){
if(!err){
Util.post(path,{
password:that.state.password,
oldPassword:that.state.oldPassword,
token:data},
function(data){
if(data.status){
AlertIOS.alert('成功',data.data);}else 
{
AlertIOS.alert('失败',data.data);}});}else 


{
AlertIOS.alert('失败',data.data);}});}});







var styles=StyleSheet.create({
input:{
flex:1,
marginLeft:20,
marginRight:20,
height:35,
borderWidth:1,
borderColor:'#ddd',
borderRadius:4,
paddingLeft:5,
fontSize:13},

btn:{
justifyContent:'center',
alignItems:'center',
marginTop:20,
backgroundColor:'#1DB8FF',
height:38,
marginLeft:20,
marginRight:20,
borderRadius:4}});




module.exports = ModifyUser;
});
__d('catapp/views/manager/deleteUser.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/service.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var Service=require('catapp/views/service.js');var 


View=







React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var TextInput=React.TextInput;var AlertIOS=React.AlertIOS;var AsyncStorage=React.AsyncStorage;

var DeleteUser=React.createClass({

render:function(){
return (
React.createElement(ScrollView,null,

React.createElement(View,{style:{height:35,marginTop:30}},
React.createElement(TextInput,{style:styles.input,placeholder:'请输入用户的邮箱',onChangeText:this._getEmail})),


React.createElement(View,null,
React.createElement(TouchableOpacity,{onPress:this._deleteUser},
React.createElement(View,{style:styles.btn},
React.createElement(Text,{style:{color:'#FFF'}},'删除用户'))))));},







_getEmail:function(val){
this.setState({
email:val});},



_deleteUser:function(){
var that=this;
AlertIOS.alert('提示','确认删除该用户？',[
{text:'删除',onPress:function(){
var path=Service.host + Service.deleteUser;
AsyncStorage.getItem('token',function(err,data){
if(!err){
Util.post(path,{
token:data,
email:that.state.email},
function(data){
if(data.status){
AlertIOS.alert('成功','删除成功');}else 
{
AlertIOS.alert('失败','删除失败');}});}else 


{
AlertIOS.alert('提示','没有权限');}});}},




{text:'取消',onPress:function(){return null;}}]);}});





var styles=StyleSheet.create({
input:{
flex:1,
marginLeft:20,
marginRight:20,
height:35,
borderWidth:1,
borderColor:'#ddd',
borderRadius:4,
paddingLeft:5,
fontSize:13},

btn:{
justifyContent:'center',
alignItems:'center',
marginTop:20,
backgroundColor:'#1DB8FF',
height:38,
marginLeft:20,
marginRight:20,
borderRadius:4}});





module.exports = DeleteUser;
});
__d('catapp/views/manager/postMessage.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');var 


View=






React.View;var TextInput=React.TextInput;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var Image=React.Image;var Text=React.Text;

var PostMessage=React.createClass({

render:function(){
return (
React.createElement(ScrollView,null,
React.createElement(View,null,
React.createElement(TextInput,{multiline:true,style:styles.textinput,placeholder:'请输入公告内容'})),

React.createElement(View,{style:{marginTop:20}},
React.createElement(TouchableOpacity,null,
React.createElement(View,{style:styles.btn},
React.createElement(Text,{style:{color:'#fff'}},'发布公告'))))));},







_postMessage:function(){}});





var styles=StyleSheet.create({
textinput:{
flex:1,
height:100,
borderWidth:1,
borderColor:'#ddd',
marginTop:30,
marginLeft:20,
marginRight:20,
paddingLeft:8,
fontSize:13,
borderRadius:4},

btn:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:'#1DB8FF',
height:38,
marginLeft:20,
marginRight:20,
borderRadius:4}});




module.exports = PostMessage;
});
__d('catapp/views/message.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/message/item.js","catapp/views/message/detail.js","catapp/views/service.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var Item=require('catapp/views/message/item.js');
var Detail=require('catapp/views/message/detail.js');
var Service=require('catapp/views/service.js');var 


View=






React.View;var Text=React.Text;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var TextInput=React.TextInput;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;


var Message=React.createClass({
render:function(){
var contents=[];
var items=[];
var height=Util.size.height - 50 - 114;
var urls=[];
var word='春眠不觉晓，知了处处叫';
var component='';

if(this.props.data.status){
contents = this.props.data.data;}


urls.push('https://avatars3.githubusercontent.com/u/6133685?v=3&s=50');
urls.push('http://img1.gtimg.com/13/1309/130992/13099292_200x200_0.jpg');
urls.push('http://tp1.sinaimg.cn/5396425536/180/5718431393/0');
urls.push('http://tp2.sinaimg.cn/1904769205/180/5728293682/1');

for(var i=0;i < contents.length;i++) {
var pic=urls[parseInt(Math.random() * 4)];
items.push(
React.createElement(Item,{
data:contents[i],
nav:this.props.navigator,
pic:pic,
component:Detail,
text:contents[i].message,
name:contents[i].username,
date:contents[i].time}));}



return (
React.createElement(ScrollView,{style:styles.container},
React.createElement(View,{style:{height:50,padding:7}},
React.createElement(TextInput,{style:styles.search,placeholder:'搜索'})),

React.createElement(View,{style:{backgroundColor:'#fff',borderTopWidth:1,borderTopColor:'#ddd'}},
items)));}});







var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#F5F5F5',
flexDirection:'column'},

search:{
height:35,
borderWidth:Util.pixel,
borderColor:'#ccc',
paddingLeft:10,
borderRadius:6,
backgroundColor:'#fff'}});




module.exports = Message;
});
__d('catapp/views/message/item.js',["react-native/Libraries/react-native/react-native.js","catapp/views/util.js","catapp/views/service.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/views/util.js');
var Service=require('catapp/views/service.js');var 


View=




React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;

var Item=React.createClass({
render:function(){
return (
React.createElement(TouchableOpacity,{onPress:this.loadPage.bind(this,this.props.data)},
React.createElement(View,{style:styles.item},
React.createElement(View,{style:styles.width55},
React.createElement(Text,{style:{color:'#fff',fontSize:18,fontWeight:'bold'}},this.props.name.substr(0,1))),

React.createElement(View,{style:{flexDirection:'column',flex:1}},
React.createElement(Text,{numberOfLines:2,style:styles.text},
this.props.text),

React.createElement(Text,{style:styles.date},
this.props.date)),


React.createElement(View,{numberOfLines:1,style:styles.m10},
React.createElement(Text,{style:styles.name},this.props.name)))));},





loadPage:function(data){
var content=data;
this.props.nav.push({
title:'消息详情',
component:this.props.component,
passProps:{
content:content}});}});







var styles=StyleSheet.create({
item:{
height:80,
padding:5,
borderBottomWidth:Util.pixel,
borderBottomColor:'#ddd',
flexDirection:'row',
alignItems:'center'},

img:{
width:50,
height:50,
borderRadius:4},

width55:{
width:50,
height:50,
borderRadius:4,
marginLeft:10,
alignItems:'center',
justifyContent:'center',
backgroundColor:'#05C147',
marginRight:10},

text:{
flex:1,
marginBottom:5,
opacity:0.7},

date:{
color:'#ccc',
fontSize:11},

m10:{
marginLeft:10},

name:{
color:'#929292',
fontSize:13}});



module.exports = Item;
});
__d('catapp/views/message/detail.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

React=require('react-native/Libraries/react-native/react-native.js');var 

View=





React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var Image=React.Image;var ScrollView=React.ScrollView;var TouchableOpacity=React.TouchableOpacity;

var Detail=React.createClass({
render:function(){
var content=this.props.content;
return (
React.createElement(ScrollView,null,

React.createElement(View,{style:styles.content},
React.createElement(Text,{style:{lineHeight:20}},content.message)),


React.createElement(View,{style:[styles.luokuan,{marginTop:25}]},
React.createElement(View,{style:{flex:1}}),
React.createElement(Text,{style:[styles.text,{color:'#007AFF'}]},content.username)),


React.createElement(View,{style:styles.luokuan},
React.createElement(View,{style:{flex:1}}),
React.createElement(Text,{style:[styles.text,{color:'#3BC1FF'}]},content.time))));}});







var styles=StyleSheet.create({
content:{
marginTop:20,
marginLeft:15,
marginRight:15,
opacity:0.85},

luokuan:{
flex:1,
flexDirection:'row',
marginRight:20},

text:{
lineHeight:20,
width:90}});



module.exports = Detail;
});
__d('catapp/Nearby/index.js',["react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/bank.js","catapp/Nearby/views/film.js","catapp/Nearby/views/food.js","catapp/Nearby/views/toilet.js","catapp/Nearby/views/map.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');
var Bank=require('catapp/Nearby/views/bank.js');
var Film=require('catapp/Nearby/views/film.js');
var Food=require('catapp/Nearby/views/food.js');
var Toilet=require('catapp/Nearby/views/toilet.js');
var Map=require('catapp/Nearby/views/map.js');var 


AppRegistry=







React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var ScrollView=React.ScrollView;var NavigatorIOS=React.NavigatorIOS;var StatusBarIOS=React.StatusBarIOS;var TabBarIOS=React.TabBarIOS;


_GEO_OPEN = true;

_GEO_TEST_POS = '121.390686,31.213976';


StatusBarIOS.setStyle('light-content');

StatusBarIOS.setNetworkActivityIndicatorVisible(true);

var Nearby=React.createClass({
getInitialState:function(){
return {
selected:'美食'};},


render:function(){var _this=this;
return (
React.createElement(View,{style:styles.container},
React.createElement(TabBarIOS,null,
React.createElement(TabBarIOS.Item,{
title:'美食',
selected:this.state.selected === '美食',
icon:require("image!food"),
onPress:function(){_this.setState({selected:'美食'});}},
React.createElement(NavigatorIOS,{
barTintColor:'#007AFF',
titleTextColor:'#fff',
tintColor:'#fff',
ref:'nav_food',
style:styles.container,
initialRoute:{
component:Food,
title:'美食',
rightButtonTitle:'地图',
onRightButtonPress:function(){
_this.refs.nav_food.navigator.push({
title:'地图',
component:Map,
passProps:{
type:'餐饮'}});}}})),







React.createElement(TabBarIOS.Item,{
title:'电影',
selected:this.state.selected === '电影',
icon:require("image!film"),
onPress:function(){_this.setState({selected:'电影'});}},
React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'#007AFF',
titleTextColor:'#fff',
tintColor:'#fff',
ref:'nav_film',
initialRoute:{
component:Film,
title:'电影',
rightButtonTitle:'地图',
onRightButtonPress:function(){
_this.refs.nav_film.navigator.push({
title:'地图',
component:Map,
passProps:{
type:'电影院'}});}}})),







React.createElement(TabBarIOS.Item,{
title:'银行',
selected:this.state.selected === '银行',
icon:require("image!bank"),
onPress:function(){_this.setState({selected:'银行'});}},
React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'#007AFF',
titleTextColor:'#fff',
tintColor:'#fff',
ref:'nav_bank',
initialRoute:{
component:Bank,
title:'银行',
rightButtonTitle:'地图',
onRightButtonPress:function(){
_this.refs.nav_bank.navigator.push({
title:'地图',
component:Map,
passProps:{
type:'银行'}});}}})),








React.createElement(TabBarIOS.Item,{
title:'卫生间',
selected:this.state.selected === '卫生间',
icon:require("image!toilet"),
onPress:function(){_this.setState({selected:'卫生间'});}},
React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'#007AFF',
titleTextColor:'#fff',
tintColor:'#fff',
ref:'nav_toilet',
initialRoute:{
component:Toilet,
title:'卫生间',
rightButtonTitle:'地图',
onRightButtonPress:function(){
_this.refs.nav_toilet.navigator.push({
title:'地图',
component:Map,
passProps:{
type:'厕所'}});}}})))));}});













var styles=StyleSheet.create({
container:{
flex:1}});



module.exports = Nearby;
});
__d('catapp/Nearby/views/bank.js',["react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/list.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var List=require('catapp/Nearby/views/list.js');
var Bank=React.createClass({
render:function(){
return (
React.createElement(List,{type:'银行',nav:this.props.navigator}));}});




module.exports = Bank;
});
__d('catapp/Nearby/views/list.js',["Geolocation","react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/util.js","catapp/Nearby/views/detail.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');
var Geolocation=require('Geolocation');
var Util=require('catapp/Nearby/views/util.js');
var Detail=require('catapp/Nearby/views/detail.js');var 


View=










React.View;var ScrollView=React.ScrollView;var Text=React.Text;var StyleSheet=React.StyleSheet;var TextInput=React.TextInput;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var TouchableOpacity=React.TouchableOpacity;var LinkingIOS=React.LinkingIOS;var ActionSheetIOS=React.ActionSheetIOS;var WebView=React.WebView;var AsyncStorage=React.AsyncStorage;

var List=React.createClass({
getInitialState:function(){
return {
list:null,
count:0,
keywords:''};},


render:function(){
var items=[];
if(this.state.list){
var len=this.state.list.length > 10?10:this.state.list.length;
for(var i=0;i < len;i++) {
var obj=this.state.list[i];
items.push(
React.createElement(TouchableOpacity,{style:styles.item,onPress:this._loadDetail.bind(this,obj.id,obj.name)},
React.createElement(View,{style:styles.row},
React.createElement(View,{style:{flex:1}},
React.createElement(Text,{numberOfLines:1,style:styles.name},obj.name),
React.createElement(Text,{numberOfLines:1,style:styles.type},obj.type)),

React.createElement(View,{style:styles.distance},
React.createElement(Text,{numberOfLines:1,style:[styles.mi,{color:'#4C4C4C'}]},
obj.distance,'米'),

React.createElement(Text,{numberOfLines:1,style:styles.address},obj.address))),




obj.tel.length?
React.createElement(TouchableOpacity,{style:styles.phone,onPress:this._call.bind(this,obj.tel)},
React.createElement(Text,{numberOfLines:1},'电话')):

null));}}





var placeholder='搜索' + this.props.type;
return (
React.createElement(ScrollView,{style:styles.container},
React.createElement(View,{style:styles.searchBg},
React.createElement(TextInput,{style:styles.input,placeholder:placeholder,
onChangeText:this._onChangeText,
onEndEditing:this._onEndEditing}),
React.createElement(View,null,
React.createElement(Text,{style:styles.tip},'已为您筛选',

React.createElement(Text,{style:{color:'#FA2530'}},this.state.count),'条数据'))),




items,
items.length?null:React.createElement(View,{style:styles.activity},React.createElement(ActivityIndicatorIOS,{color:'#248BFD'})),
React.createElement(View,{style:{height:40}})));},



componentDidMount:function(){
var that=this;
Geolocation.getCurrentPosition(function(data){
var lnglat=data.coords.longitude + ',' + data.coords.latitude;
AsyncStorage.setItem('pos',lnglat);
var url=Util.searchURL + 'key=' + Util.amapKey + '&keywords=' + 
that.props.type + '&extensions=base';
if(_GEO_OPEN){
url += '&location=' + lnglat;
that._doGetData(url);}else 
{
url += '&location=' + _GEO_TEST_POS;
that._doGetData(url);}},

function(err){
alert('定位失败，请重新开启应用定位');});},



_doGetData:function(url){
var that=this;
Util.getJSON(url,function(data){
if(data.status && data.info === 'OK'){
var count=data.pois.length > 10?10:data.pois.length;
that._addStorage(data);
that.setState({
list:data.pois,
count:count});}else 

{
alert('没有查询到相应的数据');}});},





_loadDetail:function(id,name){
this.props.nav.push({
component:Detail,
title:name,
passProps:{
id:id}});},




_onChangeText:function(val){
this.setState({
keywords:val});},


_onEndEditing:function(){
var that=this;
var keywords=this.state.keywords;
var url=Util.searchURL + 'key=' + Util.amapKey + '&keywords=' + 
keywords + '&types=' + that.props.type + '&extensions=base';
that.setState({
list:null});

AsyncStorage.getItem('pos',function(err,result){
if(_GEO_OPEN){
if(!err){
url += '&location=' + result;
that._doGetData(url);}else 
{
alert('定位失败');}}else 

{
url += '&location=' + _GEO_TEST_POS;
that._doGetData(url);}});},





_addStorage:function(data){
var posArr=[];
var len=data.pois.length > 10?10:data.pois.length;
for(var i=0;i < len;i++) {
posArr.push(data.pois[i].location);}

var posStr=posArr.join(',');
AsyncStorage.setItem('_' + this.props.type,posStr);},



_call:function(tel){
if(tel.length){
var arr=tel.split(';');
var BUTTONS=[];
for(var i in arr) {
BUTTONS.push(arr[i]);}

BUTTONS.push('取消');

ActionSheetIOS.showActionSheetWithOptions({
options:BUTTONS,
cancelButtonIndex:BUTTONS.length - 1},
function(index){
arr[index] && LinkingIOS.openURL('tel://' + arr[index]);});}else 

{
alert('没有提供号码');}}});





var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#ddd'},

input:{
height:38,
marginLeft:10,
marginRight:10,
borderWidth:Util.pixel,
paddingLeft:5,
marginTop:10,
borderColor:'#868687',
borderRadius:3,
fontSize:15},

tip:{
fontSize:12,
marginLeft:10,
marginTop:5,
color:'#505050'},

row:{
flexDirection:'row',
marginLeft:10,
marginRight:10,
marginTop:10,
paddingTop:5},

distance:{
width:120,
alignItems:'flex-end'},

name:{
fontSize:15,
marginBottom:6},

type:{
fontSize:12,
color:'#686868'},

mi:{
fontSize:12,
color:'#686868'},

address:{
fontSize:12,
marginTop:5,
color:'#686868'},

phone:{
marginLeft:10,
marginRight:10,
height:30,
marginTop:10,
justifyContent:'center',
alignItems:'center',
borderWidth:Util.pixel,
borderColor:'#ccc',
borderRadius:2},

searchBg:{
backgroundColor:'#fff',
paddingBottom:10},

item:{
marginTop:10,
backgroundColor:'#fff',
paddingBottom:10,
borderTopWidth:Util.pixel,
borderBottomWidth:Util.pixel,
borderColor:'#ccc'},

activity:{
marginTop:50,
justifyContent:'center',
alignItems:'center'}});



module.exports = List;
});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success === 'function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {},
geo_success,
geo_error || logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0;ii < subscriptions.length;ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0;ii < subscriptions.length;ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;
});
__d('catapp/Nearby/views/util.js',["Dimensions","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');
var Dimensions=require('Dimensions');var 


PixelRatio=
React.PixelRatio;

var Util={


pixel:1 / PixelRatio.get(),

size:{
width:Dimensions.get('window').width,
height:Dimensions.get('window').height},



post:function(url,data,callback){
var fetchOptions={
method:'POST',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify(data)};


fetch(url,fetchOptions).
then(function(response){return response.text();}).
then(function(responseText){
callback(JSON.parse(responseText));});},




getJSON:function(url,callback){
fetch(url).
then(function(response){return response.text();}).
then(function(responseText){
callback(JSON.parse(responseText));});},



amapKey:'98cd4d3c1c2865132e73d851654c9c1b',

searchURL:'http://restapi.amap.com/v3/place/around?',

detailURL:'http://restapi.amap.com/v3/place/detail?'};



module.exports = Util;
});
__d('catapp/Nearby/views/detail.js',["react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');
var Util=require('catapp/Nearby/views/util.js');var 


View=






React.View;var ScrollView=React.ScrollView;var Text=React.Text;var StyleSheet=React.StyleSheet;var TextInput=React.TextInput;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var TouchableOpacity=React.TouchableOpacity;

var FoodDetail=React.createClass({
getInitialState:function(){
return {
data:null};},


render:function(){
return (
React.createElement(ScrollView,null,
this.state.data?
React.createElement(View,{style:styles.content},
React.createElement(Text,{style:styles.name},this.state.data.name),
React.createElement(Text,{style:styles.types},'类型：',

this.state.data.type),

React.createElement(Text,{style:styles.address},'地址：',

this.state.data.address),

React.createElement(Text,{style:styles.tag},'标签：',

this.state.data.tag),

React.createElement(Text,{style:styles.server},'服务：',

this.state.data.server)):


null));},



componentDidMount:function(){
var that=this;
var url=Util.detailURL + 'key=' + Util.amapKey + '&id=' + this.props.id + '&extensions=all';
Util.getJSON(url,function(data){
if(data.status && data.info === 'OK' && data.pois.length){
var obj=data.pois[0];
if(obj.deep_info && obj.deep_info.tag){
obj.server = obj.deep_info.tag;}

that.setState({
data:obj});}else 

{
alert('数据服务出错');}});}});






var styles=StyleSheet.create({
container:{
flex:1},

name:{
fontSize:15,
color:'#1D92F5',
fontWeight:'bold'},

content:{
marginLeft:10,
marginRight:10,
marginTop:10},

tag:{
fontSize:13,
marginTop:10},

types:{
marginTop:10,
fontSize:13,
color:'#4C4C4C'},

address:{
fontSize:13,
color:'#4C4C4C'},

server:{
marginTop:10,
fontSize:13}});






module.exports = FoodDetail;
});
__d('catapp/Nearby/views/film.js',["react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/list.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var List=require('catapp/Nearby/views/list.js');
var Film=React.createClass({
render:function(){
return (
React.createElement(List,{type:'电影院',nav:this.props.navigator}));}});




module.exports = Film;
});
__d('catapp/Nearby/views/food.js',["react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/list.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var List=require('catapp/Nearby/views/list.js');
var Food=React.createClass({
render:function(){
return (
React.createElement(List,{type:'餐饮',nav:this.props.navigator}));}});



module.exports = Food;
});
__d('catapp/Nearby/views/toilet.js',["react-native/Libraries/react-native/react-native.js","catapp/Nearby/views/list.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');
var List=require('catapp/Nearby/views/list.js');
var Toilet=React.createClass({
render:function(){
return (
React.createElement(List,{type:'厕所',nav:this.props.navigator}));}});





module.exports = Toilet;
});
__d('catapp/Nearby/views/map.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
React=require('react-native/Libraries/react-native/react-native.js');var 

View=



React.View;var Text=React.Text;var WebView=React.WebView;var AsyncStorage=React.AsyncStorage;

var Map=React.createClass({
getInitialState:function(){
return {
url:null};},


render:function(){
var webView=null;
if(this.state.url){
webView = React.createElement(WebView,{url:this.state.url});}

return (
React.createElement(View,{style:{flex:1}},
webView));},



componentDidMount:function(){
var that=this;
AsyncStorage.multiGet(['_' + that.props.type,'pos'],function(err,result){
if(!err){
var pos=result[1][1];
var markers=result[0][1];
var url='http://vczero.github.io/webview/index.html?';
if(_GEO_OPEN){
url += 'pos=' + pos + '&markers=' + markers;}else 
{
url += 'pos=' + _GEO_TEST_POS + '6&markers=' + markers;}

that.setState({
url:url});}else 

{
alert('定位失败');}});}});






module.exports = Map;
});
;require("catapp/index.ios.js");
//@ sourceMappingURL=/index.ios.map